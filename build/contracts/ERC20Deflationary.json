{
  "contractName": "ERC20Deflationary",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupply_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Airdrop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DisabledAutoBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DisabledAutoSwapAndLiquify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DisabledReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EnabledAutoBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EnabledAutoSwapAndLiquify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EnabledReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ExcludeAccountFromFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ExcludeAccountFromReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "IncludeAccountInFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "IncludeAccountInReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previous",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "current",
          "type": "uint256"
        }
      ],
      "name": "MinTokensBeforeSwapUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensSwapped",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethReceived",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensAddedToLiquidity",
          "type": "uint256"
        }
      ],
      "name": "SwapAndLiquify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "previousTax",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "previousDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "currentTax",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "currentDecimal",
          "type": "uint8"
        }
      ],
      "name": "TaxBurnUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "previousTax",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "previousDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "currentTax",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "currentDecimal",
          "type": "uint8"
        }
      ],
      "name": "TaxLiquifyUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "previousTax",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "previousDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "currentTax",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "currentDecimal",
          "type": "uint8"
        }
      ],
      "name": "TaxRewardUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxBurn",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxReward",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxLiquify",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxBurnDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxRewardDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxLiquifyDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "autoBurnEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "autoSwapAndLiquifyEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTokensBeforeSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBurnt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokensLockedInLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalETHLockedInLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isExcludedFromReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isExcludedFromFee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "airdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "taxBurn_",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "taxBurnDecimals_",
          "type": "uint8"
        }
      ],
      "name": "enableAutoBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "taxReward_",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "taxRewardDecimals_",
          "type": "uint8"
        }
      ],
      "name": "enableReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "taxLiquify_",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "taxLiquifyDecimals_",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "minTokensBeforeSwap_",
          "type": "uint256"
        }
      ],
      "name": "enableAutoSwapAndLiquify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableAutoBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableAutoSwapAndLiquify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minTokensBeforeSwap_",
          "type": "uint256"
        }
      ],
      "name": "setMinTokensBeforeSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "taxBurn_",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "taxBurnDecimals_",
          "type": "uint8"
        }
      ],
      "name": "setTaxBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "taxReward_",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "taxRewardDecimals_",
          "type": "uint8"
        }
      ],
      "name": "setTaxReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "taxLiquify_",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "taxLiquifyDecimals_",
          "type": "uint8"
        }
      ],
      "name": "setTaxLiquify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DisabledAutoBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DisabledAutoSwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DisabledReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledAutoBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledAutoSwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ExcludeAccountFromFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ExcludeAccountFromReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"IncludeAccountInFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"IncludeAccountInReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"}],\"name\":\"MinTokensBeforeSwapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensAddedToLiquidity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"previousTax\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"previousDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"currentTax\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"currentDecimal\",\"type\":\"uint8\"}],\"name\":\"TaxBurnUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"previousTax\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"previousDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"currentTax\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"currentDecimal\",\"type\":\"uint8\"}],\"name\":\"TaxLiquifyUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"previousTax\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"previousDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"currentTax\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"currentDecimal\",\"type\":\"uint8\"}],\"name\":\"TaxRewardUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoBurnEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoSwapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAutoBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAutoSwapAndLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"taxBurn_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"taxBurnDecimals_\",\"type\":\"uint8\"}],\"name\":\"enableAutoBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"taxLiquify_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"taxLiquifyDecimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minTokensBeforeSwap_\",\"type\":\"uint256\"}],\"name\":\"enableAutoSwapAndLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"taxReward_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"taxRewardDecimals_\",\"type\":\"uint8\"}],\"name\":\"enableReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTokensBeforeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokensBeforeSwap_\",\"type\":\"uint256\"}],\"name\":\"setMinTokensBeforeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"taxBurn_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"taxBurnDecimals_\",\"type\":\"uint8\"}],\"name\":\"setTaxBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"taxLiquify_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"taxLiquifyDecimals_\",\"type\":\"uint8\"}],\"name\":\"setTaxLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"taxReward_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"taxRewardDecimals_\",\"type\":\"uint8\"}],\"name\":\"setTaxReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxBurn\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxBurnDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxLiquify\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxLiquifyDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxReward\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRewardDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurnt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalETHLockedInLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensLockedInLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"airdrop(uint256)\":{\"details\":\"Airdrop tokens to all holders that are included from reward.   Requirements: - the caller must have a balance of at least `amount`.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"autoBurnEnabled()\":{\"details\":\"Returns true if auto burn feature is enabled.\"},\"autoSwapAndLiquifyEnabled()\":{\"details\":\"Returns true if auto swap and liquify feature is enabled.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"currentSupply()\":{\"details\":\"Returns current supply of the token.  (currentSupply := totalSupply - totalBurnt)\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"disableAutoBurn()\":{\"details\":\"Disables the auto burn feature. Emits a {DisabledAutoBurn} event. Requirements: - auto burn feature mush be enabled.\"},\"disableAutoSwapAndLiquify()\":{\"details\":\"Disables the auto swap and liquify feature. Emits a {DisabledAutoSwapAndLiquify} event. Requirements: - auto swap and liquify feature mush be enabled.\"},\"disableReward()\":{\"details\":\"Disables the reward feature. Emits a {DisabledReward} event. Requirements: - reward feature mush be enabled.\"},\"enableAutoBurn(uint8,uint8)\":{\"details\":\"Enables the auto burn feature. Burn transaction amount * `taxBurn_` amount of tokens each transaction when enabled. Emits a {EnabledAutoBurn} event. Requirements: - auto burn feature mush be disabled. - tax must be greater than 0. - tax decimals + 2 must be less than token decimals.  (because tax rate is in percentage)\"},\"enableAutoSwapAndLiquify(uint8,uint8,uint256)\":{\"details\":\"Enables the auto swap and liquify feature. Swaps half of transaction amount * `taxLiquify_` amount of tokens  to ETH and pair with the other half of tokens to the LP each transaction when enabled. Emits a {EnabledAutoSwapAndLiquify} event. Requirements: - auto swap and liquify feature mush be disabled. - tax must be greater than 0. - tax decimals + 2 must be less than token decimals.  (because tax rate is in percentage)\"},\"enableReward(uint8,uint8)\":{\"details\":\"Enables the reward feature. Distribute transaction amount * `taxReward_` amount of tokens each transaction when enabled. Emits a {EnabledReward} event. Requirements: - reward feature mush be disabled. - tax must be greater than 0. - tax decimals + 2 must be less than token decimals.  (because tax rate is in percentage)\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isExcludedFromFee(address)\":{\"details\":\"Returns whether an account is excluded from fee. \"},\"isExcludedFromReward(address)\":{\"details\":\"Returns whether an account is excluded from reward. \"},\"minTokensBeforeSwap()\":{\"details\":\"Returns the threshold before swap and liquify.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rewardEnabled()\":{\"details\":\"Returns true if reward feature is enabled.\"},\"setMinTokensBeforeSwap(uint256)\":{\"details\":\"Updates `_minTokensBeforeSwap` Emits a {MinTokensBeforeSwap} event. Requirements: - `minTokensBeforeSwap_` must be less than _currentSupply.\"},\"setTaxBurn(uint8,uint8)\":{\"details\":\"Updates taxBurn Emits a {TaxBurnUpdate} event. Requirements: - auto burn feature must be enabled. - total tax rate must be less than 100%.\"},\"setTaxLiquify(uint8,uint8)\":{\"details\":\"Updates taxLiquify Emits a {TaxLiquifyUpdate} event. Requirements: - auto swap and liquify feature must be enabled. - total tax rate must be less than 100%.\"},\"setTaxReward(uint8,uint8)\":{\"details\":\"Updates taxReward Emits a {TaxRewardUpdate} event. Requirements: - reward feature must be enabled. - total tax rate must be less than 100%.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"taxBurn()\":{\"details\":\"Returns the current burn tax.\"},\"taxBurnDecimals()\":{\"details\":\"Returns the current burn tax decimals.\"},\"taxLiquify()\":{\"details\":\"Returns the current liquify tax.\"},\"taxLiquifyDecimals()\":{\"details\":\"Returns the current liquify tax decimals.\"},\"taxReward()\":{\"details\":\"Returns the current reward tax.\"},\"taxRewardDecimals()\":{\"details\":\"Returns the current reward tax decimals.\"},\"totalBurnt()\":{\"details\":\"Returns the total number of tokens burnt. \"},\"totalETHLockedInLiquidity()\":{\"details\":\"Returns the total number of ETH locked in the LP.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalTokensLockedInLiquidity()\":{\"details\":\"Returns the total number of tokens locked in the LP.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uniswapV2Pair()\":{\"details\":\"Returns the address of this token and WETH pair.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC20Deflationary.sol\":\"ERC20Deflationary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":24576},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"project:/contracts/ERC20Deflationary.sol\":{\"keccak256\":\"0x76f223b6e663dbe852815bff2910679e79ea6184f9484cef7605ffbc0efb5444\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5253c0548079be55d50e50b59f5eb50f35a9cad3b5220eea76a8211987c464a\",\"dweb:/ipfs/Qma3vdjWQLkwNLRfHxEtkQ8iiPuspJLjppsyeBrD6xmki1\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200406d3803806200406d8339810160408190526200003491620002ad565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35083516200008a90601190602087019062000154565b508251620000a090601290602086019062000154565b506008805460ff60d01b1916600160d01b60ff851602179055620000c682600a6200037d565b620000d290826200044b565b6009819055600a819055620000ea90600019620004c4565b620000f8906000196200046d565b600b819055336000818152600160209081526040808320949094556009549351938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050505062000511565b828054620001629062000487565b90600052602060002090601f016020900481019282620001865760008555620001d1565b82601f10620001a157805160ff1916838001178555620001d1565b82800160010185558215620001d1579182015b82811115620001d1578251825591602001919060010190620001b4565b50620001df929150620001e3565b5090565b5b80821115620001df5760008155600101620001e4565b600082601f8301126200020b578081fd5b81516001600160401b0380821115620002285762000228620004fb565b604051601f8301601f19908116603f01168101908282118183101715620002535762000253620004fb565b816040528381526020925086838588010111156200026f578485fd5b8491505b8382101562000292578582018301518183018401529082019062000273565b83821115620002a357848385830101525b9695505050505050565b60008060008060808587031215620002c3578384fd5b84516001600160401b0380821115620002da578586fd5b620002e888838901620001fa565b95506020870151915080821115620002fe578485fd5b506200030d87828801620001fa565b935050604085015160ff8116811462000324578283fd5b6060959095015193969295505050565b600181815b8085111562000375578160001904821115620003595762000359620004e5565b808516156200036757918102915b93841c939080029062000339565b509250929050565b60006200038e60ff84168362000395565b9392505050565b600082620003a65750600162000445565b81620003b55750600062000445565b8160018114620003ce5760028114620003d957620003f9565b600191505062000445565b60ff841115620003ed57620003ed620004e5565b50506001821b62000445565b5060208310610133831016604e8410600b84101617156200041e575081810a62000445565b6200042a838362000334565b8060001904821115620004415762000441620004e5565b0290505b92915050565b6000816000190483118215151615620004685762000468620004e5565b500290565b600082821015620004825762000482620004e5565b500390565b600181811c908216806200049c57607f821691505b60208210811415620004be57634e487b7160e01b600052602260045260246000fd5b50919050565b600082620004e057634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b613b4c80620005216000396000f3fe6080604052600436106102eb5760003560e01c80637656e14611610184578063a9059cbb116100d6578063e5d41c6b1161008a578063f91f054011610064578063f91f0540146108ff578063fa6e3f5414610914578063fbfa089c1461093457600080fd5b8063e5d41c6b14610898578063ea1c38b2146108ad578063f2fde38b146108df57600080fd5b8063d3f1e9e6116100bb578063d3f1e9e6146107f1578063d42ac37714610811578063dd62ed3e1461084557600080fd5b8063a9059cbb146107a0578063ad8e91dd146107c057600080fd5b806395d89b4111610138578063998acc0e11610112578063998acc0e146107425780639dd255da14610762578063a457c2d71461078057600080fd5b806395d89b41146106f8578063966ff6501461070d57806397dc4a131461072257600080fd5b806379cc67901161016957806379cc67901461066757806388f82020146106875780638da5cb5b146106cd57600080fd5b80637656e1461461063d578063771282f61461065257600080fd5b8063470d5cbd1161023d5780635342acb4116101f15780636e999d36116101cb5780636e999d36146105f357806370a0823114610608578063715018a61461062857600080fd5b80635342acb4146105785780636483ea8b146105be578063681bdc99146105d357600080fd5b806348a464731161022257806348a46473146104ec57806348abdec51461050c57806349bd5a5e1461052c57600080fd5b8063470d5cbd146104b75780634895c3e6146104cc57600080fd5b806318160ddd1161029f578063313ce56711610279578063313ce5671461043f578063395093511461047557806342966c681461049557600080fd5b806318160ddd146103e35780631c3034951461040257806323b872dd1461041f57600080fd5b8063095ea7b3116102d0578063095ea7b31461035f57806313facdb71461038f57806317ee6995146103c457600080fd5b806301b71531146102f757806306fdde031461033d57600080fd5b366102f257005b600080fd5b34801561030357600080fd5b5060085477010000000000000000000000000000000000000000000000900460ff165b60405160ff90911681526020015b60405180910390f35b34801561034957600080fd5b50610352610964565b60405161033491906137f5565b34801561036b57600080fd5b5061037f61037a366004613760565b6109f6565b6040519015158152602001610334565b34801561039b57600080fd5b50600854790100000000000000000000000000000000000000000000000000900460ff16610326565b3480156103d057600080fd5b506013546301000000900460ff1661037f565b3480156103ef57600080fd5b506009545b604051908152602001610334565b34801561040e57600080fd5b50601354610100900460ff1661037f565b34801561042b57600080fd5b5061037f61043a366004613725565b610a0d565b34801561044b57600080fd5b506008547a010000000000000000000000000000000000000000000000000000900460ff16610326565b34801561048157600080fd5b5061037f610490366004613760565b610b17565b3480156104a157600080fd5b506104b56104b0366004613789565b610b5b565b005b3480156104c357600080fd5b506104b5610b68565b3480156104d857600080fd5b506104b56104e73660046137a1565b610cac565b3480156104f857600080fd5b506104b5610507366004613789565b610eef565b34801561051857600080fd5b506104b56105273660046137ca565b611012565b34801561053857600080fd5b5060085473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610334565b34801561058457600080fd5b5061037f6105933660046136d9565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205460ff1690565b3480156105ca57600080fd5b506104b5611259565b3480156105df57600080fd5b506104b56105ee3660046137a1565b61139b565b3480156105ff57600080fd5b50600e546103f4565b34801561061457600080fd5b506103f46106233660046136d9565b61163c565b34801561063457600080fd5b506104b56116c2565b34801561064957600080fd5b506104b5611798565b34801561065e57600080fd5b50600a546103f4565b34801561067357600080fd5b506104b5610682366004613760565b6118db565b34801561069357600080fd5b5061037f6106a23660046136d9565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205460ff1690565b3480156106d957600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610553565b34801561070457600080fd5b5061035261197c565b34801561071957600080fd5b50600d546103f4565b34801561072e57600080fd5b506104b561073d366004613789565b61198b565b34801561074e57600080fd5b506104b561075d3660046137a1565b611b2b565b34801561076e57600080fd5b5060135462010000900460ff1661037f565b34801561078c57600080fd5b5061037f61079b366004613760565b611d70565b3480156107ac57600080fd5b5061037f6107bb366004613760565b611e26565b3480156107cc57600080fd5b506008547501000000000000000000000000000000000000000000900460ff16610326565b3480156107fd57600080fd5b506104b561080c3660046137a1565b611e33565b34801561081d57600080fd5b506008547801000000000000000000000000000000000000000000000000900460ff16610326565b34801561085157600080fd5b506103f46108603660046136f3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260066020908152604080832093909416825291909152205490565b3480156108a457600080fd5b506010546103f4565b3480156108b957600080fd5b50600854760100000000000000000000000000000000000000000000900460ff16610326565b3480156108eb57600080fd5b506104b56108fa3660046136d9565b6120cb565b34801561090b57600080fd5b50600f546103f4565b34801561092057600080fd5b506104b561092f3660046137a1565b612248565b34801561094057600080fd5b5060085474010000000000000000000000000000000000000000900460ff16610326565b60606011805461097390613a5a565b80601f016020809104026020016040519081016040528092919081815260200182805461099f90613a5a565b80156109ec5780601f106109c1576101008083540402835291602001916109ec565b820191906000526020600020905b8154815290600101906020018083116109cf57829003601f168201915b5050505050905090565b6000610a033384846124cd565b5060015b92915050565b6000610a1a84848461264c565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600660209081526040808320338452909152902054821115610ac55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260066020908152604080832033808552925290912054610b0d918691610b08908690613a43565b6124cd565b5060019392505050565b33600081815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610a03918590610b08908690613866565b610b6533826129f8565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bcf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b6013546301000000900460ff16610c4e5760405162461bcd60e51b815260206004820152602360248201527f526577617264206665617475726520697320616c72656164792064697361626c60448201527f65642e00000000000000000000000000000000000000000000000000000000006064820152608401610abc565b610c59600080612248565b601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff1690556040517f9843194c3ceed34b5019222853f7806a15e8658437ee2a92d9497af23775eb1c90600090a1565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b60135462010000900460ff1615610d925760405162461bcd60e51b815260206004820152602560248201527f4175746f206275726e206665617475726520697320616c726561647920656e6160448201527f626c65642e0000000000000000000000000000000000000000000000000000006064820152608401610abc565b60008260ff1611610de55760405162461bcd60e51b815260206004820152601b60248201527f546178206d7573742062652067726561746572207468616e20302e00000000006044820152606401610abc565b6008547a010000000000000000000000000000000000000000000000000000900460ff16610e1482600261387e565b60ff161115610e8b5760405162461bcd60e51b815260206004820152603160248201527f54617820646563696d616c73206d757374206265206c657373207468616e207460448201527f6f6b656e20646563696d616c73202d20320000000000000000000000000000006064820152608401610abc565b601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff1662010000179055610ec2828261139b565b6040517f1ae0c73021a2d0e597101e249754f53e8496443b3820ba2128b562a9873ad0b190600090a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b600a548110610fcd5760405162461bcd60e51b815260206004820152603760248201527f6d696e546f6b656e734265666f726553776170206d757374206265206869676860448201527f6572207468616e2063757272656e7420737570706c792e0000000000000000006064820152608401610abc565b601080549082905560408051828152602081018490527fd2f58a5c369e86bc74f3b5be6f9a34224ebb43d603f7acee04b07ef21c7d14bf910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146110795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b601354610100900460ff16156110f75760405162461bcd60e51b815260206004820152603160248201527f4175746f207377617020616e64206c697175696679206665617475726520697360448201527f20616c726561647920656e61626c65642e0000000000000000000000000000006064820152608401610abc565b60008360ff161161114a5760405162461bcd60e51b815260206004820152601b60248201527f546178206d7573742062652067726561746572207468616e20302e00000000006044820152606401610abc565b6008547a010000000000000000000000000000000000000000000000000000900460ff1661117983600261387e565b60ff1611156111f05760405162461bcd60e51b815260206004820152603160248201527f54617820646563696d616c73206d757374206265206c657373207468616e207460448201527f6f6b656e20646563696d616c73202d20320000000000000000000000000000006064820152608401610abc565b6010819055601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010017905561122b8383611e33565b6040517fa00cf3c70c4ccd1ccc7e6403d8e96dc52e5727f0b30bffb4ea2969689fcb600890600090a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146112c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b601354610100900460ff1661133d5760405162461bcd60e51b815260206004820152603260248201527f4175746f207377617020616e64206c697175696679206665617475726520697360448201527f20616c72656164792064697361626c65642e00000000000000000000000000006064820152608401610abc565b611348600080611e33565b601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690556040517f8b81884e0d82e2abd8363cce812b78c588d27387411db0470222a728a917783e90600090a1565b60005473ffffffffffffffffffffffffffffffffffffffff1633146114025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b60135462010000900460ff166114a65760405162461bcd60e51b815260206004820152604360248201527f4175746f206275726e2066656174757265206d75737420626520656e61626c6560448201527f642e205472792074686520456e61626c654175746f4275726e2066756e63746960648201527f6f6e2e0000000000000000000000000000000000000000000000000000000000608482015260a401610abc565b60085460649060ff79010000000000000000000000000000000000000000000000000082048116916114f6917801000000000000000000000000000000000000000000000000909104168561387e565b611500919061387e565b60ff16106115505760405162461bcd60e51b815260206004820152601160248201527f5461782066656520746f6f20686967682e0000000000000000000000000000006044820152606401610abc565b6008805460ff838116740100000000000000000000000000000000000000008181027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff88851677010000000000000000000000000000000000000000000000818102929092167fffffffffffffffff00ffff00ffffffffffffffffffffffffffffffffffffffff881617929092179096556040805196860485168088529290950490931660208601819052938501929092526060840152917f7934aea8452d2868336870fe7e0784562b6cf5cf909818ca893be463a9c676ff906080015b60405180910390a150505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604081205460ff1615611693575073ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260016020526040902054610a0790612d5e565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b60135462010000900460ff1661187d5760405162461bcd60e51b815260206004820152602660248201527f4175746f206275726e206665617475726520697320616c72656164792064697360448201527f61626c65642e00000000000000000000000000000000000000000000000000006064820152608401610abc565b61188860008061139b565b601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff1690556040517f6d4de23ebf419282b51fea4d5ebe9d980cf43df3f9e8ddde137786adfc2c5d6a90600090a1565b60006118e78333610860565b90508181101561195e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e6365000000000000000000000000000000000000000000000000000000006064820152608401610abc565b61196d8333610b088585613a43565b61197783836129f8565b505050565b60606012805461097390613a5a565b33816119968261163c565b1015611a0a5760405162461bcd60e51b815260206004820152602760248201527f5468652063616c6c6572206d75737420686176652062616c616e6365203e3d2060448201527f616d6f756e742e000000000000000000000000000000000000000000000000006064820152608401610abc565b6000611a17836000612df5565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205490915060ff1615611a8557805173ffffffffffffffffffffffffffffffffffffffff831660009081526002602052604081208054909190611a7f908490613a43565b90915550505b60a081015173ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081208054909190611abf908490613a43565b909155505060a0810151600b54611ad69190613a43565b600b8190555082600c6000828254611aee9190613866565b90915550506040518381527fd0ecdf4854f39daba34ba0e2c1ed0132a7023a5434bffc90b24f3335fb90e5e39060200160405180910390a1505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611b925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b6013546301000000900460ff1615611c125760405162461bcd60e51b815260206004820152602260248201527f526577617264206665617475726520697320616c726561647920656e61626c6560448201527f642e0000000000000000000000000000000000000000000000000000000000006064820152608401610abc565b60008260ff1611611c655760405162461bcd60e51b815260206004820152601b60248201527f546178206d7573742062652067726561746572207468616e20302e00000000006044820152606401610abc565b6008547a010000000000000000000000000000000000000000000000000000900460ff16611c9482600261387e565b60ff161115611d0b5760405162461bcd60e51b815260206004820152603160248201527f54617820646563696d616c73206d757374206265206c657373207468616e207460448201527f6f6b656e20646563696d616c73202d20320000000000000000000000000000006064820152608401610abc565b601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff166301000000179055611d438282612248565b6040517fba4445e1bffa6a2c7f9686f9082addd1cbaf92d402889b0c26dcc2aa101f658e90600090a15050565b33600090815260066020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015611e175760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610abc565b610b0d3385610b088685613a43565b6000610a0333848461264c565b60005473ffffffffffffffffffffffffffffffffffffffff163314611e9a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b601354610100900460ff16611f3d5760405162461bcd60e51b815260206004820152605960248201527f4175746f207377617020616e64206c6971756966792066656174757265206d7560448201527f737420626520656e61626c65642e205472792074686520456e61626c6541757460648201527f6f53776170416e644c6971756966792066756e6374696f6e2e00000000000000608482015260a401610abc565b6008546064908390611f8b9060ff780100000000000000000000000000000000000000000000000082048116917701000000000000000000000000000000000000000000000090041661387e565b611f95919061387e565b60ff1610611fe55760405162461bcd60e51b815260206004820152601160248201527f5461782066656520746f6f20686967682e0000000000000000000000000000006044820152606401610abc565b6008805460ff8381167601000000000000000000000000000000000000000000008181027fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff888516790100000000000000000000000000000000000000000000000000818102929092167fffffffffffff00ffff00ffffffffffffffffffffffffffffffffffffffffffff881617929092179096556040805196860485168088529290950490931660208601819052938501929092526060840152917f4ef9498dae4f4f6d32f12de45f94544890db3c4ed687b86b0774a34dd2de317f9060800161162e565b60005473ffffffffffffffffffffffffffffffffffffffff1633146121325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b73ffffffffffffffffffffffffffffffffffffffff81166121bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610abc565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146122af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610abc565b6013546301000000900460ff1661232e5760405162461bcd60e51b815260206004820152603e60248201527f5265776172642066656174757265206d75737420626520656e61626c65642e2060448201527f5472792074686520456e61626c655265776172642066756e6374696f6e2e00006064820152608401610abc565b60085460649060ff790100000000000000000000000000000000000000000000000000820481169161237d9186917701000000000000000000000000000000000000000000000090041661387e565b612387919061387e565b60ff16106123d75760405162461bcd60e51b815260206004820152601160248201527f5461782066656520746f6f20686967682e0000000000000000000000000000006044820152606401610abc565b6008805460ff8381167401000000000000000000000000000000000000000081027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8784167801000000000000000000000000000000000000000000000000818102929092167fffffffffffffff00ffffff00ffffffffffffffffffffffffffffffffffffffff8716179290921790955560408051958504841680875275010000000000000000000000000000000000000000009095049093166020860181905292850152606084015290917f6c039e29b159adea5dd8b7d9d918df95d17403688c82bbb43cee50f0de301fc09060800161162e565b73ffffffffffffffffffffffffffffffffffffffff83166125555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610abc565b73ffffffffffffffffffffffffffffffffffffffff82166125de5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610abc565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166126d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610abc565b73ffffffffffffffffffffffffffffffffffffffff821661275e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610abc565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081205461279290839060ff16612df5565b73ffffffffffffffffffffffffffffffffffffffff851660009081526004602052604090205490915060ff1680156127f0575073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff16155b1561280557612800848483612eb8565b612951565b73ffffffffffffffffffffffffffffffffffffffff841660009081526004602052604090205460ff16158015612860575073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff165b1561287057612800848483612fa1565b73ffffffffffffffffffffffffffffffffffffffff841660009081526004602052604090205460ff161580156128cc575073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff16155b156128dc57612800848483613065565b73ffffffffffffffffffffffffffffffffffffffff841660009081526004602052604090205460ff168015612936575073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205460ff165b156129465761280084848361309a565b612951848483613065565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83608001516040516129b491815260200190565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604090205460ff166129f2576129f281613110565b50505050565b73ffffffffffffffffffffffffffffffffffffffff821673f3d383aae83c80cccfef84ee7e864e1c249089ff1415612a985760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865206275726e2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610abc565b6000612aa38361163c565b905081811015612b1b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610abc565b6000612b26836131b7565b73ffffffffffffffffffffffffffffffffffffffff851660009081526004602052604090205490915060ff1615612b925773ffffffffffffffffffffffffffffffffffffffff841660009081526002602052604081208054859290612b8c908490613a43565b90915550505b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604081208054839290612bc7908490613a43565b909155505073f3d383aae83c80cccfef84ee7e864e1c249089ff600090815260026020527f324490b176db5f40fff71a1d336735a3708d1db27d98ef1ee80d416ab433588b8054859290612c1c908490613866565b909155505073f3d383aae83c80cccfef84ee7e864e1c249089ff600090815260016020527ff25936cf7c37ab6bbcf4397cdd2c6b5a56dcea3c4d889090cde543abca3ebdbf8054839290612c71908490613866565b9250508190555082600a6000828254612c8a9190613a43565b9250508190555082600d6000828254612ca39190613866565b90915550506040805173ffffffffffffffffffffffffffffffffffffffff86168152602081018590527fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5910160405180910390a160405183815273f3d383aae83c80cccfef84ee7e864e1c249089ff9073ffffffffffffffffffffffffffffffffffffffff8616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6000600b54821115612dd85760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201527f65666c656374696f6e73000000000000000000000000000000000000000000006064820152608401610abc565b6000612de26131ce565b9050612dee81846138a3565b9392505050565b612e4b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b612ea1604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b838152612eae81846131f1565b612dee8184613324565b805173ffffffffffffffffffffffffffffffffffffffff8416600090815260026020526040902054612eea9190613a43565b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083209390935560a0840151600190915291902054612f2e9190613a43565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600160205260408082209390935561012084015191851681529190912054612f739190613866565b73ffffffffffffffffffffffffffffffffffffffff9092166000908152600160205260409020919091555050565b60a081015173ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902054612fd69190613a43565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020908152604080832094909455608085015192861682526002905291909120546130209190613866565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020908152604080832093909355610120840151600190915291902054612f739190613866565b60a081015173ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040902054612f2e9190613a43565b805173ffffffffffffffffffffffffffffffffffffffff84166000908152600260205260409020546130cc9190613a43565b73ffffffffffffffffffffffffffffffffffffffff841660009081526002602090815260408083209390935560a0840151600190915291902054612fd69190613a43565b60135462010000900460ff161561319357602080820151306000908152600290925260408220805491929091613147908490613866565b909155505060c08101513060009081526001602052604081208054909190613170908490613866565b909155506131859050303383602001516124cd565b6131933082602001516118db565b6013546301000000900460ff1615610b6557610b658160e0015182604001516133e5565b6000806131c26131ce565b9050612dee8184613a06565b60008060006131db613414565b90925090506131ea81836138a3565b9250505090565b801561320257815160808301525050565b815160085461324a919060ff77010000000000000000000000000000000000000000000000820481169174010000000000000000000000000000000000000000900416613667565b60208301528151600854613299919060ff780100000000000000000000000000000000000000000000000082048116917501000000000000000000000000000000000000000000900416613667565b604083015281516008546132ea919060ff7901000000000000000000000000000000000000000000000000008204811691760100000000000000000000000000000000000000000000900416613667565b606083018190526040830151602084015184516133079190613a43565b6133119190613a43565b61331b9190613a43565b60808301525050565b600061332e6131ce565b835190915061333e908290613a06565b60a084015281156133595760a0830151610120840152505050565b8251613366908290613a06565b60a0840152602083015161337b908290613a06565b60c08401526040830151613390908290613a06565b60e084015260608301516133a5908290613a06565b610100840181905260e084015160c085015160a08601516133c69190613a43565b6133d09190613a43565b6133da9190613a43565b610120840152505050565b81600b546133f39190613a43565b600b8190555080600c600082825461340b9190613866565b90915550505050565b600b546009546000918291825b6005548110156136365782600160006005848154811061346a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902054118061351657508160026000600584815481106134e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902054115b1561352c57600b54600954945094505050509091565b600160006005838154811061356a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff1683528201929092526040019020546135a69084613a43565b925060026000600583815481106135e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff1683528201929092526040019020546136229083613a43565b91508061362e81613aae565b915050613421565b50600954600b5461364791906138a3565b82101561365e57600b546009549350935050509091565b90939092509050565b6000606461367683600a61393d565b61368360ff861687613a06565b61368d91906138a3565b61369791906138a3565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146136c357600080fd5b919050565b803560ff811681146136c357600080fd5b6000602082840312156136ea578081fd5b612dee8261369f565b60008060408385031215613705578081fd5b61370e8361369f565b915061371c6020840161369f565b90509250929050565b600080600060608486031215613739578081fd5b6137428461369f565b92506137506020850161369f565b9150604084013590509250925092565b60008060408385031215613772578182fd5b61377b8361369f565b946020939093013593505050565b60006020828403121561379a578081fd5b5035919050565b600080604083850312156137b3578182fd5b6137bc836136c8565b915061371c602084016136c8565b6000806000606084860312156137de578283fd5b6137e7846136c8565b9250613750602085016136c8565b6000602080835283518082850152825b8181101561382157858101830151858201604001528201613805565b818111156138325783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561387957613879613ae7565b500190565b600060ff821660ff84168060ff0382111561389b5761389b613ae7565b019392505050565b6000826138d7577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b600181815b8085111561393557817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561391b5761391b613ae7565b8085161561392857918102915b93841c93908002906138e1565b509250929050565b6000612dee60ff84168360008261395657506001610a07565b8161396357506000610a07565b816001811461397957600281146139835761399f565b6001915050610a07565b60ff84111561399457613994613ae7565b50506001821b610a07565b5060208310610133831016604e8410600b84101617156139c2575081810a610a07565b6139cc83836138dc565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156139fe576139fe613ae7565b029392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a3e57613a3e613ae7565b500290565b600082821015613a5557613a55613ae7565b500390565b600181811c90821680613a6e57607f821691505b60208210811415613aa8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613ae057613ae0613ae7565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220416e1fa7ada10a87de5d4eae15443863e3bf1f370188607a4bc459d1c02153d664736f6c63430008040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4475:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:845:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "127:24:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "136:5:10"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "143:5:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "129:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "129:20:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "129:20:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "106:6:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "114:4:10",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:17:10"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "121:3:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "98:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "98:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "91:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "91:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "88:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "160:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "176:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "170:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "170:13:10"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "164:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "192:28:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "210:2:10",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "214:1:10",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "206:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "206:10:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "218:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "202:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:18:10"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "196:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "243:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "245:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "245:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "245:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "235:2:10"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "239:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "232:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:10:10"
                  },
                  "nodeType": "YulIf",
                  "src": "229:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "274:17:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "288:2:10",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "284:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "284:7:10"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "278:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "300:23:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "314:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "314:9:10"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "304:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "332:71:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "354:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "378:2:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "382:4:10",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "374:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "374:13:10"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "389:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "370:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "370:22:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "394:2:10",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "366:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "366:31:10"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "399:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "362:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "362:40:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "350:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "350:53:10"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "336:10:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "464:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "421:10:10"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "433:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "418:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "418:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "441:10:10"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "453:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "438:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "438:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "415:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "415:46:10"
                  },
                  "nodeType": "YulIf",
                  "src": "412:2:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:10",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "504:10:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:22:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:22:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "531:6:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "539:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "524:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:18:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "524:18:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "551:14:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "561:4:10",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "555:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "611:24:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "620:5:10"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "627:5:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "613:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "613:20:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "613:20:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "588:6:10"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "596:2:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "584:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "584:15:10"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "601:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "580:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "580:24:10"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "606:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "577:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "577:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "574:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "644:14:10",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "653:5:10"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "648:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "713:87:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "742:6:10"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "750:1:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "738:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "738:14:10"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "754:2:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "734:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "734:23:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "773:6:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "781:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "769:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "769:14:10"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "785:2:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "765:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "765:23:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "759:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "759:30:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "727:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "727:63:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "727:63:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "678:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "681:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "675:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "675:9:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "685:19:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "687:15:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "696:1:10"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "699:2:10"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "692:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "692:10:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "687:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "671:3:10",
                    "statements": []
                  },
                  "src": "667:133:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "830:63:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "859:6:10"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "867:2:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "855:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "855:15:10"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:2:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "851:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "851:24:10"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "877:5:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "844:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "844:39:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "844:39:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "815:1:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "818:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "812:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "809:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "902:15:10",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "911:6:10"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "902:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "52:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "60:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "68:5:10",
                "type": ""
              }
            ],
            "src": "14:909:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1078:664:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1125:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1134:6:10"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1142:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1127:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1127:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1127:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1099:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1108:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1120:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1088:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1160:30:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1180:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1174:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1174:16:10"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1164:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1199:28:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1217:2:10",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1221:1:10",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1213:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1213:10:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1225:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1209:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1209:18:10"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1203:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1254:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1263:6:10"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1271:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1256:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1256:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1256:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1242:6:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1250:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1239:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:14:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1236:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1289:71:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1332:9:10"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1343:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1328:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1328:22:10"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1352:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1299:28:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1299:61:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1289:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1369:41:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1395:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1406:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1391:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1391:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1385:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1385:25:10"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1373:8:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1439:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1448:6:10"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1456:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1441:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1441:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1441:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1425:8:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1435:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1422:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1422:16:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1419:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1474:73:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1517:9:10"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1528:8:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1513:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1513:24:10"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1539:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1484:28:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1484:63:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1474:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1556:38:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1579:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1590:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1575:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1569:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1569:25:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1560:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1642:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1651:6:10"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1659:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1644:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1644:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1644:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1616:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1627:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1634:4:10",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1623:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1623:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1613:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1613:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1606:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1606:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1603:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1677:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1687:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1677:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1701:35:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1721:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1732:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1717:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1717:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1711:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:25:10"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1701:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1020:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1031:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1043:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1051:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1059:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1067:6:10",
                "type": ""
              }
            ],
            "src": "928:814:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1848:76:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1858:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1870:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1866:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1858:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1900:9:10"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1911:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1893:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:25:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1893:25:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1817:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1828:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1839:4:10",
                "type": ""
              }
            ],
            "src": "1747:177:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1993:358:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2003:16:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2018:1:10",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "2007:7:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2028:16:10",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "2037:7:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "2028:5:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2053:13:10",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "2061:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "2053:4:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2117:228:10",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2162:22:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2164:16:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2164:18:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2164:18:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "2137:4:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2151:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "2147:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2147:6:10"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "2155:4:10"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "2143:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2143:17:10"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "2134:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2134:27:10"
                        },
                        "nodeType": "YulIf",
                        "src": "2131:2:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2223:29:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2225:25:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "2238:5:10"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "2245:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "2234:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2234:16:10"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "2225:5:10"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "2204:8:10"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "2214:7:10"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2200:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2200:22:10"
                        },
                        "nodeType": "YulIf",
                        "src": "2197:2:10"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2265:23:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "2277:4:10"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "2283:4:10"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "2273:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2273:15:10"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "2265:4:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2301:34:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "2317:7:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "2326:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "2313:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2313:22:10"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "2301:8:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "2086:8:10"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "2096:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2083:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2083:21:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2105:3:10",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2079:3:10",
                    "statements": []
                  },
                  "src": "2075:270:10"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "1957:5:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1964:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1977:5:10",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1984:4:10",
                "type": ""
              }
            ],
            "src": "1929:422:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2424:72:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2434:56:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2464:4:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "2474:8:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2484:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2470:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2470:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "2443:20:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2443:47:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "2434:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "2395:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "2401:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "2414:5:10",
                "type": ""
              }
            ],
            "src": "2356:140:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2560:747:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2598:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2612:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2621:1:10",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "2612:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "2635:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "2580:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2573:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2573:16:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2570:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2683:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2697:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2706:1:10",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "2697:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "2720:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2669:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2662:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2662:12:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2659:2:10"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2771:52:10",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2785:10:10",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2794:1:10",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "2785:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "2808:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "2764:59:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2769:1:10",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2839:123:10",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2874:22:10",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2876:16:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2876:18:10"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2876:18:10"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "2859:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2869:3:10",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "2856:2:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2856:17:10"
                            },
                            "nodeType": "YulIf",
                            "src": "2853:2:10"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2909:25:10",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "2922:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2932:1:10",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2918:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2918:16:10"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "2909:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "2947:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "2832:130:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2837:1:10",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "2751:4:10"
                  },
                  "nodeType": "YulSwitch",
                  "src": "2744:218:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3060:70:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3074:28:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "3087:4:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "3093:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "3083:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3083:19:10"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "3074:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "3115:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "2984:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2990:2:10",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2981:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2981:12:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "2998:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3008:2:10",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2995:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2995:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2977:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2977:35:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "3021:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3027:3:10",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "3018:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3018:13:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "3036:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3046:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "3033:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3033:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3014:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:36:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2974:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2974:77:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2971:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3139:57:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "3181:4:10"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "3187:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "3162:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3162:34:10"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "3143:7:10",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "3152:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3241:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3243:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3243:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3243:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "3211:7:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3228:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3224:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3224:6:10"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "3232:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "3220:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3220:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3208:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3208:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3205:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3272:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "3285:7:10"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "3294:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3281:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3281:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "3272:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "2531:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "2537:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "2550:5:10",
                "type": ""
              }
            ],
            "src": "2501:806:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3364:116:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3423:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3425:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3425:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3425:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3395:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3388:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3388:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3381:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3403:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3414:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3410:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3410:6:10"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3418:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3406:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3406:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3400:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3400:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3377:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:45:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3374:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3454:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3469:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3472:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3465:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3465:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3454:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3343:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3346:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3352:7:10",
                "type": ""
              }
            ],
            "src": "3312:168:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3534:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3556:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3558:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3558:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3558:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3550:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3553:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3547:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:8:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3544:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3587:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3599:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3602:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3595:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3595:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3587:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3516:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3519:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3525:4:10",
                "type": ""
              }
            ],
            "src": "3485:125:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3670:325:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3680:22:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3694:1:10",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3697:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3690:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3690:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3680:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3711:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3741:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3747:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3737:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3737:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3715:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3788:31:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3790:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3804:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3812:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3800:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3800:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3790:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3768:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3761:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3761:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3758:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3878:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3899:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3906:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3911:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3902:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3902:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3892:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3892:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3892:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3943:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3946:4:10",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3936:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3936:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3936:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3971:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3974:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3964:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3964:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3964:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3834:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3857:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3865:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3854:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3854:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3831:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3831:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3828:2:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3650:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3659:6:10",
                "type": ""
              }
            ],
            "src": "3615:380:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4038:171:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4069:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4090:1:10"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4097:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4102:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4093:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4093:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4083:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4083:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4083:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4134:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4137:4:10",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4127:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4127:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4127:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4162:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4165:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4155:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4155:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4155:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4058:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4051:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4051:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "4048:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4189:14:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4198:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4201:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "4194:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4189:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4023:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4026:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "4032:1:10",
                "type": ""
              }
            ],
            "src": "4000:209:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4246:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4263:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4270:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4275:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4266:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4266:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4256:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4256:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4256:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4303:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4306:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4296:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4296:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4296:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4327:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4330:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4320:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4320:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4320:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4214:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4378:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4395:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4402:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4407:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4398:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4398:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4388:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4388:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4388:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4435:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4438:4:10",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4428:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4428:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4428:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4459:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4462:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4452:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4452:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4452:15:10"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4346:127:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(value2, value2) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18652:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:10"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:10"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "14:196:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:109:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "272:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "294:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "281:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "272:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "349:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "358:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "361:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "351:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "351:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "351:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "323:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "334:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "341:4:10",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "330:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "330:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "320:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "320:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "313:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "313:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "310:2:10"
                }
              ]
            },
            "name": "abi_decode_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "241:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "252:5:10",
                "type": ""
              }
            ],
            "src": "215:156:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "446:126:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "492:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "501:6:10"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "509:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "494:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "494:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "494:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "467:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "476:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "463:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "459:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "456:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "527:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "556:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "537:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "412:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "423:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "435:6:10",
                "type": ""
              }
            ],
            "src": "376:196:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "664:183:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "710:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "719:6:10"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "727:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "712:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "712:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "712:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "685:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "694:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "681:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "681:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "706:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "677:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "677:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "674:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "745:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "774:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "755:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "793:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "826:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "837:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "822:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "822:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "803:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "793:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "622:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "633:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "645:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "653:6:10",
                "type": ""
              }
            ],
            "src": "577:270:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:234:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1002:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:10"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1019:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1004:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1004:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1004:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "977:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "986:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "966:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1037:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1066:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1047:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1047:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1037:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1085:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1118:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1114:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1114:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1095:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1095:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1085:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1142:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1169:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1180:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1165:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1165:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1152:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1142:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "906:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "917:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "929:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "937:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "945:6:10",
                "type": ""
              }
            ],
            "src": "852:338:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1282:177:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1328:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1337:6:10"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1345:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1330:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1330:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1330:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1303:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1312:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1299:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1299:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1324:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1295:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1295:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1292:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1363:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1392:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1373:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1363:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1411:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1438:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1449:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1434:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1434:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1421:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1421:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1411:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1240:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1251:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1263:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1271:6:10",
                "type": ""
              }
            ],
            "src": "1195:264:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1534:120:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1580:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1589:6:10"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1597:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1582:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1582:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1582:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1555:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1564:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1551:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1547:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1544:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1615:33:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1625:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1625:23:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1615:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1500:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1511:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1523:6:10",
                "type": ""
              }
            ],
            "src": "1464:190:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1742:179:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1788:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1797:6:10"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1805:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1790:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1790:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1790:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1763:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1772:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1784:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1755:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1752:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1823:37:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1850:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "1833:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1833:27:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1823:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1869:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1900:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1911:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1896:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1896:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "1879:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1869:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1700:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1711:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1723:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1731:6:10",
                "type": ""
              }
            ],
            "src": "1659:262:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2026:230:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2072:26:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2081:6:10"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2089:6:10"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2074:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2074:22:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2074:22:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2047:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2056:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2043:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2043:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2068:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2039:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2039:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2036:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2107:37:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2134:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "2117:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2117:27:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2107:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2184:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2195:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2180:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2180:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "2163:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2163:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2153:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2208:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2235:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2246:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2231:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2231:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2218:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2218:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2208:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8t_uint8t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1976:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1987:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1999:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2007:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2015:6:10",
                "type": ""
              }
            ],
            "src": "1926:330:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2362:125:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2372:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2384:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2395:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2380:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2380:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2372:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2414:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2429:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2437:42:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2425:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:55:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2407:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2407:74:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2407:74:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2331:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2342:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2353:4:10",
                "type": ""
              }
            ],
            "src": "2261:226:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2621:168:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2631:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2643:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2654:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2639:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2639:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2631:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2673:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2688:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2696:42:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2684:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2684:55:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2666:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2666:74:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2666:74:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2760:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2771:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2756:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2756:18:10"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2776:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2749:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2749:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2749:34:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2582:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2593:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2601:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2612:4:10",
                "type": ""
              }
            ],
            "src": "2492:297:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2889:92:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2899:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2911:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2922:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2907:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2907:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2899:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2941:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2966:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2959:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2959:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2952:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2952:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2934:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2934:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2934:41:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2858:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2869:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2880:4:10",
                "type": ""
              }
            ],
            "src": "2794:187:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3107:541:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3117:12:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3127:2:10",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3121:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3145:9:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3156:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3138:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3138:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3138:21:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3168:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3188:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3182:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3182:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3172:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3215:9:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3226:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3211:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3211:18:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3231:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3204:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3204:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3204:34:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3247:13:10",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "3256:4:10"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3251:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3319:90:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3348:9:10"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3359:1:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3344:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3344:17:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3363:2:10",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3340:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3340:26:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3382:6:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3390:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3378:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3378:14:10"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3394:2:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3374:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3374:23:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3368:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3368:30:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3333:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3333:66:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3333:66:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3280:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3283:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3277:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3291:19:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3293:15:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3302:1:10"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3305:2:10"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3298:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3298:10:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3293:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3273:3:10",
                    "statements": []
                  },
                  "src": "3269:140:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3443:69:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3472:9:10"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3483:6:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3468:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3468:22:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3492:2:10",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3464:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3464:31:10"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3497:4:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3457:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3457:45:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3457:45:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3424:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3427:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3421:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3421:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3418:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3521:121:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3537:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3556:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3564:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3552:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3552:15:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3569:66:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3548:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3548:88:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3533:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3533:104:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3639:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3529:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3529:113:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3521:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3076:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3087:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3098:4:10",
                "type": ""
              }
            ],
            "src": "2986:662:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3827:225:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3844:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3855:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3837:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3837:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3837:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3878:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3889:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3874:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3874:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3894:2:10",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3867:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3867:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3867:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3917:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3928:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3913:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3913:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3933:34:10",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3906:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3906:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3906:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3988:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3999:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3984:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3984:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4004:5:10",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3977:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3977:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3977:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4019:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4031:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4042:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4027:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4027:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4019:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3804:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3818:4:10",
                "type": ""
              }
            ],
            "src": "3653:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4231:224:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4248:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4259:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4241:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4241:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4241:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4282:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4293:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4278:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4278:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4298:2:10",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4271:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4271:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4321:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4332:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4317:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4317:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4337:34:10",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4310:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4310:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4392:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4403:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4388:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4388:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4408:4:10",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4381:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4381:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4381:32:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4422:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4434:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4445:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4430:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4430:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4422:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4208:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4222:4:10",
                "type": ""
              }
            ],
            "src": "4057:398:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4634:319:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4651:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4662:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4644:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4644:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4644:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4685:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4696:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4681:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4681:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4701:2:10",
                        "type": "",
                        "value": "89"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4674:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4674:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4724:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4735:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4720:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4720:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4740:34:10",
                        "type": "",
                        "value": "Auto swap and liquify feature mu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4713:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4713:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4713:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4795:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4806:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4791:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4791:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4811:34:10",
                        "type": "",
                        "value": "st be enabled. Try the EnableAut"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4784:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4784:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4784:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4866:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4877:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4862:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4862:19:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4883:27:10",
                        "type": "",
                        "value": "oSwapAndLiquify function."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4855:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4855:56:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4855:56:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4920:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4932:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4943:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4928:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4928:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4920:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_157907442069974a768f9f93170cb80081c654c85cc3209203c461eb5ad85641__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4611:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4625:4:10",
                "type": ""
              }
            ],
            "src": "4460:493:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5132:227:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5149:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5160:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5142:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5142:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5142:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5183:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5194:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5179:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5179:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5199:2:10",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5172:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5172:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5172:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5222:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5233:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5218:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5218:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5238:34:10",
                        "type": "",
                        "value": "Auto burn feature is already ena"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5211:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5211:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5211:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5293:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5304:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5289:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5289:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5309:7:10",
                        "type": "",
                        "value": "bled."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5282:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5282:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5282:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5326:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5338:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5349:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5334:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5334:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5326:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_15acc0a182f8760166ea3f905d96c4170be164d9044a1426b8b358151533ede9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5109:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5123:4:10",
                "type": ""
              }
            ],
            "src": "4958:401:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5538:232:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5555:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5566:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5548:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5548:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5548:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5589:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5600:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5585:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5585:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5605:2:10",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5578:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5578:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5578:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5628:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5639:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5624:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5624:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5644:34:10",
                        "type": "",
                        "value": "Amount must be less than total r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5617:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5617:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5617:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5699:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5710:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5695:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5695:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5715:12:10",
                        "type": "",
                        "value": "eflections"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5688:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5688:40:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5688:40:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5737:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5749:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5760:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5745:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5745:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5737:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5515:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5529:4:10",
                "type": ""
              }
            ],
            "src": "5364:406:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5949:167:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5966:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5977:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5959:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5959:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5959:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6000:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6011:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5996:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5996:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6016:2:10",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5989:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5989:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5989:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6039:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6050:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6035:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6035:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6055:19:10",
                        "type": "",
                        "value": "Tax fee too high."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6028:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6028:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6084:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6096:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6107:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6092:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6092:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6084:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5926:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5940:4:10",
                "type": ""
              }
            ],
            "src": "5775:341:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6295:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6312:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6323:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6305:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6305:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6305:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6346:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6357:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6342:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6342:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6362:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6335:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6335:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6335:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6385:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6396:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6381:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6381:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6401:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6374:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6374:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6374:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6456:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6467:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6452:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6452:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6472:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6445:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6445:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6445:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6490:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6502:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6513:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6498:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6498:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6490:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6272:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6286:4:10",
                "type": ""
              }
            ],
            "src": "6121:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6702:224:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6719:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6730:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6712:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6712:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6712:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6753:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6749:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6749:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6769:2:10",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6742:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6742:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6742:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6792:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6803:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6788:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6788:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6808:34:10",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6781:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6781:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6781:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6863:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6874:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6859:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6859:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6879:4:10",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6852:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6852:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6852:32:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6893:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6905:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6916:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6901:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6901:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6893:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6679:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6693:4:10",
                "type": ""
              }
            ],
            "src": "6528:398:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7105:245:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7122:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7133:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7115:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7115:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7115:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7156:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7167:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7152:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7152:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7172:2:10",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7145:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7145:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7145:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7195:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7206:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7191:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7191:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7211:34:10",
                        "type": "",
                        "value": "minTokensBeforeSwap must be high"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7184:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7184:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7184:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7266:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7277:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7262:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7262:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7282:25:10",
                        "type": "",
                        "value": "er than current supply."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7255:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7255:53:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7255:53:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7317:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7329:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7340:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7325:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7325:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7317:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4521b557de359d27a7e6ab253393f81d6a07b725eb9ce6ae4353afbbb23d9b2b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7082:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7096:4:10",
                "type": ""
              }
            ],
            "src": "6931:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7529:229:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7546:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7557:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7539:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7539:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7539:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7580:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7591:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7576:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7576:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7596:2:10",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7569:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7569:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7569:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7619:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7630:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7615:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7615:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7635:34:10",
                        "type": "",
                        "value": "The caller must have balance >= "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7608:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7608:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7608:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7690:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7701:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7686:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7686:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7706:9:10",
                        "type": "",
                        "value": "amount."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7679:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7679:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7679:37:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7725:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7737:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7748:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7733:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7733:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7725:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4d4511d5d15f5a76490625be24c05f984ee3f7a822fbe5bc2b1f3ed6116dc6be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7506:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7520:4:10",
                "type": ""
              }
            ],
            "src": "7355:403:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7937:239:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7954:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7965:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7947:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7947:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7947:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7988:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7999:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7984:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7984:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8004:2:10",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7977:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7977:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7977:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8027:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8038:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8023:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8023:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8043:34:10",
                        "type": "",
                        "value": "Auto swap and liquify feature is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8016:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8016:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8016:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8098:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8109:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8094:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8094:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8114:19:10",
                        "type": "",
                        "value": " already enabled."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8087:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8087:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8087:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8143:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8155:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8166:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8151:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8151:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8143:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4eb09766ac0a18b39065874dc9a93c945960f3a3b0c631c61769f293fdb5a878__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7914:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7928:4:10",
                "type": ""
              }
            ],
            "src": "7763:413:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8355:297:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8372:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8383:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8365:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8365:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8365:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8406:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8417:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8402:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8402:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8422:2:10",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8395:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8395:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8395:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8445:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8456:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8441:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8441:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8461:34:10",
                        "type": "",
                        "value": "Auto burn feature must be enable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8434:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8434:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8434:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8516:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8527:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8512:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8512:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8532:34:10",
                        "type": "",
                        "value": "d. Try the EnableAutoBurn functi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8505:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8505:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8505:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8587:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8598:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8583:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8583:19:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8604:5:10",
                        "type": "",
                        "value": "on."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8576:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8576:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8576:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8619:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8631:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8642:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8627:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8627:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8619:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5dab928377afe20026a79205964536c0398951d62be200d6adbc03927d7d7530__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8332:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8346:4:10",
                "type": ""
              }
            ],
            "src": "8181:471:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8831:225:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8848:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8859:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8841:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8841:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8841:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8882:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8893:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8878:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8878:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8898:2:10",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8871:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8871:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8871:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8921:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8932:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8917:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8917:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8937:34:10",
                        "type": "",
                        "value": "Reward feature is already disabl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8910:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8910:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8910:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8992:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9003:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8988:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8988:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9008:5:10",
                        "type": "",
                        "value": "ed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8981:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8981:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8981:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9023:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9035:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9046:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9031:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9031:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9023:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_728ccf54956bf9ca81e6c1cfc99a84c22d525cf456bb0efab35f9745aae83260__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8808:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8822:4:10",
                "type": ""
              }
            ],
            "src": "8657:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9235:239:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9252:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9263:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9245:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9245:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9245:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9286:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9297:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9282:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9282:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9302:2:10",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9275:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9275:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9275:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9325:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9336:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9321:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9321:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9341:34:10",
                        "type": "",
                        "value": "Tax decimals must be less than t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9314:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9314:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9314:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9396:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9407:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9392:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9392:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9412:19:10",
                        "type": "",
                        "value": "oken decimals - 2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9385:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9385:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9385:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9441:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9453:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9464:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9449:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9449:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9441:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9212:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9226:4:10",
                "type": ""
              }
            ],
            "src": "9061:413:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9653:177:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9670:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9681:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9663:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9663:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9663:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9704:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9715:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9700:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9700:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9720:2:10",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9693:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9693:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9693:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9743:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9754:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9739:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9739:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9759:29:10",
                        "type": "",
                        "value": "Tax must be greater than 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9732:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9732:57:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9732:57:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9798:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9810:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9821:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9806:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9806:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9798:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9630:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9644:4:10",
                "type": ""
              }
            ],
            "src": "9479:351:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10009:230:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10026:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10037:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10019:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10019:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10019:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10060:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10071:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10056:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10056:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10076:2:10",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10049:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10049:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10049:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10099:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10110:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10095:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10095:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10115:34:10",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10088:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10088:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10088:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10170:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10181:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10166:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10166:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10186:10:10",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10159:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10159:38:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10159:38:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10206:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10218:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10229:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10214:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10214:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10206:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9986:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10000:4:10",
                "type": ""
              }
            ],
            "src": "9835:404:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10418:182:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10435:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10446:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10428:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10428:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10428:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10469:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10480:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10465:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10465:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10485:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10458:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10458:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10458:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10508:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10519:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10504:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10504:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10524:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10497:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10497:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10497:62:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10568:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10580:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10591:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10576:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10576:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10568:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10395:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10409:4:10",
                "type": ""
              }
            ],
            "src": "10244:356:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10779:240:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10796:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10807:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10789:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10789:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10789:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10830:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10841:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10826:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10826:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10846:2:10",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10819:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10819:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10819:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10869:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10880:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10865:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10865:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10885:34:10",
                        "type": "",
                        "value": "Auto swap and liquify feature is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10858:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10858:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10858:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10940:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10951:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10936:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10936:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10956:20:10",
                        "type": "",
                        "value": " already disabled."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10929:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10929:48:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10929:48:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10986:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10998:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11009:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10994:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10994:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10986:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9a85156a079636d99c336de56af16122b20bc794946f6bb12eec5db01646154d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10756:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10770:4:10",
                "type": ""
              }
            ],
            "src": "10605:414:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11198:252:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11215:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11226:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11208:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11208:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11208:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11249:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11260:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11245:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11245:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11265:2:10",
                        "type": "",
                        "value": "62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11238:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11238:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11238:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11288:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11299:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11284:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11284:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11304:34:10",
                        "type": "",
                        "value": "Reward feature must be enabled. "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11277:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11277:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11277:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11359:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11370:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11355:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11355:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11375:32:10",
                        "type": "",
                        "value": "Try the EnableReward function."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11348:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11348:60:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11348:60:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11417:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11429:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11440:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11425:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11425:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11417:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c08611362f532e1f3ccc52623a3ec3cd434f4f64631173250c17e815580b470__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11175:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11189:4:10",
                "type": ""
              }
            ],
            "src": "11024:426:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11629:223:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11646:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11657:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11639:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11639:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11639:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11680:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11691:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11676:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11676:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11696:2:10",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11669:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11669:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11669:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11719:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11730:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11715:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11715:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11735:34:10",
                        "type": "",
                        "value": "ERC20: burn from the burn addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11708:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11708:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11708:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11790:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11801:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11786:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11786:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11806:3:10",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11779:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11779:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11779:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11819:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11831:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11842:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11827:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11827:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11819:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e689f793e6546576af5b30396447224d49065e9ed32ad7badd1b7543b91110d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11606:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11620:4:10",
                "type": ""
              }
            ],
            "src": "11455:397:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12031:226:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12048:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12059:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12041:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12041:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12041:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12082:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12093:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12078:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12078:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12098:2:10",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12071:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12071:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12071:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12121:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12132:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12117:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12117:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12137:34:10",
                        "type": "",
                        "value": "ERC20: burn amount exceeds allow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12110:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12110:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12110:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12192:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12203:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12188:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12188:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12208:6:10",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12181:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12181:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12181:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12224:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12236:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12247:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12232:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12232:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12224:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12008:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12022:4:10",
                "type": ""
              }
            ],
            "src": "11857:400:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12436:227:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12453:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12464:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12446:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12446:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12446:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12487:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12498:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12483:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12483:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12503:2:10",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12476:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12476:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12476:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12526:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12537:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12522:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12522:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12542:34:10",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12515:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12515:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12515:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12597:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12608:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12593:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12593:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12613:7:10",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12586:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12586:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12586:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12630:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12642:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12653:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12638:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12638:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12630:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12413:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12427:4:10",
                "type": ""
              }
            ],
            "src": "12262:401:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12842:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12859:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12870:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12852:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12852:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12852:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12893:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12904:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12889:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12889:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12909:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12882:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12882:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12882:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12932:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12943:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12928:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12928:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12948:34:10",
                        "type": "",
                        "value": "Auto burn feature is already dis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12921:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12921:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12921:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13003:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13014:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12999:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12999:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13019:8:10",
                        "type": "",
                        "value": "abled."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12992:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12992:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12992:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13037:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13049:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13060:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13045:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13045:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13037:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c17d0921cf8aaa6cca9bbf85ecc107c033ec3a37900fd4f49592cdf7d08ba9c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12819:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12833:4:10",
                "type": ""
              }
            ],
            "src": "12668:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13249:226:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13266:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13277:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13259:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13259:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13259:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13300:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13311:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13296:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13296:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13316:2:10",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13289:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13289:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13289:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13339:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13350:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13335:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13335:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13355:34:10",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13328:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13328:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13328:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13410:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13421:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13406:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13406:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13426:6:10",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13399:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13399:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13399:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13442:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13454:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13465:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13450:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13450:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13442:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13226:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13240:4:10",
                "type": ""
              }
            ],
            "src": "13075:400:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13654:224:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13671:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13682:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13664:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13664:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13664:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13705:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13716:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13701:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13701:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13721:2:10",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13694:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13694:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13694:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13744:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13755:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13740:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13740:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13760:34:10",
                        "type": "",
                        "value": "Reward feature is already enable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13733:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13733:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13733:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13815:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13826:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13811:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13811:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13831:4:10",
                        "type": "",
                        "value": "d."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13804:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13804:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13804:32:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13845:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13857:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13868:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13853:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13853:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13845:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd8a4ed25a5d22ae5e8d18ceecda8323bdb45e6a59eea1bb81f53a5014c63deb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13631:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13645:4:10",
                "type": ""
              }
            ],
            "src": "13480:398:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14057:227:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14074:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14085:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14067:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14067:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14067:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14108:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14119:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14104:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14104:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14124:2:10",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14097:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14097:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14097:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14147:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14158:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14143:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14143:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14163:34:10",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14136:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14136:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14136:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14218:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14229:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14214:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14214:18:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14234:7:10",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14207:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14207:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14207:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14251:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14263:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14274:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14259:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14259:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14251:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14034:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14048:4:10",
                "type": ""
              }
            ],
            "src": "13883:401:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14390:76:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14400:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14412:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14423:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14408:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14408:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14400:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14442:9:10"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14453:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14435:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14435:25:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14435:25:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14359:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14370:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14381:4:10",
                "type": ""
              }
            ],
            "src": "14289:177:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14600:119:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14610:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14622:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14633:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14618:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14618:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14610:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14652:9:10"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14663:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14645:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14645:25:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14645:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14690:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14701:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14686:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14686:18:10"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14706:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14679:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14679:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14679:34:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14561:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14572:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14580:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14591:4:10",
                "type": ""
              }
            ],
            "src": "14471:248:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14821:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14831:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14843:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14854:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14839:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14839:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14831:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14873:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14888:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14896:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14884:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14884:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14866:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14866:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14866:36:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14790:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14801:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14812:4:10",
                "type": ""
              }
            ],
            "src": "14724:184:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15082:250:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15092:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15104:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15115:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15100:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15100:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15092:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15135:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15150:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15158:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15146:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15146:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15128:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15128:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15128:36:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15184:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15195:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15180:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15180:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15204:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15212:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15200:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15200:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15173:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15173:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15173:45:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15238:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15249:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15234:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15234:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "15258:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15266:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15254:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15254:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15227:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15227:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15227:45:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15292:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15303:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15288:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15288:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "15312:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15320:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15308:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15308:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15281:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15281:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15281:45:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8_t_uint8_t_uint8_t_uint8__to_t_uint8_t_uint8_t_uint8_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15027:9:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "15038:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15046:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15054:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15062:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15073:4:10",
                "type": ""
              }
            ],
            "src": "14913:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15385:80:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15412:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15414:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15414:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15414:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15401:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15408:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "15404:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15404:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15398:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15398:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "15395:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15443:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15454:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15457:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15450:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15450:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15443:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15368:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15371:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15377:3:10",
                "type": ""
              }
            ],
            "src": "15337:128:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15516:158:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15526:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15541:1:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15544:4:10",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15537:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15537:12:10"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "15530:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15558:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15573:1:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15576:4:10",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15569:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15569:12:10"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "15562:3:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15617:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15619:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15619:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15619:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "15596:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15605:4:10",
                            "type": "",
                            "value": "0xff"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "15611:3:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15601:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15601:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15593:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15593:23:10"
                  },
                  "nodeType": "YulIf",
                  "src": "15590:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15648:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "15659:3:10"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "15664:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15655:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15655:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15648:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15499:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15502:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15508:3:10",
                "type": ""
              }
            ],
            "src": "15470:204:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15725:228:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15756:168:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "15777:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15780:77:10",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15770:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15770:88:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15770:88:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15878:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15881:4:10",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15871:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15871:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15871:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "15906:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15909:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15899:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15899:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15899:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15745:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15738:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15738:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "15735:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15933:14:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15942:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15945:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "15938:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15938:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "15933:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15710:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15713:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "15719:1:10",
                "type": ""
              }
            ],
            "src": "15679:274:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16022:418:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16032:16:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16047:1:10",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "16036:7:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16057:16:10",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "16066:7:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "16057:5:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16082:13:10",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "16090:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "16082:4:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16146:288:10",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16251:22:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "16253:16:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16253:18:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16253:18:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "16166:4:10"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16176:66:10",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "16244:4:10"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "16172:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16172:77:10"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "16163:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16163:87:10"
                        },
                        "nodeType": "YulIf",
                        "src": "16160:2:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16312:29:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16314:25:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "16327:5:10"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "16334:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "16323:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16323:16:10"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "16314:5:10"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "16293:8:10"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "16303:7:10"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "16289:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16289:22:10"
                        },
                        "nodeType": "YulIf",
                        "src": "16286:2:10"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16354:23:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "16366:4:10"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "16372:4:10"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "16362:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16362:15:10"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "16354:4:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16390:34:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "16406:7:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "16415:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "16402:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16402:22:10"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "16390:8:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "16115:8:10"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "16125:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16112:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16112:21:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "16134:3:10",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "16108:3:10",
                    "statements": []
                  },
                  "src": "16104:330:10"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "15986:5:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "15993:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "16006:5:10",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "16013:4:10",
                "type": ""
              }
            ],
            "src": "15958:482:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16513:72:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16523:56:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "16553:4:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "16563:8:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16573:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16559:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16559:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "16532:20:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16532:47:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "16523:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "16484:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "16490:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "16503:5:10",
                "type": ""
              }
            ],
            "src": "16445:140:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16649:807:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16687:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16701:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16710:1:10",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "16701:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "16724:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "16669:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16662:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16662:16:10"
                  },
                  "nodeType": "YulIf",
                  "src": "16659:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16772:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16786:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16795:1:10",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "16786:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "16809:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "16758:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16751:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16751:12:10"
                  },
                  "nodeType": "YulIf",
                  "src": "16748:2:10"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16860:52:10",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "16874:10:10",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16883:1:10",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "16874:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "16897:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16853:59:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16858:1:10",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16928:123:10",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "16963:22:10",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "16965:16:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16965:18:10"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16965:18:10"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "16948:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16958:3:10",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "16945:2:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16945:17:10"
                            },
                            "nodeType": "YulIf",
                            "src": "16942:2:10"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "16998:25:10",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "17011:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "17021:1:10",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "17007:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17007:16:10"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "16998:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "17036:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16921:130:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16926:1:10",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "16840:4:10"
                  },
                  "nodeType": "YulSwitch",
                  "src": "16833:218:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17149:70:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17163:28:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "17176:4:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "17182:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "17172:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17172:19:10"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "17163:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "17204:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "17073:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17079:2:10",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "17070:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17070:12:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "17087:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17097:2:10",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "17084:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17084:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17066:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17066:35:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "17110:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17116:3:10",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "17107:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17107:13:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "17125:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17135:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "17122:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17122:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17103:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17103:36:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "17063:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17063:77:10"
                  },
                  "nodeType": "YulIf",
                  "src": "17060:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17228:57:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "17270:4:10"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "17276:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "17251:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17251:34:10"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "17232:7:10",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "17241:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17390:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17392:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17392:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17392:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "17300:7:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17313:66:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "17381:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "17309:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17309:79:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17297:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17297:92:10"
                  },
                  "nodeType": "YulIf",
                  "src": "17294:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17421:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "17434:7:10"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "17443:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "17430:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17430:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "17421:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "16620:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "16626:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "16639:5:10",
                "type": ""
              }
            ],
            "src": "16590:866:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17513:176:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17632:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17634:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17634:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17634:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "17544:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17537:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17537:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17530:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17530:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17552:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17559:66:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "17627:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "17555:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17555:74:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "17549:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17549:81:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17526:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17526:105:10"
                  },
                  "nodeType": "YulIf",
                  "src": "17523:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17663:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17678:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17681:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "17674:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17674:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "17663:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17492:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17495:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "17501:7:10",
                "type": ""
              }
            ],
            "src": "17461:228:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17743:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17765:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17767:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17767:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17767:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17759:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17762:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17756:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17756:8:10"
                  },
                  "nodeType": "YulIf",
                  "src": "17753:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17796:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17808:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17811:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17804:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17804:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17796:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17725:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17728:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17734:4:10",
                "type": ""
              }
            ],
            "src": "17694:125:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17879:382:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17889:22:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17903:1:10",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "17906:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "17899:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17899:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "17889:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17920:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "17950:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17956:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17946:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17946:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "17924:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17997:31:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17999:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "18013:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18021:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "18009:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18009:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "17999:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "17977:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17970:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17970:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "17967:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18087:168:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18108:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18111:77:10",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18101:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18101:88:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18101:88:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18209:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18212:4:10",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18202:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18202:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18202:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18237:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18240:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18230:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18230:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18230:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "18043:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "18066:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18074:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "18063:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18063:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "18040:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18040:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "18037:2:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "17859:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "17868:6:10",
                "type": ""
              }
            ],
            "src": "17824:437:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18313:148:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18404:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18406:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18406:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18406:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18329:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18336:66:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "18326:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18326:77:10"
                  },
                  "nodeType": "YulIf",
                  "src": "18323:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18435:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18446:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18453:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18442:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18442:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "18435:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18295:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "18305:3:10",
                "type": ""
              }
            ],
            "src": "18266:195:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18498:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18515:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18518:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18508:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18508:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18508:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18612:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18615:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18605:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18605:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18605:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18636:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18639:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18629:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18629:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18629:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18466:184:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint8t_uint8t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_157907442069974a768f9f93170cb80081c654c85cc3209203c461eb5ad85641__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 89)\n        mstore(add(headStart, 64), \"Auto swap and liquify feature mu\")\n        mstore(add(headStart, 96), \"st be enabled. Try the EnableAut\")\n        mstore(add(headStart, 128), \"oSwapAndLiquify function.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_15acc0a182f8760166ea3f905d96c4170be164d9044a1426b8b358151533ede9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Auto burn feature is already ena\")\n        mstore(add(headStart, 96), \"bled.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Tax fee too high.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4521b557de359d27a7e6ab253393f81d6a07b725eb9ce6ae4353afbbb23d9b2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"minTokensBeforeSwap must be high\")\n        mstore(add(headStart, 96), \"er than current supply.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4d4511d5d15f5a76490625be24c05f984ee3f7a822fbe5bc2b1f3ed6116dc6be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"The caller must have balance >= \")\n        mstore(add(headStart, 96), \"amount.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4eb09766ac0a18b39065874dc9a93c945960f3a3b0c631c61769f293fdb5a878__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Auto swap and liquify feature is\")\n        mstore(add(headStart, 96), \" already enabled.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5dab928377afe20026a79205964536c0398951d62be200d6adbc03927d7d7530__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"Auto burn feature must be enable\")\n        mstore(add(headStart, 96), \"d. Try the EnableAutoBurn functi\")\n        mstore(add(headStart, 128), \"on.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_728ccf54956bf9ca81e6c1cfc99a84c22d525cf456bb0efab35f9745aae83260__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Reward feature is already disabl\")\n        mstore(add(headStart, 96), \"ed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Tax decimals must be less than t\")\n        mstore(add(headStart, 96), \"oken decimals - 2\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Tax must be greater than 0.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9a85156a079636d99c336de56af16122b20bc794946f6bb12eec5db01646154d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Auto swap and liquify feature is\")\n        mstore(add(headStart, 96), \" already disabled.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9c08611362f532e1f3ccc52623a3ec3cd434f4f64631173250c17e815580b470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"Reward feature must be enabled. \")\n        mstore(add(headStart, 96), \"Try the EnableReward function.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9e689f793e6546576af5b30396447224d49065e9ed32ad7badd1b7543b91110d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the burn addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c17d0921cf8aaa6cca9bbf85ecc107c033ec3a37900fd4f49592cdf7d08ba9c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Auto burn feature is already dis\")\n        mstore(add(headStart, 96), \"abled.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cd8a4ed25a5d22ae5e8d18ceecda8323bdb45e6a59eea1bb81f53a5014c63deb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Reward feature is already enable\")\n        mstore(add(headStart, 96), \"d.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint8_t_uint8_t_uint8_t_uint8__to_t_uint8_t_uint8_t_uint8_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "669:38915:7:-:0;;;5992:680;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;909:18;;-1:-1:-1;;;;;;909:18:0;665:10:2;909:18:0;;;;;942:43;;665:10:2;;;;942:43:0;;867:17;;942:43;-1:-1:-1;6193:13:7;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6216:17:7;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;6243:9:7;:21;;-1:-1:-1;;;;6243:21:7;-1:-1:-1;;;6243:21:7;;;;;;;6305:15;6243:21;6305:2;:15;:::i;:::-;6289:32;;:12;:32;:::i;:::-;6274:12;:47;;;6331:14;:29;;;6405:26;;-1:-1:-1;;6405:26:7;:::i;:::-;6390:42;;-1:-1:-1;;6390:42:7;:::i;:::-;6370:16;:63;;;665:10:2;6460:33:7;;;;:19;:33;;;;;;;;:52;;;;6652:12;;6617:48;;1893:25:10;;;665:10:2;;6460:33:7;;6617:48;;1866:18:10;6617:48:7;;;;;;;5992:680;;;;669:38915;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:38915:7;;;-1:-1:-1;669:38915:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:10;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:10;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:10;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:10:o;928:814::-;1043:6;1051;1059;1067;1120:3;1108:9;1099:7;1095:23;1091:33;1088:2;;;1142:6;1134;1127:22;1088:2;1174:16;;-1:-1:-1;;;;;1239:14:10;;;1236:2;;;1271:6;1263;1256:22;1236:2;1299:61;1352:7;1343:6;1332:9;1328:22;1299:61;:::i;:::-;1289:71;;1406:2;1395:9;1391:18;1385:25;1369:41;;1435:2;1425:8;1422:16;1419:2;;;1456:6;1448;1441:22;1419:2;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;1590:2;1579:9;1575:18;1569:25;1634:4;1627:5;1623:16;1616:5;1613:27;1603:2;;1659:6;1651;1644:22;1603:2;1732;1717:18;;;;1711:25;1078:664;;;;-1:-1:-1;;;1078:664:10:o;1929:422::-;2018:1;2061:5;2018:1;2075:270;2096:7;2086:8;2083:21;2075:270;;;2155:4;2151:1;2147:6;2143:17;2137:4;2134:27;2131:2;;;2164:18;;:::i;:::-;2214:7;2204:8;2200:22;2197:2;;;2234:16;;;;2197:2;2313:22;;;;2273:15;;;;2075:270;;;2079:3;1993:358;;;;;:::o;2356:140::-;2414:5;2443:47;2484:4;2474:8;2470:19;2464:4;2443:47;:::i;:::-;2434:56;2424:72;-1:-1:-1;;;2424:72:10:o;2501:806::-;2550:5;2580:8;2570:2;;-1:-1:-1;2621:1:10;2635:5;;2570:2;2669:4;2659:2;;-1:-1:-1;2706:1:10;2720:5;;2659:2;2751:4;2769:1;2764:59;;;;2837:1;2832:130;;;;2744:218;;2764:59;2794:1;2785:10;;2808:5;;;2832:130;2869:3;2859:8;2856:17;2853:2;;;2876:18;;:::i;:::-;-1:-1:-1;;2932:1:10;2918:16;;2947:5;;2744:218;;3046:2;3036:8;3033:16;3027:3;3021:4;3018:13;3014:36;3008:2;2998:8;2995:16;2990:2;2984:4;2981:12;2977:35;2974:77;2971:2;;;-1:-1:-1;3083:19:10;;;3115:5;;2971:2;3162:34;3187:8;3181:4;3162:34;:::i;:::-;3232:6;3228:1;3224:6;3220:19;3211:7;3208:32;3205:2;;;3243:18;;:::i;:::-;3281:20;;-1:-1:-1;2560:747:10;;;;;:::o;3312:168::-;3352:7;3418:1;3414;3410:6;3406:14;3403:1;3400:21;3395:1;3388:9;3381:17;3377:45;3374:2;;;3425:18;;:::i;:::-;-1:-1:-1;3465:9:10;;3364:116::o;3485:125::-;3525:4;3553:1;3550;3547:8;3544:2;;;3558:18;;:::i;:::-;-1:-1:-1;3595:9:10;;3534:76::o;3615:380::-;3694:1;3690:12;;;;3737;;;3758:2;;3812:4;3804:6;3800:17;3790:27;;3758:2;3865;3857:6;3854:14;3834:18;3831:38;3828:2;;;3911:10;3906:3;3902:20;3899:1;3892:31;3946:4;3943:1;3936:15;3974:4;3971:1;3964:15;3828:2;;3670:325;;;:::o;4000:209::-;4032:1;4058;4048:2;;-1:-1:-1;;;4083:31:10;;4137:4;4134:1;4127:15;4165:4;4090:1;4155:15;4048:2;-1:-1:-1;4194:9:10;;4038:171::o;4214:127::-;4275:10;4270:3;4266:20;4263:1;4256:31;4306:4;4303:1;4296:15;4330:4;4327:1;4320:15;4346:127;4407:10;4402:3;4398:20;4395:1;4388:31;4438:4;4435:1;4428:15;4462:4;4459:1;4452:15;4378:95;669:38915:7;;;;;;",
  "deployedSourceMap": "669:38915:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7885:87;;;;;;;;;;-1:-1:-1;7957:8:7;;;;;;;7885:87;;;14896:4:10;14884:17;;;14866:36;;14854:2;14839:18;7885:87:7;;;;;;;;6813:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12034:166::-;;;;;;;;;;-1:-1:-1;12034:166:7;;;;;:::i;:::-;;:::i;:::-;;;2959:14:10;;2952:22;2934:41;;2922:2;2907:18;12034:166:7;2889:92:10;8196:93:7;;;;;;;;;;-1:-1:-1;8271:11:7;;;;;;;8196:93;;9092:98;;;;;;;;;;-1:-1:-1;9169:14:7;;;;;;;9092:98;;9660:108;;;;;;;;;;-1:-1:-1;9749:12:7;;9660:108;;;14435:25:10;;;14423:2;14408:18;9660:108:7;14390:76:10;9282:122:7;;;;;;;;;;-1:-1:-1;9371:26:7;;;;;;;9282:122;;12667:376;;;;;;;;;;-1:-1:-1;12667:376:7;;;;;:::i;:::-;;:::i;7548:89::-;;;;;;;;;;-1:-1:-1;7621:9:7;;;;;;;7548:89;;13438:212;;;;;;;;;;-1:-1:-1;13438:212:7;;;;;:::i;:::-;;:::i;20074:89::-;;;;;;;;;;-1:-1:-1;20074:89:7;;;;;:::i;:::-;;:::i;:::-;;35869:222;;;;;;;;;;;;;:::i;32731:465::-;;;;;;;;;;-1:-1:-1;32731:465:7;;;;;:::i;:::-;;:::i;36839:378::-;;;;;;;;;;-1:-1:-1;36839:378:7;;;;;:::i;:::-;;:::i;34620:632::-;;;;;;;;;;-1:-1:-1;34620:632:7;;;;;:::i;:::-;;:::i;7720:101::-;;;;;;;;;;-1:-1:-1;7800:14:7;;;;7720:101;;;2437:42:10;2425:55;;;2407:74;;2395:2;2380:18;7720:101:7;2362:125:10;11190:124:7;;;;;;;;;;-1:-1:-1;11190:124:7;;;;;:::i;:::-;11280:27;;11257:4;11280:27;;;:18;:27;;;;;;;;;11190:124;36326:287;;;;;;;;;;;;;:::i;37448:523::-;;;;;;;;;;-1:-1:-1;37448:523:7;;;;;:::i;:::-;;:::i;10255:133::-;;;;;;;;;;-1:-1:-1;10352:29:7;;10255:133;;10657:232;;;;;;;;;;-1:-1:-1;10657:232:7;;;;;:::i;:::-;;:::i;1700:145:0:-;;;;;;;;;;;;;:::i;35445:231:7:-;;;;;;;;;;;;;:::i;9891:103::-;;;;;;;;;;-1:-1:-1;9973:14:7;;9891:103;;20469:327;;;;;;;;;;-1:-1:-1;20469:327:7;;;;;:::i;:::-;;:::i;10976:130::-;;;;;;;;;;-1:-1:-1;10976:130:7;;;;;:::i;:::-;11069:30;;11046:4;11069:30;;;:21;:30;;;;;;;;;10976:130;1068:85:0;;;;;;;;;;-1:-1:-1;1114:7:0;1140:6;;;1068:85;;7015:93:7;;;;;;;;;;;;;:::i;10071:97::-;;;;;;;;;;-1:-1:-1;10150:11:7;;10071:97;;23345:641;;;;;;;;;;-1:-1:-1;23345:641:7;;;;;:::i;:::-;;:::i;33620:452::-;;;;;;;;;;-1:-1:-1;33620:452:7;;;;;:::i;:::-;;:::i;8913:102::-;;;;;;;;;;-1:-1:-1;8992:16:7;;;;;;;8913:102;;14137:370;;;;;;;;;;-1:-1:-1;14137:370:7;;;;;:::i;:::-;;:::i;11517:172::-;;;;;;;;;;-1:-1:-1;11517:172:7;;;;;:::i;:::-;;:::i;8540:107::-;;;;;;;;;;-1:-1:-1;8622:18:7;;;;;;;8540:107;;38990:591;;;;;;;;;;-1:-1:-1;38990:591:7;;;;;:::i;:::-;;:::i;8038:91::-;;;;;;;;;;-1:-1:-1;8112:10:7;;;;;;;8038:91;;11747:149;;;;;;;;;;-1:-1:-1;11747:149:7;;;;;:::i;:::-;11862:18;;;;11836:7;11862:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;11747:149;9485:115;;;;;;;;;;-1:-1:-1;9573:20:7;;9485:115;;8723:109;;;;;;;;;;-1:-1:-1;8806:19:7;;;;;;;8723:109;;1994:240:0;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;10472:127:7:-;;;;;;;;;;-1:-1:-1;10566:26:7;;10472:127;;38203:538;;;;;;;;;;-1:-1:-1;38203:538:7;;;;;:::i;:::-;;:::i;8362:103::-;;;;;;;;;;-1:-1:-1;8442:16:7;;;;;;;8362:103;;6813:89;6858:13;6890:5;6883:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6813:89;:::o;12034:166::-;12117:4;12133:39;665:10:2;12156:7:7;12165:6;12133:8;:39::i;:::-;-1:-1:-1;12189:4:7;12034:166;;;;;:::o;12667:376::-;12773:4;12789:36;12799:6;12807:9;12818:6;12789:9;:36::i;:::-;12843:19;;;;;;;:11;:19;;;;;;;;665:10:2;12843:33:7;;;;;;;;:43;-1:-1:-1;12843:43:7;12835:96;;;;-1:-1:-1;;;12835:96:7;;10037:2:10;12835:96:7;;;10019:21:10;10076:2;10056:18;;;10049:30;10115:34;10095:18;;;10088:62;10186:10;10166:18;;;10159:38;10214:19;;12835:96:7;;;;;;;;;12972:19;;;;;;;:11;:19;;;;;;;;665:10:2;12972:33:7;;;;;;;;;12941:74;;12950:6;;12972:42;;13008:6;;12972:42;:::i;:::-;12941:8;:74::i;:::-;-1:-1:-1;13032:4:7;12667:376;;;;;:::o;13438:212::-;665:10:2;13526:4:7;13574:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;13526:4;;13542:80;;13565:7;;13574:47;;13611:10;;13574:47;:::i;20074:89::-;20129:27;665:10:2;20149:6:7;20129:5;:27::i;:::-;20074:89;:::o;35869:222::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;35929:14:7::1;::::0;;;::::1;;;35921:62;;;::::0;-1:-1:-1;;;35921:62:7;;8859:2:10;35921:62:7::1;::::0;::::1;8841:21:10::0;8898:2;8878:18;;;8871:30;8937:34;8917:18;;;8910:62;9008:5;8988:18;;;8981:33;9031:19;;35921:62:7::1;8831:225:10::0;35921:62:7::1;35994:18;36007:1;36010::::0;35994:12:::1;:18::i;:::-;36022:14;:22:::0;;;::::1;::::0;;36068:16:::1;::::0;::::1;::::0;36039:5:::1;::::0;36068:16:::1;35869:222::o:0;32731:465::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;32831:16:7::1;::::0;;;::::1;;;32830:17;32822:67;;;::::0;-1:-1:-1;;;32822:67:7;;5160:2:10;32822:67:7::1;::::0;::::1;5142:21:10::0;5199:2;5179:18;;;5172:30;5238:34;5218:18;;;5211:62;5309:7;5289:18;;;5282:35;5334:19;;32822:67:7::1;5132:227:10::0;32822:67:7::1;32918:1;32907:8;:12;;;32899:52;;;::::0;-1:-1:-1;;;32899:52:7;;9681:2:10;32899:52:7::1;::::0;::::1;9663:21:10::0;9720:2;9700:18;;;9693:30;9759:29;9739:18;;;9732:57;9806:18;;32899:52:7::1;9653:177:10::0;32899:52:7::1;7621:9:::0;;;;;;;32969:20:::1;:16:::0;32988:1:::1;32969:20;:::i;:::-;:35;;;;32961:97;;;::::0;-1:-1:-1;;;32961:97:7;;9263:2:10;32961:97:7::1;::::0;::::1;9245:21:10::0;9302:2;9282:18;;;9275:30;9341:34;9321:18;;;9314:62;9412:19;9392:18;;;9385:47;9449:19;;32961:97:7::1;9235:239:10::0;32961:97:7::1;33077:16;:23:::0;;;::::1;::::0;::::1;::::0;;33110:38:::1;33121:8:::0;33131:16;33110:10:::1;:38::i;:::-;33172:17;::::0;::::1;::::0;;;::::1;32731:465:::0;;:::o;36839:378::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;36959:14:7::1;;36936:20;:37;36928:105;;;::::0;-1:-1:-1;;;36928:105:7;;7133:2:10;36928:105:7::1;::::0;::::1;7115:21:10::0;7172:2;7152:18;;;7145:30;7211:34;7191:18;;;7184:62;7282:25;7262:18;;;7255:53;7325:19;;36928:105:7::1;7105:245:10::0;36928:105:7::1;37063:20;::::0;;37093:43;;;;37152:58:::1;::::0;;14645:25:10;;;14701:2;14686:18;;14679:34;;;37152:58:7::1;::::0;14618:18:10;37152:58:7::1;;;;;;;1350:1:0;36839:378:7::0;:::o;34620:632::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;34765:26:7::1;::::0;::::1;::::0;::::1;;;34764:27;34756:89;;;::::0;-1:-1:-1;;;34756:89:7;;7965:2:10;34756:89:7::1;::::0;::::1;7947:21:10::0;8004:2;7984:18;;;7977:30;8043:34;8023:18;;;8016:62;8114:19;8094:18;;;8087:47;8151:19;;34756:89:7::1;7937:239:10::0;34756:89:7::1;34877:1;34863:11;:15;;;34855:55;;;::::0;-1:-1:-1;;;34855:55:7;;9681:2:10;34855:55:7::1;::::0;::::1;9663:21:10::0;9720:2;9700:18;;;9693:30;9759:29;9739:18;;;9732:57;9806:18;;34855:55:7::1;9653:177:10::0;34855:55:7::1;7621:9:::0;;;;;;;34928:23:::1;:19:::0;34950:1:::1;34928:23;:::i;:::-;:38;;;;34920:100;;;::::0;-1:-1:-1;;;34920:100:7;;9263:2:10;34920:100:7::1;::::0;::::1;9245:21:10::0;9302:2;9282:18;;;9275:30;9341:34;9321:18;;;9314:62;9412:19;9392:18;;;9385:47;9449:19;;34920:100:7::1;9235:239:10::0;34920:100:7::1;35031:20;:43:::0;;;35104:26:::1;:33:::0;;;::::1;;;::::0;;35147:47:::1;35161:11:::0;35174:19;35147:13:::1;:47::i;:::-;35218:27;::::0;::::1;::::0;;;::::1;34620:632:::0;;;:::o;36326:287::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;36398:26:7::1;::::0;::::1;::::0;::::1;;;36390:89;;;::::0;-1:-1:-1;;;36390:89:7;;10807:2:10;36390:89:7::1;::::0;::::1;10789:21:10::0;10846:2;10826:18;;;10819:30;10885:34;10865:18;;;10858:62;10956:20;10936:18;;;10929:48;10994:19;;36390:89:7::1;10779:240:10::0;36390:89:7::1;36490:19;36504:1;36507::::0;36490:13:::1;:19::i;:::-;36519:26;:34:::0;;;::::1;::::0;;36578:28:::1;::::0;::::1;::::0;36548:5:::1;::::0;36578:28:::1;36326:287::o:0;37448:523::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;37543:16:7::1;::::0;;;::::1;;;37535:96;;;::::0;-1:-1:-1;;;37535:96:7;;8383:2:10;37535:96:7::1;::::0;::::1;8365:21:10::0;8422:2;8402:18;;;8395:30;8461:34;8441:18;;;8434:62;8532:34;8512:18;;;8505:62;8604:5;8583:19;;;8576:34;8627:19;;37535:96:7::1;8355:297:10::0;37535:96:7::1;37673:11;::::0;37687:3:::1;::::0;37673:11:::1;::::0;;::::1;::::0;::::1;::::0;37649:21:::1;::::0;37660:10;;;::::1;;37649:8:::0;:21:::1;:::i;:::-;:35;;;;:::i;:::-;:41;;;37641:71;;;::::0;-1:-1:-1;;;37641:71:7;;5977:2:10;37641:71:7::1;::::0;::::1;5959:21:10::0;6016:2;5996:18;;;5989:30;6055:19;6035:18;;;6028:47;6092:18;;37641:71:7::1;5949:167:10::0;37641:71:7::1;37743:8;::::0;;::::1;37841:35:::0;;::::1;37786:16:::0;37841:35;;::::1;::::0;37812:19;;::::1;37743:8:::0;37812:19;;::::1;37841:35:::0;;;;;;;;;;;::::1;::::0;;;37892:72:::1;::::0;;37743:8;;::::1;::::0;::::1;15128:36:10::0;;;37786:16:7;;;::::1;::::0;;::::1;15195:2:10::0;15180:18;;15173:45;;;15234:18;;;15227:45;;;;15303:2;15288:18;;15281:45;37743:8:7;37892:72:::1;::::0;15115:3:10;15100:19;37892:72:7::1;;;;;;;;1350:1:0;;37448:523:7::0;;:::o;10657:232::-;10754:30;;;10731:7;10754:30;;;:21;:30;;;;;;;;10750:66;;;-1:-1:-1;10793:23:7;;;;;;:14;:23;;;;;;;10657:232::o;10750:66::-;10853:28;;;;;;;:19;:28;;;;;;10833:49;;:19;:49::i;1700:145:0:-;1114:7;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;::::1;1790:6:::0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;;::::1;::::0;;1700:145::o;35445:231:7:-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;35507:16:7::1;::::0;;;::::1;;;35499:67;;;::::0;-1:-1:-1;;;35499:67:7;;12870:2:10;35499:67:7::1;::::0;::::1;12852:21:10::0;12909:2;12889:18;;;12882:30;12948:34;12928:18;;;12921:62;13019:8;12999:18;;;12992:36;13045:19;;35499:67:7::1;12842:228:10::0;35499:67:7::1;35577:16;35588:1;35591::::0;35577:10:::1;:16::i;:::-;35603;:24:::0;;;::::1;::::0;;35651:18:::1;::::0;::::1;::::0;35622:5:::1;::::0;35651:18:::1;35445:231::o:0;20469:327::-;20545:24;20572:32;20582:7;665:10:2;11747:149:7;:::i;20572:32::-;20545:59;;20642:6;20622:16;:26;;20614:75;;;;-1:-1:-1;;;20614:75:7;;12059:2:10;20614:75:7;;;12041:21:10;12098:2;12078:18;;;12071:30;12137:34;12117:18;;;12110:62;12208:6;12188:18;;;12181:34;12232:19;;20614:75:7;12031:226:10;20614:75:7;20699:58;20708:7;665:10:2;20731:25:7;20750:6;20731:16;:25;:::i;20699:58::-;20767:22;20773:7;20782:6;20767:5;:22::i;:::-;20469:327;;;:::o;7015:93::-;7062:13;7094:7;7087:14;;;;;:::i;23345:641::-;665:10:2;23562:6:7;23541:17;665:10:2;23541:9:7;:17::i;:::-;:27;;23533:79;;;;-1:-1:-1;;;23533:79:7;;7557:2:10;23533:79:7;;;7539:21:10;7596:2;7576:18;;;7569:30;7635:34;7615:18;;;7608:62;7706:9;7686:18;;;7679:37;7733:19;;23533:79:7;7529:229:10;23533:79:7;23622:30;23655:25;23666:6;23674:5;23655:10;:25::i;:::-;23694:29;;;;;;;:21;:29;;;;;;23622:58;;-1:-1:-1;23694:29:7;;23690:99;;;23765:13;;23739:22;;;23765:13;23739:22;;;:14;:22;;;;;:39;;:22;;23765:13;23739:39;;23765:13;;23739:39;:::i;:::-;;;;-1:-1:-1;;23690:99:7;23829:14;;;;23798:27;;;;;;;:19;:27;;;;;:45;;:27;;;:45;;23829:14;;23798:45;:::i;:::-;;;;-1:-1:-1;;23900:14:7;;;;23881:16;;:33;;23900:14;23881:33;:::i;:::-;23862:16;:52;;;;23942:6;23924:14;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;23964:15:7;;14435:25:10;;;23964:15:7;;14423:2:10;14408:18;23964:15:7;;;;;;;23345:641;;;:::o;33620:452::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;33722:14:7::1;::::0;;;::::1;;;33721:15;33713:62;;;::::0;-1:-1:-1;;;33713:62:7;;13682:2:10;33713:62:7::1;::::0;::::1;13664:21:10::0;13721:2;13701:18;;;13694:30;13760:34;13740:18;;;13733:62;13831:4;13811:18;;;13804:32;13853:19;;33713:62:7::1;13654:224:10::0;33713:62:7::1;33806:1;33793:10;:14;;;33785:54;;;::::0;-1:-1:-1;;;33785:54:7;;9681:2:10;33785:54:7::1;::::0;::::1;9663:21:10::0;9720:2;9700:18;;;9693:30;9759:29;9739:18;;;9732:57;9806:18;;33785:54:7::1;9653:177:10::0;33785:54:7::1;7621:9:::0;;;;;;;33857:22:::1;:18:::0;33878:1:::1;33857:22;:::i;:::-;:37;;;;33849:99;;;::::0;-1:-1:-1;;;33849:99:7;;9263:2:10;33849:99:7::1;::::0;::::1;9245:21:10::0;9302:2;9282:18;;;9275:30;9341:34;9321:18;;;9314:62;9412:19;9392:18;;;9385:47;9449:19;;33849:99:7::1;9235:239:10::0;33849:99:7::1;33959:14;:21:::0;;;::::1;::::0;::::1;::::0;;33990:44:::1;34003:10:::0;34015:18;33990:12:::1;:44::i;:::-;34050:15;::::0;::::1;::::0;;;::::1;33620:452:::0;;:::o;14137:370::-;665:10:2;14230:4:7;14273:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;14325:35;;;;14317:85;;;;-1:-1:-1;;;14317:85:7;;14085:2:10;14317:85:7;;;14067:21:10;14124:2;14104:18;;;14097:30;14163:34;14143:18;;;14136:62;14234:7;14214:18;;;14207:35;14259:19;;14317:85:7;14057:227:10;14317:85:7;14412:67;665:10:2;14435:7:7;14444:34;14463:15;14444:16;:34;:::i;11517:172::-;11603:4;11619:42;665:10:2;11643:9:7;11654:6;11619:9;:42::i;38990:591::-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;39094:26:7::1;::::0;::::1;::::0;::::1;;;39086:128;;;::::0;-1:-1:-1;;;39086:128:7;;4662:2:10;39086:128:7::1;::::0;::::1;4644:21:10::0;4701:2;4681:18;;;4674:30;4740:34;4720:18;;;4713:62;4811:34;4791:18;;;4784:62;4883:27;4862:19;;;4855:56;4928:19;;39086:128:7::1;4634:319:10::0;39086:128:7::1;39243:10;::::0;39270:3:::1;::::0;39256:11;;39232:21:::1;::::0;39243:10:::1;::::0;;::::1;::::0;::::1;::::0;39232:8;;::::1;;:21;:::i;:::-;:35;;;;:::i;:::-;:41;;;39224:71;;;::::0;-1:-1:-1;;;39224:71:7;;5977:2:10;39224:71:7::1;::::0;::::1;5959:21:10::0;6016:2;5996:18;;;5989:30;6055:19;6035:18;;;6028:47;6092:18;;39224:71:7::1;5949:167:10::0;39224:71:7::1;39326:11;::::0;;::::1;39436:41:::0;;::::1;39372:19:::0;39436:41;;::::1;::::0;39401:25;;::::1;39326:11:::0;39401:25;;::::1;39436:41:::0;;;;;;;;;;;::::1;::::0;;;39493:81:::1;::::0;;39326:11;;::::1;::::0;::::1;15128:36:10::0;;;39372:19:7;;;::::1;::::0;;::::1;15195:2:10::0;15180:18;;15173:45;;;15234:18;;;15227:45;;;;15303:2;15288:18;;15281:45;39326:11:7;39493:81:::1;::::0;15115:3:10;15100:19;39493:81:7::1;15082:250:10::0;1994:240:0;1114:7;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;2082:22:::1;::::0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;6323:2:10;2074:73:0::1;::::0;::::1;6305:21:10::0;6362:2;6342:18;;;6335:30;6401:34;6381:18;;;6374:62;6472:8;6452:18;;;6445:36;6498:19;;2074:73:0::1;6295:228:10::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;::::1;::::0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;38203:538:7:-;1114:7:0;1140:6;1280:23;1140:6;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;10446:2:10;1272:68:0;;;10428:21:10;;;10465:18;;;10458:30;10524:34;10504:18;;;10497:62;10576:18;;1272:68:0;10418:182:10;1272:68:0;38304:14:7::1;::::0;;;::::1;;;38296:89;;;::::0;-1:-1:-1;;;38296:89:7;;11226:2:10;38296:89:7::1;::::0;::::1;11208:21:10::0;11265:2;11245:18;;;11238:30;11304:34;11284:18;;;11277:62;11375:32;11355:18;;;11348:60;11425:19;;38296:89:7::1;11198:252:10::0;38296:89:7::1;38427:11;::::0;38441:3:::1;::::0;38427:11:::1;::::0;;::::1;::::0;::::1;::::0;38403:21:::1;::::0;38414:10;;38403:8;;::::1;;:21;:::i;:::-;:35;;;;:::i;:::-;:41;;;38395:71;;;::::0;-1:-1:-1;;;38395:71:7;;5977:2:10;38395:71:7::1;::::0;::::1;5959:21:10::0;6016:2;5996:18;;;5989:30;6055:19;6035:18;;;6028:47;6092:18;;38395:71:7::1;5949:167:10::0;38395:71:7::1;38497:10;::::0;;::::1;38603:37:::0;;::::1;::::0;;::::1;::::0;38570:23;;::::1;38497:10:::0;38570:23;;::::1;38603:37:::0;;;;;;;;;;;::::1;::::0;;;38656:78:::1;::::0;;38497:10;;::::1;::::0;::::1;15128:36:10::0;;;38542:18:7;;;::::1;::::0;;::::1;15195:2:10::0;15180:18;;15173:45;;;15234:18;;;15227:45;15303:2;15288:18;;15281:45;38497:10:7;;38656:78:::1;::::0;15115:3:10;15100:19;38656:78:7::1;15082:250:10::0;15691:340:7;15792:19;;;15784:68;;;;-1:-1:-1;;;15784:68:7;;13277:2:10;15784:68:7;;;13259:21:10;13316:2;13296:18;;;13289:30;13355:34;13335:18;;;13328:62;13426:6;13406:18;;;13399:34;13450:19;;15784:68:7;13249:226:10;15784:68:7;15870:21;;;15862:68;;;;-1:-1:-1;;;15862:68:7;;6730:2:10;15862:68:7;;;6712:21:10;6769:2;6749:18;;;6742:30;6808:34;6788:18;;;6781:62;6879:4;6859:18;;;6852:32;6901:19;;15862:68:7;6702:224:10;15862:68:7;15941:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15992:32;;14435:25:10;;;15992:32:7;;14408:18:10;15992:32:7;;;;;;;15691:340;;;:::o;16037:1191::-;16142:20;;;16134:70;;;;-1:-1:-1;;;16134:70:7;;12464:2:10;16134:70:7;;;12446:21:10;12503:2;12483:18;;;12476:30;12542:34;12522:18;;;12515:62;12613:7;12593:18;;;12586:35;12638:19;;16134:70:7;12436:227:10;16134:70:7;16222:23;;;16214:71;;;;-1:-1:-1;;;16214:71:7;;3855:2:10;16214:71:7;;;3837:21:10;3894:2;3874:18;;;3867:30;3933:34;3913:18;;;3906:62;4004:5;3984:18;;;3977:33;4027:19;;16214:71:7;3827:225:10;16214:71:7;16348:26;;;16296:30;16348:26;;;:18;:26;;;;;;16329:46;;16340:6;;16348:26;;16329:10;:46::i;:::-;16397:29;;;;;;;:21;:29;;;;;;16296:79;;-1:-1:-1;16397:29:7;;:66;;;;-1:-1:-1;16431:32:7;;;;;;;:21;:32;;;;;;;;16430:33;16397:66;16393:667;;;16479:48;16501:6;16509:9;16520:6;16479:21;:48::i;:::-;16393:667;;;16549:29;;;;;;;:21;:29;;;;;;;;16548:30;:66;;;;-1:-1:-1;16582:32:7;;;;;;;:21;:32;;;;;;;;16548:66;16544:516;;;16630:46;16650:6;16658:9;16669:6;16630:19;:46::i;16544:516::-;16698:29;;;;;;;:21;:29;;;;;;;;16697:30;:67;;;;-1:-1:-1;16732:32:7;;;;;;;:21;:32;;;;;;;;16731:33;16697:67;16693:367;;;16780:44;16798:6;16806:9;16817:6;16780:17;:44::i;16693:367::-;16845:29;;;;;;;:21;:29;;;;;;;;:65;;;;-1:-1:-1;16878:32:7;;;;;;;:21;:32;;;;;;;;16845:65;16841:219;;;16926:48;16948:6;16956:9;16967:6;16926:21;:48::i;16841:219::-;17005:44;17023:6;17031:9;17042:6;17005:17;:44::i;:::-;17091:9;17074:51;;17083:6;17074:51;;;17102:6;:22;;;17074:51;;;;14435:25:10;;14423:2;14408:18;;14390:76;17074:51:7;;;;;;;;17141:26;;;;;;;:18;:26;;;;;;;;17136:85;;17183:27;17203:6;17183:19;:27::i;:::-;16037:1191;;;;:::o;14884:797::-;14967:22;;;1780:42;14967:22;;14959:68;;;;-1:-1:-1;;;14959:68:7;;11657:2:10;14959:68:7;;;11639:21:10;11696:2;11676:18;;;11669:30;11735:34;11715:18;;;11708:62;11806:3;11786:18;;;11779:31;11827:19;;14959:68:7;11629:223:10;14959:68:7;15038:22;15063:18;15073:7;15063:9;:18::i;:::-;15038:43;;15117:6;15099:14;:24;;15091:71;;;;-1:-1:-1;;;15091:71:7;;4259:2:10;15091:71:7;;;4241:21:10;4298:2;4278:18;;;4271:30;4337:34;4317:18;;;4310:62;4408:4;4388:18;;;4381:32;4430:19;;15091:71:7;4231:224:10;15091:71:7;15173:15;15191:19;15203:6;15191:11;:19::i;:::-;15277:30;;;;;;;:21;:30;;;;;;15173:37;;-1:-1:-1;15277:30:7;;15273:94;;;15323:23;;;;;;;:14;:23;;;;;:33;;15350:6;;15323:23;:33;;15350:6;;15323:33;:::i;:::-;;;;-1:-1:-1;;15273:94:7;15377:28;;;;;;;:19;:28;;;;;:39;;15409:7;;15377:28;:39;;15409:7;;15377:39;:::i;:::-;;;;-1:-1:-1;;1780:42:7;15427:27;;;;:14;:27;;;:37;;15458:6;;15427:27;:37;;15458:6;;15427:37;:::i;:::-;;;;-1:-1:-1;;1780:42:7;15474:32;;;;:19;:32;;;:43;;15510:7;;15474:32;:43;;15510:7;;15474:43;:::i;:::-;;;;;;;;15546:6;15528:14;;:24;;;;;;;:::i;:::-;;;;;;;;15578:6;15563:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;15600:21:7;;;2696:42:10;2684:55;;2666:74;;2771:2;2756:18;;2749:34;;;15600:21:7;;2639:18:10;15600:21:7;;;;;;;15636:38;;14435:25:10;;;1780:42:7;;15636:38;;;;;;14423:2:10;14408:18;15636:38:7;;;;;;;14884:797;;;;:::o;24590:257::-;24658:7;24696:16;;24685:7;:27;;24677:82;;;;-1:-1:-1;;;24677:82:7;;5566:2:10;24677:82:7;;;5548:21:10;5605:2;5585:18;;;5578:30;5644:34;5624:18;;;5617:62;5715:12;5695:18;;;5688:40;5745:19;;24677:82:7;5538:232:10;24677:82:7;24769:19;24792:10;:8;:10::i;:::-;24769:33;-1:-1:-1;24819:21:7;24769:33;24819:7;:21;:::i;:::-;24812:28;24590:257;-1:-1:-1;;;24590:257:7:o;28720:305::-;28802:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28802:23:7;28837:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28837:30:7;28877:22;;;28909:38;28877:6;28929:17;28909:11;:38::i;:::-;28957;28969:6;28977:17;28957:11;:38::i;19023:381::-;19198:13;;19173:22;;;19198:13;19173:22;;;:14;:22;;;;;;:38;;19198:13;19173:38;:::i;:::-;19148:22;;;;;;;:14;:22;;;;;;;;:63;;;;19281:14;;;;19251:19;:27;;;;;;;:44;;19281:14;19251:44;:::i;:::-;19221:27;;;;;;;;:19;:27;;;;;;:74;;;;19371:22;;;;19338:30;;;;;;;;;;:55;;19371:22;19338:55;:::i;:::-;19305:30;;;;;;;;:19;:30;;;;;:88;;;;-1:-1:-1;;19023:381:7:o;18473:395::-;18656:14;;;;18626:27;;;;;;;:19;:27;;;;;;:44;;18656:14;18626:44;:::i;:::-;18596:27;;;;;;;;:19;:27;;;;;;;;:74;;;;18736:22;;;;18708:25;;;;;:14;:25;;;;;;;:50;;18736:22;18708:50;:::i;:::-;18680:25;;;;;;;:14;:25;;;;;;;;:78;;;;18834:22;;;;18801:19;:30;;;;;;;:55;;18834:22;18801:55;:::i;18000:318::-;18186:14;;;;18156:27;;;;;;;:19;:27;;;;;;:44;;18186:14;18156:44;:::i;19521:466::-;19688:13;;19663:22;;;19688:13;19663:22;;;:14;:22;;;;;;:38;;19688:13;19663:38;:::i;:::-;19638:22;;;;;;;:14;:22;;;;;;;;:63;;;;19771:14;;;;19741:19;:27;;;;;;;:44;;19771:14;19741:44;:::i;17315:568::-;17423:16;;;;;;;17419:284;;;17488:15;;;;;17478:4;17455:29;;;;:14;:29;;;;;;:48;;17488:15;;17455:29;;:48;;17488:15;;17455:48;:::i;:::-;;;;-1:-1:-1;;17555:15:7;;;;17545:4;17517:34;;;;:19;:34;;;;;:53;;:34;;;:53;;17555:15;;17517:53;:::i;:::-;;;;-1:-1:-1;17584:54:7;;-1:-1:-1;17601:4:7;665:10:2;17622:6:7;:15;;;17584:8;:54::i;:::-;17652:40;17669:4;17676:6;:15;;;17652:8;:40::i;:::-;17756:14;;;;;;;17752:97;;;17786:52;17801:6;:17;;;17820:6;:17;;;17786:14;:52::i;30859:154::-;30918:7;30937:19;30959:10;:8;:10::i;:::-;30937:32;-1:-1:-1;30986:20:7;30937:32;30986:6;:20;:::i;31084:157::-;31125:7;31145:15;31162;31181:19;:17;:19::i;:::-;31144:56;;-1:-1:-1;31144:56:7;-1:-1:-1;31217:17:7;31144:56;;31217:17;:::i;:::-;31210:24;;;;31084:157;:::o;29219:691::-;29332:17;29328:567;;;29390:13;;29365:22;;;:38;29219:691;;:::o;29328:567::-;29495:13;;29510:8;;29481:56;;29495:13;29510:8;;;;;;;29520:16;;;;29481:13;:56::i;:::-;29463:15;;;:74;29585:13;;29600:10;;29571:60;;29585:13;29600:10;;;;;;;29612:18;;;;29571:13;:60::i;:::-;29551:17;;;:80;29680:13;;29695:11;;29666:62;;29680:13;29695:11;;;;;;;29708:19;;;;29666:13;:62::i;:::-;29645:18;;;:83;;;29846:17;;;;29828:15;;;;29812:13;;:31;;29828:15;29812:31;:::i;:::-;:51;;;;:::i;:::-;:72;;;;:::i;:::-;29787:22;;;:97;29219:691;;:::o;30113:680::-;30213:19;30235:10;:8;:10::i;:::-;30273:13;;30213:32;;-1:-1:-1;30273:27:7;;30213:32;;30273:27;:::i;:::-;30256:14;;;:44;30311:467;;;;30373:14;;;;30348:22;;;:39;20469:327;;;:::o;30311:467::-;30435:13;;:27;;30451:11;;30435:27;:::i;:::-;30418:14;;;:44;30494:15;;;;:29;;30512:11;;30494:29;:::i;:::-;30476:15;;;:47;30557:17;;;;:31;;30577:11;;30557:31;:::i;:::-;30537:17;;;:51;30623:18;;;;:32;;30644:11;;30623:32;:::i;:::-;30602:18;;;:53;;;30729:17;;;;30711:15;;;;30694:14;;;;:32;;30711:15;30694:32;:::i;:::-;:52;;;;:::i;:::-;:73;;;;:::i;:::-;30669:22;;;:98;30113:680;;;:::o;28199:272::-;28416:10;28397:16;;:29;;;;:::i;:::-;28378:16;:48;;;;28454:10;28436:14;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;28199:272:7:o;31331:686::-;31427:16;;31471:12;;31381:7;;;;;31499:381;31523:19;:26;31519:30;;31499:381;;;31620:7;31574:19;:43;31594:19;31614:1;31594:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31574:43;;;;;;;;;;;;;:53;;:105;;;31672:7;31631:14;:38;31646:19;31666:1;31646:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31631:38;;;;;;;;;;;;;:48;31574:105;31570:150;;;31689:16;;31707:12;;31681:39;;;;;;;31331:686;;:::o;31570:150::-;31754:19;:43;31774:19;31794:1;31774:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31754:43;;;;;;;;;;;;;31744:53;;:7;:53;:::i;:::-;31734:63;;31831:14;:38;31846:19;31866:1;31846:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31831:38;;;;;;;;;;;;;31821:48;;:7;:48;:::i;:::-;31811:58;-1:-1:-1;31551:3:7;;;;:::i;:::-;;;;31499:381;;;;31922:12;;31903:16;;:31;;;;:::i;:::-;31893:7;:41;31889:86;;;31944:16;;31962:12;;31936:39;;;;;;31331:686;;:::o;31889:86::-;31993:7;;32002;;-1:-1:-1;31331:686:7;-1:-1:-1;31331:686:7:o;32095:172::-;32187:7;32252;32229:18;32235:12;32229:2;:18;:::i;:::-;32213:12;;;;:6;:12;:::i;:::-;:35;;;;:::i;:::-;:47;;;;:::i;:::-;32206:54;32095:172;-1:-1:-1;;;;32095:172:7:o;14:196:10:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:156::-;281:20;;341:4;330:16;;320:27;;310:2;;361:1;358;351:12;376:196;435:6;488:2;476:9;467:7;463:23;459:32;456:2;;;509:6;501;494:22;456:2;537:29;556:9;537:29;:::i;577:270::-;645:6;653;706:2;694:9;685:7;681:23;677:32;674:2;;;727:6;719;712:22;674:2;755:29;774:9;755:29;:::i;:::-;745:39;;803:38;837:2;826:9;822:18;803:38;:::i;:::-;793:48;;664:183;;;;;:::o;852:338::-;929:6;937;945;998:2;986:9;977:7;973:23;969:32;966:2;;;1019:6;1011;1004:22;966:2;1047:29;1066:9;1047:29;:::i;:::-;1037:39;;1095:38;1129:2;1118:9;1114:18;1095:38;:::i;:::-;1085:48;;1180:2;1169:9;1165:18;1152:32;1142:42;;956:234;;;;;:::o;1195:264::-;1263:6;1271;1324:2;1312:9;1303:7;1299:23;1295:32;1292:2;;;1345:6;1337;1330:22;1292:2;1373:29;1392:9;1373:29;:::i;:::-;1363:39;1449:2;1434:18;;;;1421:32;;-1:-1:-1;;;1282:177:10:o;1464:190::-;1523:6;1576:2;1564:9;1555:7;1551:23;1547:32;1544:2;;;1597:6;1589;1582:22;1544:2;-1:-1:-1;1625:23:10;;1534:120;-1:-1:-1;1534:120:10:o;1659:262::-;1723:6;1731;1784:2;1772:9;1763:7;1759:23;1755:32;1752:2;;;1805:6;1797;1790:22;1752:2;1833:27;1850:9;1833:27;:::i;:::-;1823:37;;1879:36;1911:2;1900:9;1896:18;1879:36;:::i;1926:330::-;1999:6;2007;2015;2068:2;2056:9;2047:7;2043:23;2039:32;2036:2;;;2089:6;2081;2074:22;2036:2;2117:27;2134:9;2117:27;:::i;:::-;2107:37;;2163:36;2195:2;2184:9;2180:18;2163:36;:::i;2986:662::-;3098:4;3127:2;3156;3145:9;3138:21;3188:6;3182:13;3231:6;3226:2;3215:9;3211:18;3204:34;3256:4;3269:140;3283:6;3280:1;3277:13;3269:140;;;3378:14;;;3374:23;;3368:30;3344:17;;;3363:2;3340:26;3333:66;3298:10;;3269:140;;;3427:6;3424:1;3421:13;3418:2;;;3497:4;3492:2;3483:6;3472:9;3468:22;3464:31;3457:45;3418:2;-1:-1:-1;3564:2:10;3552:15;3569:66;3548:88;3533:104;;;;3639:2;3529:113;;3107:541;-1:-1:-1;;;3107:541:10:o;15337:128::-;15377:3;15408:1;15404:6;15401:1;15398:13;15395:2;;;15414:18;;:::i;:::-;-1:-1:-1;15450:9:10;;15385:80::o;15470:204::-;15508:3;15544:4;15541:1;15537:12;15576:4;15573:1;15569:12;15611:3;15605:4;15601:14;15596:3;15593:23;15590:2;;;15619:18;;:::i;:::-;15655:13;;15516:158;-1:-1:-1;;;15516:158:10:o;15679:274::-;15719:1;15745;15735:2;;15780:77;15777:1;15770:88;15881:4;15878:1;15871:15;15909:4;15906:1;15899:15;15735:2;-1:-1:-1;15938:9:10;;15725:228::o;15958:482::-;16047:1;16090:5;16047:1;16104:330;16125:7;16115:8;16112:21;16104:330;;;16244:4;16176:66;16172:77;16166:4;16163:87;16160:2;;;16253:18;;:::i;:::-;16303:7;16293:8;16289:22;16286:2;;;16323:16;;;;16286:2;16402:22;;;;16362:15;;;;16104:330;;;16108:3;16022:418;;;;;:::o;16445:140::-;16503:5;16532:47;16573:4;16563:8;16559:19;16553:4;16639:5;16669:8;16659:2;;-1:-1:-1;16710:1:10;16724:5;;16659:2;16758:4;16748:2;;-1:-1:-1;16795:1:10;16809:5;;16748:2;16840:4;16858:1;16853:59;;;;16926:1;16921:130;;;;16833:218;;16853:59;16883:1;16874:10;;16897:5;;;16921:130;16958:3;16948:8;16945:17;16942:2;;;16965:18;;:::i;:::-;-1:-1:-1;;17021:1:10;17007:16;;17036:5;;16833:218;;17135:2;17125:8;17122:16;17116:3;17110:4;17107:13;17103:36;17097:2;17087:8;17084:16;17079:2;17073:4;17070:12;17066:35;17063:77;17060:2;;;-1:-1:-1;17172:19:10;;;17204:5;;17060:2;17251:34;17276:8;17270:4;17251:34;:::i;:::-;17381:6;17313:66;17309:79;17300:7;17297:92;17294:2;;;17392:18;;:::i;:::-;17430:20;;16649:807;-1:-1:-1;;;16649:807:10:o;17461:228::-;17501:7;17627:1;17559:66;17555:74;17552:1;17549:81;17544:1;17537:9;17530:17;17526:105;17523:2;;;17634:18;;:::i;:::-;-1:-1:-1;17674:9:10;;17513:176::o;17694:125::-;17734:4;17762:1;17759;17756:8;17753:2;;;17767:18;;:::i;:::-;-1:-1:-1;17804:9:10;;17743:76::o;17824:437::-;17903:1;17899:12;;;;17946;;;17967:2;;18021:4;18013:6;18009:17;17999:27;;17967:2;18074;18066:6;18063:14;18043:18;18040:38;18037:2;;;18111:77;18108:1;18101:88;18212:4;18209:1;18202:15;18240:4;18237:1;18230:15;18037:2;;17879:382;;;:::o;18266:195::-;18305:3;18336:66;18329:5;18326:77;18323:2;;;18406:18;;:::i;:::-;-1:-1:-1;18453:1:10;18442:13;;18313:148::o;18466:184::-;18518:77;18515:1;18508:88;18615:4;18612:1;18605:15;18639:4;18636:1;18629:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n// (Uni|Pancake)Swap libs are interchangeable\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\n\n/*\n    For lines that are marked ERC20 Token Standard, learn more at https://eips.ethereum.org/EIPS/eip-20. \n*/\ncontract ERC20Deflationary is Context, IERC20, Ownable {\n\n    // Keeps track of balances for address that are included in receiving reward.\n    mapping (address => uint256) private _reflectionBalances;\n\n    // Keeps track of balances for address that are excluded from receiving reward.\n    mapping (address => uint256) private _tokenBalances;\n\n    // Keeps track of which address are excluded from fee.\n    mapping (address => bool) private _isExcludedFromFee;\n\n    // Keeps track of which address are excluded from reward.\n    mapping (address => bool) private _isExcludedFromReward;\n    \n    // An array of addresses that are excluded from reward.\n    address[] private _excludedFromReward;\n\n    // ERC20 Token Standard\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    // Liquidity pool provider router\n    IUniswapV2Router02 internal _uniswapV2Router;\n\n    // This Token and WETH pair contract address.\n    address internal _uniswapV2Pair;\n\n    // Where burnt tokens are sent to. This is an address that no one can have accesses to.\n    address private constant burnAccount = 0xF3d383AAE83C80cCcFeF84eE7e864E1C249089ff;\n    \n    /*\n        Tax rate = (_taxXXX / 10**_tax_XXXDecimals) percent.\n        For example: if _taxBurn is 1 and _taxBurnDecimals is 2.\n        Tax rate = 0.01%\n\n        If you want tax rate for burn to be 5% for example,\n        set _taxBurn to 5 and _taxBurnDecimals to 0.\n        5 * (10 ** 0) = 5\n    */\n\n    // Decimals of taxBurn. Used for have tax less than 1%.\n    uint8 private _taxBurnDecimals;\n\n    // Decimals of taxReward. Used for have tax less than 1%.\n    uint8 private _taxRewardDecimals;\n\n    // Decimals of taxLiquify. Used for have tax less than 1%.\n    uint8 private _taxLiquifyDecimals;\n\n    // This percent of a transaction will be burnt.\n    uint8 private _taxBurn;\n\n    // This percent of a transaction will be redistribute to all holders.\n    uint8 private _taxReward;\n\n    // This percent of a transaction will be added to the liquidity pool. More details at https://github.com/Sheldenshi/ERC20Deflationary.\n    uint8 private _taxLiquify; \n\n    // ERC20 Token Standard\n    uint8 private _decimals;\n\n    // ERC20 Token Standard\n    uint256 private  _totalSupply;\n\n    // Current supply:= total supply - burnt tokens\n    uint256 private _currentSupply;\n\n    // A number that helps distributing fees to all holders respectively.\n    uint256 private _reflectionTotal;\n\n    // Total amount of tokens rewarded / distributing. \n    uint256 private _totalRewarded;\n\n    // Total amount of tokens burnt.\n    uint256 private _totalBurnt;\n\n    // Total amount of tokens locked in the LP (this token and WETH pair).\n    uint256 private _totalTokensLockedInLiquidity;\n\n    // Total amount of ETH locked in the LP (this token and WETH pair).\n    uint256 private _totalETHLockedInLiquidity;\n\n    // A threshold for swap and liquify.\n    uint256 private _minTokensBeforeSwap;\n\n    // ERC20 Token Standard\n    string private _name;\n    // ERC20 Token Standard\n    string private _symbol;\n\n    // Whether a previous call of SwapAndLiquify process is still in process.\n    bool private _inSwapAndLiquify;\n\n    bool private _autoSwapAndLiquifyEnabled;\n    bool private _autoBurnEnabled;\n    bool private _rewardEnabled;\n    \n    // Prevent reentrancy.\n    modifier lockTheSwap {\n        require(!_inSwapAndLiquify, \"Currently in swap and liquify.\");\n        _inSwapAndLiquify = true;\n        _;\n        _inSwapAndLiquify = false;\n    }\n\n    // Return values of _getValues function.\n    struct ValuesFromAmount {\n        // Amount of tokens for to transfer.\n        uint256 amount;\n        // Amount tokens charged for burning.\n        uint256 tBurnFee;\n        // Amount tokens charged to reward.\n        uint256 tRewardFee;\n        // Amount tokens charged to add to liquidity.\n        uint256 tLiquifyFee;\n        // Amount tokens after fees.\n        uint256 tTransferAmount;\n        // Reflection of amount.\n        uint256 rAmount;\n        // Reflection of burn fee.\n        uint256 rBurnFee;\n        // Reflection of reward fee.\n        uint256 rRewardFee;\n        // Reflection of liquify fee.\n        uint256 rLiquifyFee;\n        // Reflection of transfer amount.\n        uint256 rTransferAmount;\n    }\n\n    /*\n        Events\n    */\n    event Burn(address from, uint256 amount);\n    event TaxBurnUpdate(uint8 previousTax, uint8 previousDecimals, uint8 currentTax, uint8 currentDecimal);\n    event TaxRewardUpdate(uint8 previousTax, uint8 previousDecimals, uint8 currentTax, uint8 currentDecimal);\n    event TaxLiquifyUpdate(uint8 previousTax, uint8 previousDecimals, uint8 currentTax, uint8 currentDecimal);\n    event MinTokensBeforeSwapUpdated(uint256 previous, uint256 current);\n    event SwapAndLiquify(\n        uint256 tokensSwapped,\n        uint256 ethReceived,\n        uint256 tokensAddedToLiquidity\n    );\n    event ExcludeAccountFromReward(address account);\n    event IncludeAccountInReward(address account);\n    event ExcludeAccountFromFee(address account);\n    event IncludeAccountInFee(address account);\n    event EnabledAutoBurn();\n    event EnabledReward();\n    event EnabledAutoSwapAndLiquify();\n    event DisabledAutoBurn();\n    event DisabledReward();\n    event DisabledAutoSwapAndLiquify();\n    event Airdrop(uint256 amount);\n    \n    constructor (string memory name_, string memory symbol_, uint8 decimals_, uint256 tokenSupply_) {\n        // Sets the values for `name`, `symbol`, `totalSupply`, `currentSupply`, and `rTotal`.\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n        _totalSupply = tokenSupply_ * (10 ** decimals_);\n        _currentSupply = _totalSupply;\n        _reflectionTotal = (~uint256(0) - (~uint256(0) % _totalSupply));\n\n        // Mint\n        _reflectionBalances[_msgSender()] = _reflectionTotal;\n        // exclude owner, burnAccount, and this contract from receiving rewards.\n        \n        emit Transfer(address(0), _msgSender(), _totalSupply);\n    }\n\n    // allow the contract to receive ETH\n    receive() external payable {}\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the address of this token and WETH pair.\n     */\n    function uniswapV2Pair() public view virtual returns (address) {\n        return _uniswapV2Pair;\n    }\n\n    /**\n     * @dev Returns the current burn tax.\n     */\n    function taxBurn() public view virtual returns (uint8) {\n        return _taxBurn;\n    }\n\n    /**\n     * @dev Returns the current reward tax.\n     */\n    function taxReward() public view virtual returns (uint8) {\n        return _taxReward;\n    }\n\n    /**\n     * @dev Returns the current liquify tax.\n     */\n    function taxLiquify() public view virtual returns (uint8) {\n        return _taxLiquify;\n    }\n\n    /**\n     * @dev Returns the current burn tax decimals.\n     */\n    function taxBurnDecimals() public view virtual returns (uint8) {\n        return _taxBurnDecimals;\n    }\n\n    /**\n     * @dev Returns the current reward tax decimals.\n     */\n    function taxRewardDecimals() public view virtual returns (uint8) {\n        return _taxRewardDecimals;\n    }\n\n    /**\n     * @dev Returns the current liquify tax decimals.\n     */\n    function taxLiquifyDecimals() public view virtual returns (uint8) {\n        return _taxLiquifyDecimals;\n    }\n\n     /**\n     * @dev Returns true if auto burn feature is enabled.\n     */\n    function autoBurnEnabled() public view virtual returns (bool) {\n        return _autoBurnEnabled;\n    }\n\n    /**\n     * @dev Returns true if reward feature is enabled.\n     */\n    function rewardEnabled() public view virtual returns (bool) {\n        return _rewardEnabled;\n    }\n\n    /**\n     * @dev Returns true if auto swap and liquify feature is enabled.\n     */\n    function autoSwapAndLiquifyEnabled() public view virtual returns (bool) {\n        return _autoSwapAndLiquifyEnabled;\n    }\n\n    /**\n     * @dev Returns the threshold before swap and liquify.\n     */\n    function minTokensBeforeSwap() external view virtual returns (uint256) {\n        return _minTokensBeforeSwap;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() external view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns current supply of the token. \n     * (currentSupply := totalSupply - totalBurnt)\n     */\n    function currentSupply() external view virtual returns (uint256) {\n        return _currentSupply;\n    }\n\n    /**\n     * @dev Returns the total number of tokens burnt. \n     */\n    function totalBurnt() external view virtual returns (uint256) {\n        return _totalBurnt;\n    }\n\n    /**\n     * @dev Returns the total number of tokens locked in the LP.\n     */\n    function totalTokensLockedInLiquidity() external view virtual returns (uint256) {\n        return _totalTokensLockedInLiquidity;\n    }\n\n    /**\n     * @dev Returns the total number of ETH locked in the LP.\n     */\n    function totalETHLockedInLiquidity() external view virtual returns (uint256) {\n        return _totalETHLockedInLiquidity;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        if (_isExcludedFromReward[account]) return _tokenBalances[account];\n        return tokenFromReflection(_reflectionBalances[account]);\n    }\n\n    /**\n     * @dev Returns whether an account is excluded from reward. \n     */\n    function isExcludedFromReward(address account) external view returns (bool) {\n        return _isExcludedFromReward[account];\n    }\n\n    /**\n     * @dev Returns whether an account is excluded from fee. \n     */\n    function isExcludedFromFee(address account) external view returns (bool) {\n        return _isExcludedFromFee[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        require(_allowances[sender][_msgSender()] >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        return true;\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Burn} event indicating the amount burnt.\n     * Emits a {Transfer} event with `to` set to the burn address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != burnAccount, \"ERC20: burn from the burn address\");\n\n        uint256 accountBalance = balanceOf(account);\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n\n        uint256 rAmount = _getRAmount(amount);\n\n        // Transfer from account to the burnAccount\n        if (_isExcludedFromReward[account]) {\n            _tokenBalances[account] -= amount;\n        } \n        _reflectionBalances[account] -= rAmount;\n\n        _tokenBalances[burnAccount] += amount;\n        _reflectionBalances[burnAccount] += rAmount;\n\n        _currentSupply -= amount;\n\n        _totalBurnt += amount;\n\n        emit Burn(account, amount);\n        emit Transfer(account, burnAccount, amount);\n    }\n    \n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        ValuesFromAmount memory values = _getValues(amount, _isExcludedFromFee[sender]);        \n        if (_isExcludedFromReward[sender] && !_isExcludedFromReward[recipient]) {\n            _transferFromExcluded(sender, recipient, values);\n        } else if (!_isExcludedFromReward[sender] && _isExcludedFromReward[recipient]) {\n            _transferToExcluded(sender, recipient, values);\n        } else if (!_isExcludedFromReward[sender] && !_isExcludedFromReward[recipient]) {\n            _transferStandard(sender, recipient, values);\n        } else if (_isExcludedFromReward[sender] && _isExcludedFromReward[recipient]) {\n            _transferBothExcluded(sender, recipient, values);\n        } else {\n            _transferStandard(sender, recipient, values);\n        }\n        emit Transfer(sender, recipient, values.tTransferAmount);\n\n        if (!_isExcludedFromFee[sender]) {\n            _afterTokenTransfer(values);\n        }\n\n    }\n\n    /**\n      * @dev Performs all the functionalities that are enabled.\n      */\n    function _afterTokenTransfer(ValuesFromAmount memory values) internal virtual {\n        // Burn\n        if (_autoBurnEnabled) {\n            _tokenBalances[address(this)] += values.tBurnFee;\n            _reflectionBalances[address(this)] += values.rBurnFee;\n            _approve(address(this), _msgSender(), values.tBurnFee);\n            burnFrom(address(this), values.tBurnFee);\n        }   \n        \n        \n        // Reflect\n        if (_rewardEnabled) {\n            _distributeFee(values.rRewardFee, values.tRewardFee);\n        }\n        \n\n        \n        \n    }\n\n    /**\n     * @dev Performs transfer between two accounts that are both included in receiving reward.\n     */\n    function _transferStandard(address sender, address recipient, ValuesFromAmount memory values) private {\n        \n    \n        _reflectionBalances[sender] = _reflectionBalances[sender] - values.rAmount;\n        _reflectionBalances[recipient] = _reflectionBalances[recipient] + values.rTransferAmount;   \n\n        \n    }\n\n    /**\n     * @dev Performs transfer from an included account to an excluded account.\n     * (included and excluded from receiving reward.)\n     */\n    function _transferToExcluded(address sender, address recipient, ValuesFromAmount memory values) private {\n        \n        _reflectionBalances[sender] = _reflectionBalances[sender] - values.rAmount;\n        _tokenBalances[recipient] = _tokenBalances[recipient] + values.tTransferAmount;\n        _reflectionBalances[recipient] = _reflectionBalances[recipient] + values.rTransferAmount;    \n\n    }\n\n    /**\n     * @dev Performs transfer from an excluded account to an included account.\n     * (included and excluded from receiving reward.)\n     */\n    function _transferFromExcluded(address sender, address recipient, ValuesFromAmount memory values) private {\n        \n        _tokenBalances[sender] = _tokenBalances[sender] - values.amount;\n        _reflectionBalances[sender] = _reflectionBalances[sender] - values.rAmount;\n        _reflectionBalances[recipient] = _reflectionBalances[recipient] + values.rTransferAmount;   \n\n    }\n\n    /**\n     * @dev Performs transfer between two accounts that are both excluded in receiving reward.\n     */\n    function _transferBothExcluded(address sender, address recipient, ValuesFromAmount memory values) private {\n\n        _tokenBalances[sender] = _tokenBalances[sender] - values.amount;\n        _reflectionBalances[sender] = _reflectionBalances[sender] - values.rAmount;\n        _tokenBalances[recipient] = _tokenBalances[recipient] + values.tTransferAmount;\n        _reflectionBalances[recipient] = _reflectionBalances[recipient] + values.rTransferAmount;        \n\n    }\n    \n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 currentAllowance = allowance(account, _msgSender());\n        require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\");\n        _approve(account, _msgSender(), currentAllowance - amount);\n        _burn(account, amount);\n    }\n\n    /**\n      * @dev Excludes an account from receiving reward.\n      *\n      * Emits a {ExcludeAccountFromReward} event.\n      *\n      * Requirements:\n      *\n      * - `account` is included in receiving reward.\n      */\n    function _excludeAccountFromReward(address account) internal {\n        require(!_isExcludedFromReward[account], \"Account is already excluded.\");\n\n        if(_reflectionBalances[account] > 0) {\n            _tokenBalances[account] = tokenFromReflection(_reflectionBalances[account]);\n        }\n        _isExcludedFromReward[account] = true;\n        _excludedFromReward.push(account);\n        \n        emit ExcludeAccountFromReward(account);\n    }\n\n    /**\n      * @dev Includes an account from receiving reward.\n      *\n      * Emits a {IncludeAccountInReward} event.\n      *\n      * Requirements:\n      *\n      * - `account` is excluded in receiving reward.\n      */\n    function _includeAccountInReward(address account) internal {\n        require(_isExcludedFromReward[account], \"Account is already included.\");\n\n        for (uint256 i = 0; i < _excludedFromReward.length; i++) {\n            if (_excludedFromReward[i] == account) {\n                _excludedFromReward[i] = _excludedFromReward[_excludedFromReward.length - 1];\n                _tokenBalances[account] = 0;\n                _isExcludedFromReward[account] = false;\n                _excludedFromReward.pop();\n                break;\n            }\n        }\n\n        emit IncludeAccountInReward(account);\n    }\n\n     /**\n      * @dev Excludes an account from fee.\n      *\n      * Emits a {ExcludeAccountFromFee} event.\n      *\n      * Requirements:\n      *\n      * - `account` is included in fee.\n      */\n    function excludeAccountFromFee(address account) internal {\n        require(!_isExcludedFromFee[account], \"Account is already excluded.\");\n\n        _isExcludedFromFee[account] = true;\n\n        emit ExcludeAccountFromFee(account);\n    }\n\n    /**\n      * @dev Includes an account from fee.\n      *\n      * Emits a {IncludeAccountFromFee} event.\n      *\n      * Requirements:\n      *\n      * - `account` is excluded in fee.\n      */\n    function includeAccountInFee(address account) internal {\n        require(_isExcludedFromFee[account], \"Account is already included.\");\n\n        _isExcludedFromFee[account] = false;\n        \n        emit IncludeAccountInFee(account);\n    }\n\n    /**\n     * @dev Airdrop tokens to all holders that are included from reward. \n     *  Requirements:\n     * - the caller must have a balance of at least `amount`.\n     */\n    function airdrop(uint256 amount) public {\n        address sender = _msgSender();\n        //require(!_isExcludedFromReward[sender], \"Excluded addresses cannot call this function\");\n        require(balanceOf(sender) >= amount, \"The caller must have balance >= amount.\");\n        ValuesFromAmount memory values = _getValues(amount, false);\n        if (_isExcludedFromReward[sender]) {\n            _tokenBalances[sender] -= values.amount;\n        }\n        _reflectionBalances[sender] -= values.rAmount;\n        \n        _reflectionTotal = _reflectionTotal - values.rAmount;\n        _totalRewarded += amount ;\n        emit Airdrop(amount);\n    }\n\n    /**\n     * @dev Returns the reflected amount of a token.\n     *  Requirements:\n     * - `amount` must be less than total supply.\n     */\n    function reflectionFromToken(uint256 amount, bool deductTransferFee) internal view returns(uint256) {\n        require(amount <= _totalSupply, \"Amount must be less than supply\");\n        ValuesFromAmount memory values = _getValues(amount, deductTransferFee);\n        return values.rTransferAmount;\n    }\n\n    /**\n     * @dev Used to figure out the balance after reflection.\n     * Requirements:\n     * - `rAmount` must be less than reflectTotal.\n     */\n    function tokenFromReflection(uint256 rAmount) internal view returns(uint256) {\n        require(rAmount <= _reflectionTotal, \"Amount must be less than total reflections\");\n        uint256 currentRate =  _getRate();\n        return rAmount / currentRate;\n    }\n\n    /**\n     * @dev Swap half of contract's token balance for ETH,\n     * and pair it up with the other half to add to the\n     * liquidity pool.\n     *\n     * Emits {SwapAndLiquify} event indicating the amount of tokens swapped to eth,\n     * the amount of ETH added to the LP, and the amount of tokens added to the LP.\n     */\n    function swapAndLiquify(uint256 contractBalance) private lockTheSwap {\n        // Split the contract balance into two halves.\n        uint256 tokensToSwap = contractBalance / 2;\n        uint256 tokensAddToLiquidity = contractBalance - tokensToSwap;\n\n        // Contract's current ETH balance.\n        uint256 initialBalance = address(this).balance;\n\n        // Swap half of the tokens to ETH.\n        swapTokensForEth(tokensToSwap);\n\n        // Figure out the exact amount of tokens received from swapping.\n        uint256 ethAddToLiquify = address(this).balance - initialBalance;\n\n        // Add to the LP of this token and WETH pair (half ETH and half this token).\n        addLiquidity(ethAddToLiquify, tokensAddToLiquidity);\n\n        _totalETHLockedInLiquidity += address(this).balance - initialBalance;\n        _totalTokensLockedInLiquidity += contractBalance - balanceOf(address(this));\n\n        emit SwapAndLiquify(tokensToSwap, ethAddToLiquify, tokensAddToLiquidity);\n    }\n\n\n    /**\n     * @dev Swap `amount` tokens for ETH.\n     *\n     * Emits {Transfer} event. From this contract to the token and WETH Pair.\n     */\n    function swapTokensForEth(uint256 amount) private {\n        // Generate the uniswap pair path of token -> weth\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = _uniswapV2Router.WETH();\n\n        _approve(address(this), address(_uniswapV2Router), amount);\n\n\n        // Swap tokens to ETH\n        _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            amount, \n            0, \n            path, \n            address(this),  // this contract will receive the eth that were swapped from the token\n            block.timestamp + 60 * 1000\n            );\n    }\n    \n    /**\n     * @dev Add `ethAmount` of ETH and `tokenAmount` of tokens to the LP.\n     * Depends on the current rate for the pair between this token and WETH,\n     * `ethAmount` and `tokenAmount` might not match perfectly. \n     * Dust(leftover) ETH or token will be refunded to this contract\n     * (usually very small quantity).\n     *\n     * Emits {Transfer} event. From this contract to the token and WETH Pai.\n     */\n    function addLiquidity(uint256 ethAmount, uint256 tokenAmount) private {\n        _approve(address(this), address(_uniswapV2Router), tokenAmount);\n\n        // Add the ETH and token to LP.\n        // The LP tokens will be sent to burnAccount.\n        // No one will have access to them, so the liquidity will be locked forever.\n        _uniswapV2Router.addLiquidityETH{value: ethAmount}(\n            address(this), \n            tokenAmount, \n            0, // slippage is unavoidable\n            0, // slippage is unavoidable\n            burnAccount, // the LP is sent to burnAccount. \n            block.timestamp + 60 * 1000\n        );\n    }\n\n    /**\n     * @dev Distribute the `tRewardFee` tokens to all holders that are included in receiving reward.\n     * amount received is based on how many token one owns.  \n     */\n    function _distributeFee(uint256 rRewardFee, uint256 tRewardFee) private {\n        // This would decrease rate, thus increase amount reward receive based on one's balance.\n        _reflectionTotal = _reflectionTotal - rRewardFee;\n        _totalRewarded += tRewardFee;\n    }\n    \n    /**\n     * @dev Returns fees and transfer amount in both tokens and reflections.\n     * tXXXX stands for tokenXXXX\n     * rXXXX stands for reflectionXXXX\n     * More details can be found at comments for ValuesForAmount Struct.\n     */\n    function _getValues(uint256 amount, bool deductTransferFee) private view returns (ValuesFromAmount memory) {\n        ValuesFromAmount memory values;\n        values.amount = amount;\n        _getTValues(values, deductTransferFee);\n        _getRValues(values, deductTransferFee);\n        return values;\n    }\n\n    /**\n     * @dev Adds fees and transfer amount in tokens to `values`.\n     * tXXXX stands for tokenXXXX\n     * More details can be found at comments for ValuesForAmount Struct.\n     */\n    function _getTValues(ValuesFromAmount memory values, bool deductTransferFee) view private {\n        \n        if (deductTransferFee) {\n            values.tTransferAmount = values.amount;\n        } else {\n            // calculate fee\n            values.tBurnFee = _calculateTax(values.amount, _taxBurn, _taxBurnDecimals);\n            values.tRewardFee = _calculateTax(values.amount, _taxReward, _taxRewardDecimals);\n            values.tLiquifyFee = _calculateTax(values.amount, _taxLiquify, _taxLiquifyDecimals);\n            \n            // amount after fee\n            values.tTransferAmount = values.amount - values.tBurnFee - values.tRewardFee - values.tLiquifyFee;\n        }\n        \n    }\n\n    /**\n     * @dev Adds fees and transfer amount in reflection to `values`.\n     * rXXXX stands for reflectionXXXX\n     * More details can be found at comments for ValuesForAmount Struct.\n     */\n    function _getRValues(ValuesFromAmount memory values, bool deductTransferFee) view private {\n        uint256 currentRate = _getRate();\n\n        values.rAmount = values.amount * currentRate;\n\n        if (deductTransferFee) {\n            values.rTransferAmount = values.rAmount;\n        } else {\n            values.rAmount = values.amount * currentRate;\n            values.rBurnFee = values.tBurnFee * currentRate;\n            values.rRewardFee = values.tRewardFee * currentRate;\n            values.rLiquifyFee = values.tLiquifyFee * currentRate;\n            values.rTransferAmount = values.rAmount - values.rBurnFee - values.rRewardFee - values.rLiquifyFee;\n        }\n        \n    }\n\n    /**\n     * @dev Returns `amount` in reflection.\n     */\n    function _getRAmount(uint256 amount) private view returns (uint256) {\n        uint256 currentRate = _getRate();\n        return amount * currentRate;\n    }\n\n    /**\n     * @dev Returns the current reflection rate.\n     */\n    function _getRate() private view returns(uint256) {\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\n        return rSupply / tSupply;\n    }\n\n    /**\n     * @dev Returns the current reflection supply and token supply.\n     */\n    function _getCurrentSupply() private view returns(uint256, uint256) {\n        uint256 rSupply = _reflectionTotal;\n        uint256 tSupply = _totalSupply;      \n        for (uint256 i = 0; i < _excludedFromReward.length; i++) {\n            if (_reflectionBalances[_excludedFromReward[i]] > rSupply || _tokenBalances[_excludedFromReward[i]] > tSupply) return (_reflectionTotal, _totalSupply);\n            rSupply = rSupply - _reflectionBalances[_excludedFromReward[i]];\n            tSupply = tSupply - _tokenBalances[_excludedFromReward[i]];\n        }\n        if (rSupply < _reflectionTotal / _totalSupply) return (_reflectionTotal, _totalSupply);\n        return (rSupply, tSupply);\n    }\n\n    /**\n     * @dev Returns fee based on `amount` and `taxRate`\n     */\n    function _calculateTax(uint256 amount, uint8 tax, uint8 taxDecimals_) private pure returns (uint256) {\n        return amount * tax / (10 ** taxDecimals_) / (10 ** 2);\n    }\n\n    /*\n        Owner functions\n    */\n\n    /**\n     * @dev Enables the auto burn feature.\n     * Burn transaction amount * `taxBurn_` amount of tokens each transaction when enabled.\n     *\n     * Emits a {EnabledAutoBurn} event.\n     *\n     * Requirements:\n     *\n     * - auto burn feature mush be disabled.\n     * - tax must be greater than 0.\n     * - tax decimals + 2 must be less than token decimals. \n     * (because tax rate is in percentage)\n     */\n    function enableAutoBurn(uint8 taxBurn_, uint8 taxBurnDecimals_) public onlyOwner {\n        require(!_autoBurnEnabled, \"Auto burn feature is already enabled.\");\n        require(taxBurn_ > 0, \"Tax must be greater than 0.\");\n        require(taxBurnDecimals_ + 2  <= decimals(), \"Tax decimals must be less than token decimals - 2\");\n        \n        _autoBurnEnabled = true;\n        setTaxBurn(taxBurn_, taxBurnDecimals_);\n        \n        emit EnabledAutoBurn();\n    }\n\n    /**\n     * @dev Enables the reward feature.\n     * Distribute transaction amount * `taxReward_` amount of tokens each transaction when enabled.\n     *\n     * Emits a {EnabledReward} event.\n     *\n     * Requirements:\n     *\n     * - reward feature mush be disabled.\n     * - tax must be greater than 0.\n     * - tax decimals + 2 must be less than token decimals. \n     * (because tax rate is in percentage)\n    */\n    function enableReward(uint8 taxReward_, uint8 taxRewardDecimals_) public onlyOwner {\n        require(!_rewardEnabled, \"Reward feature is already enabled.\");\n        require(taxReward_ > 0, \"Tax must be greater than 0.\");\n        require(taxRewardDecimals_ + 2  <= decimals(), \"Tax decimals must be less than token decimals - 2\");\n\n        _rewardEnabled = true;\n        setTaxReward(taxReward_, taxRewardDecimals_);\n\n        emit EnabledReward();\n    }\n\n    /**\n      * @dev Enables the auto swap and liquify feature.\n      * Swaps half of transaction amount * `taxLiquify_` amount of tokens \n      * to ETH and pair with the other half of tokens to the LP each transaction when enabled.\n      *\n      * Emits a {EnabledAutoSwapAndLiquify} event.\n      *\n      * Requirements:\n      *\n      * - auto swap and liquify feature mush be disabled.\n      * - tax must be greater than 0.\n      * - tax decimals + 2 must be less than token decimals. \n      * (because tax rate is in percentage)\n      */\n    function enableAutoSwapAndLiquify(uint8 taxLiquify_, uint8 taxLiquifyDecimals_,uint256 minTokensBeforeSwap_) public onlyOwner {\n        require(!_autoSwapAndLiquifyEnabled, \"Auto swap and liquify feature is already enabled.\");\n        require(taxLiquify_ > 0, \"Tax must be greater than 0.\");\n        require(taxLiquifyDecimals_ + 2  <= decimals(), \"Tax decimals must be less than token decimals - 2\");\n\n        _minTokensBeforeSwap = minTokensBeforeSwap_;\n\n\n        // enable\n        _autoSwapAndLiquifyEnabled = true;\n        setTaxLiquify(taxLiquify_, taxLiquifyDecimals_);\n        \n        emit EnabledAutoSwapAndLiquify();\n    }\n\n    /**\n     * @dev Disables the auto burn feature.\n     *\n     * Emits a {DisabledAutoBurn} event.\n     *\n     * Requirements:\n     *\n     * - auto burn feature mush be enabled.\n     */\n    function disableAutoBurn() public onlyOwner {\n        require(_autoBurnEnabled, \"Auto burn feature is already disabled.\");\n\n        setTaxBurn(0, 0);\n        _autoBurnEnabled = false;\n        \n        emit DisabledAutoBurn();\n    }\n\n    /**\n      * @dev Disables the reward feature.\n      *\n      * Emits a {DisabledReward} event.\n      *\n      * Requirements:\n      *\n      * - reward feature mush be enabled.\n      */\n    function disableReward() public onlyOwner {\n        require(_rewardEnabled, \"Reward feature is already disabled.\");\n\n        setTaxReward(0, 0);\n        _rewardEnabled = false;\n        \n        emit DisabledReward();\n    }\n\n    /**\n      * @dev Disables the auto swap and liquify feature.\n      *\n      * Emits a {DisabledAutoSwapAndLiquify} event.\n      *\n      * Requirements:\n      *\n      * - auto swap and liquify feature mush be enabled.\n      */\n    function disableAutoSwapAndLiquify() public onlyOwner {\n        require(_autoSwapAndLiquifyEnabled, \"Auto swap and liquify feature is already disabled.\");\n\n        setTaxLiquify(0, 0);\n        _autoSwapAndLiquifyEnabled = false;\n         \n        emit DisabledAutoSwapAndLiquify();\n    }\n\n     /**\n      * @dev Updates `_minTokensBeforeSwap`\n      *\n      * Emits a {MinTokensBeforeSwap} event.\n      *\n      * Requirements:\n      *\n      * - `minTokensBeforeSwap_` must be less than _currentSupply.\n      */\n    function setMinTokensBeforeSwap(uint256 minTokensBeforeSwap_) public onlyOwner {\n        require(minTokensBeforeSwap_ < _currentSupply, \"minTokensBeforeSwap must be higher than current supply.\");\n\n        uint256 previous = _minTokensBeforeSwap;\n        _minTokensBeforeSwap = minTokensBeforeSwap_;\n\n        emit MinTokensBeforeSwapUpdated(previous, _minTokensBeforeSwap);\n    }\n\n    /**\n      * @dev Updates taxBurn\n      *\n      * Emits a {TaxBurnUpdate} event.\n      *\n      * Requirements:\n      *\n      * - auto burn feature must be enabled.\n      * - total tax rate must be less than 100%.\n      */\n    function setTaxBurn(uint8 taxBurn_, uint8 taxBurnDecimals_) public onlyOwner {\n        require(_autoBurnEnabled, \"Auto burn feature must be enabled. Try the EnableAutoBurn function.\");\n        require(taxBurn_ + _taxReward + _taxLiquify < 100, \"Tax fee too high.\");\n\n        uint8 previousTax = _taxBurn;\n        uint8 previousDecimals = _taxBurnDecimals;\n        _taxBurn = taxBurn_;\n        _taxBurnDecimals = taxBurnDecimals_;\n\n        emit TaxBurnUpdate(previousTax, previousDecimals, taxBurn_, taxBurnDecimals_);\n    }\n\n    /**\n      * @dev Updates taxReward\n      *\n      * Emits a {TaxRewardUpdate} event.\n      *\n      * Requirements:\n      *\n      * - reward feature must be enabled.\n      * - total tax rate must be less than 100%.\n      */\n    function setTaxReward(uint8 taxReward_, uint8 taxRewardDecimals_) public onlyOwner {\n        require(_rewardEnabled, \"Reward feature must be enabled. Try the EnableReward function.\");\n        require(_taxBurn + taxReward_ + _taxLiquify < 100, \"Tax fee too high.\");\n\n        uint8 previousTax = _taxReward;\n        uint8 previousDecimals = _taxRewardDecimals;\n        _taxReward = taxReward_;\n        _taxBurnDecimals = taxRewardDecimals_;\n\n        emit TaxRewardUpdate(previousTax, previousDecimals, taxReward_, taxRewardDecimals_);\n    }\n\n    /**\n      * @dev Updates taxLiquify\n      *\n      * Emits a {TaxLiquifyUpdate} event.\n      *\n      * Requirements:\n      *\n      * - auto swap and liquify feature must be enabled.\n      * - total tax rate must be less than 100%.\n      */\n    function setTaxLiquify(uint8 taxLiquify_, uint8 taxLiquifyDecimals_) public onlyOwner {\n        require(_autoSwapAndLiquifyEnabled, \"Auto swap and liquify feature must be enabled. Try the EnableAutoSwapAndLiquify function.\");\n        require(_taxBurn + _taxReward + taxLiquify_ < 100, \"Tax fee too high.\");\n\n        uint8 previousTax = _taxLiquify;\n        uint8 previousDecimals = _taxLiquifyDecimals;\n        _taxLiquify = taxLiquify_;\n        _taxLiquifyDecimals = taxLiquifyDecimals_;\n\n        emit TaxLiquifyUpdate(previousTax, previousDecimals, taxLiquify_, taxLiquifyDecimals_);\n    }\n\n}\n",
  "sourcePath": "C:\\Users\\omrel\\Desktop\\ERC20Deflationary-master\\contracts\\ERC20Deflationary.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC20Deflationary.sol",
    "exportedSymbols": {
      "Context": [
        210
      ],
      "ERC20Deflationary": [
        3356
      ],
      "IERC20": [
        187
      ],
      "IUniswapV2Factory": [
        273
      ],
      "IUniswapV2Pair": [
        515
      ],
      "IUniswapV2Router01": [
        823
      ],
      "IUniswapV2Router02": [
        911
      ],
      "Ownable": [
        109
      ]
    },
    "id": 3357,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 913,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 914,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 211,
        "src": "58:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 915,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 110,
        "src": "110:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 916,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 188,
        "src": "163:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "id": 917,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 274,
        "src": "267:69:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
        "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
        "id": 918,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 516,
        "src": "337:66:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
        "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
        "id": 919,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 824,
        "src": "404:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
        "file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
        "id": 920,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 912,
        "src": "480:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 921,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 210,
              "src": "699:7:7"
            },
            "id": 922,
            "nodeType": "InheritanceSpecifier",
            "src": "699:7:7"
          },
          {
            "baseName": {
              "id": 923,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 187,
              "src": "708:6:7"
            },
            "id": 924,
            "nodeType": "InheritanceSpecifier",
            "src": "708:6:7"
          },
          {
            "baseName": {
              "id": 925,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "716:7:7"
            },
            "id": 926,
            "nodeType": "InheritanceSpecifier",
            "src": "716:7:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3356,
        "linearizedBaseContracts": [
          3356,
          109,
          187,
          210
        ],
        "name": "ERC20Deflationary",
        "nameLocation": "678:17:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 930,
            "mutability": "mutable",
            "name": "_reflectionBalances",
            "nameLocation": "850:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "813:56:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 929,
              "keyType": {
                "id": 927,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "822:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "813:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 928,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "833:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 934,
            "mutability": "mutable",
            "name": "_tokenBalances",
            "nameLocation": "997:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "960:51:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 933,
              "keyType": {
                "id": 931,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "969:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "960:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 932,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "980:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 938,
            "mutability": "mutable",
            "name": "_isExcludedFromFee",
            "nameLocation": "1111:18:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "1077:52:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 937,
              "keyType": {
                "id": 935,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1086:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1077:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 936,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1097:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 942,
            "mutability": "mutable",
            "name": "_isExcludedFromReward",
            "nameLocation": "1232:21:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "1198:55:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 941,
              "keyType": {
                "id": 939,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1198:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 940,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1218:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 945,
            "mutability": "mutable",
            "name": "_excludedFromReward",
            "nameLocation": "1342:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "1324:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 943,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1324:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 944,
              "nodeType": "ArrayTypeName",
              "src": "1324:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 951,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1454:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "1396:69:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 950,
              "keyType": {
                "id": 946,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1405:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1396:49:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 949,
                "keyType": {
                  "id": 947,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1425:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1416:28:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 948,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1436:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 954,
            "mutability": "mutable",
            "name": "_uniswapV2Router",
            "nameLocation": "1538:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "1510:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 953,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 952,
                "name": "IUniswapV2Router02",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 911,
                "src": "1510:18:7"
              },
              "referencedDeclaration": 911,
              "src": "1510:18:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 956,
            "mutability": "mutable",
            "name": "_uniswapV2Pair",
            "nameLocation": "1628:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "1611:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 955,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1611:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 959,
            "mutability": "constant",
            "name": "burnAccount",
            "nameLocation": "1766:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "1741:81:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 957,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1741:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846336433383341414538334338306343634665463834654537653836344531433234393038396666",
              "id": 958,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1780:42:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xF3d383AAE83C80cCcFeF84eE7e864E1C249089ff"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 961,
            "mutability": "mutable",
            "name": "_taxBurnDecimals",
            "nameLocation": "2213:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2199:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 960,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2199:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 963,
            "mutability": "mutable",
            "name": "_taxRewardDecimals",
            "nameLocation": "2312:18:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2298:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 962,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2298:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 965,
            "mutability": "mutable",
            "name": "_taxLiquifyDecimals",
            "nameLocation": "2414:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2400:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 964,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2400:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 967,
            "mutability": "mutable",
            "name": "_taxBurn",
            "nameLocation": "2506:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2492:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 966,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2492:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 969,
            "mutability": "mutable",
            "name": "_taxReward",
            "nameLocation": "2609:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2595:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 968,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2595:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 971,
            "mutability": "mutable",
            "name": "_taxLiquify",
            "nameLocation": "2779:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2765:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 970,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2765:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 973,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "2840:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2826:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 972,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2826:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 975,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "2901:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2884:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 974,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2884:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 977,
            "mutability": "mutable",
            "name": "_currentSupply",
            "nameLocation": "2988:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "2972:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 976,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2972:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 979,
            "mutability": "mutable",
            "name": "_reflectionTotal",
            "nameLocation": "3099:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3083:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 978,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3083:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 981,
            "mutability": "mutable",
            "name": "_totalRewarded",
            "nameLocation": "3194:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3178:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 980,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3178:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 983,
            "mutability": "mutable",
            "name": "_totalBurnt",
            "nameLocation": "3268:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3252:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 982,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3252:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 985,
            "mutability": "mutable",
            "name": "_totalTokensLockedInLiquidity",
            "nameLocation": "3377:29:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3361:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 984,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3361:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 987,
            "mutability": "mutable",
            "name": "_totalETHLockedInLiquidity",
            "nameLocation": "3501:26:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3485:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 986,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3485:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 989,
            "mutability": "mutable",
            "name": "_minTokensBeforeSwap",
            "nameLocation": "3591:20:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3575:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 988,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3575:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 991,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "3661:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3646:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 990,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3646:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 993,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "3715:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3700:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 992,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3700:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 995,
            "mutability": "mutable",
            "name": "_inSwapAndLiquify",
            "nameLocation": "3820:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3807:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 994,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3807:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 997,
            "mutability": "mutable",
            "name": "_autoSwapAndLiquifyEnabled",
            "nameLocation": "3857:26:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3844:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 996,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3844:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 999,
            "mutability": "mutable",
            "name": "_autoBurnEnabled",
            "nameLocation": "3902:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3889:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 998,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3889:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1001,
            "mutability": "mutable",
            "name": "_rewardEnabled",
            "nameLocation": "3937:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 3356,
            "src": "3924:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1000,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3924:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1018,
              "nodeType": "Block",
              "src": "4010:158:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4028:18:7",
                        "subExpression": {
                          "id": 1004,
                          "name": "_inSwapAndLiquify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "4029:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e746c7920696e207377617020616e64206c6971756966792e",
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4048:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80a780e7aa3d8c43104f4674b56fee5237a28831f278c95cf82b4d5253dc7425",
                          "typeString": "literal_string \"Currently in swap and liquify.\""
                        },
                        "value": "Currently in swap and liquify."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80a780e7aa3d8c43104f4674b56fee5237a28831f278c95cf82b4d5253dc7425",
                          "typeString": "literal_string \"Currently in swap and liquify.\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4020:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4020:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:61:7"
                },
                {
                  "expression": {
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1009,
                      "name": "_inSwapAndLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "4091:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4111:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4091:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1012,
                  "nodeType": "ExpressionStatement",
                  "src": "4091:24:7"
                },
                {
                  "id": 1013,
                  "nodeType": "PlaceholderStatement",
                  "src": "4125:1:7"
                },
                {
                  "expression": {
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1014,
                      "name": "_inSwapAndLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "4136:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4156:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4136:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "4136:25:7"
                }
              ]
            },
            "id": 1019,
            "name": "lockTheSwap",
            "nameLocation": "3998:11:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4010:0:7"
            },
            "src": "3989:179:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "ERC20Deflationary.ValuesFromAmount",
            "id": 1040,
            "members": [
              {
                "constant": false,
                "id": 1021,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4306:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4298:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1020,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4298:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1023,
                "mutability": "mutable",
                "name": "tBurnFee",
                "nameLocation": "4376:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4368:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1022,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4368:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1025,
                "mutability": "mutable",
                "name": "tRewardFee",
                "nameLocation": "4446:10:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4438:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1024,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4438:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1027,
                "mutability": "mutable",
                "name": "tLiquifyFee",
                "nameLocation": "4528:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4520:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1026,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4520:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1029,
                "mutability": "mutable",
                "name": "tTransferAmount",
                "nameLocation": "4594:15:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4586:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1028,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4586:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1031,
                "mutability": "mutable",
                "name": "rAmount",
                "nameLocation": "4660:7:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4652:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1030,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4652:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1033,
                "mutability": "mutable",
                "name": "rBurnFee",
                "nameLocation": "4720:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4712:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1032,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4712:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1035,
                "mutability": "mutable",
                "name": "rRewardFee",
                "nameLocation": "4783:10:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4775:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1034,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4775:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1037,
                "mutability": "mutable",
                "name": "rLiquifyFee",
                "nameLocation": "4849:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4841:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1036,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4841:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1039,
                "mutability": "mutable",
                "name": "rTransferAmount",
                "nameLocation": "4920:15:7",
                "nodeType": "VariableDeclaration",
                "scope": 1040,
                "src": "4912:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1038,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4912:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ValuesFromAmount",
            "nameLocation": "4226:16:7",
            "nodeType": "StructDefinition",
            "scope": 3356,
            "src": "4219:723:7",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1046,
            "name": "Burn",
            "nameLocation": "4983:4:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4996:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "4988:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4988:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5010:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "5002:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5002:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4987:30:7"
            },
            "src": "4977:41:7"
          },
          {
            "anonymous": false,
            "id": 1056,
            "name": "TaxBurnUpdate",
            "nameLocation": "5029:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousTax",
                  "nameLocation": "5049:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1056,
                  "src": "5043:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5043:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1050,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousDecimals",
                  "nameLocation": "5068:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1056,
                  "src": "5062:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1052,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentTax",
                  "nameLocation": "5092:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1056,
                  "src": "5086:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5086:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1054,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentDecimal",
                  "nameLocation": "5110:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1056,
                  "src": "5104:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1053,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5104:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5042:83:7"
            },
            "src": "5023:103:7"
          },
          {
            "anonymous": false,
            "id": 1066,
            "name": "TaxRewardUpdate",
            "nameLocation": "5137:15:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1058,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousTax",
                  "nameLocation": "5159:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "5153:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5153:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousDecimals",
                  "nameLocation": "5178:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "5172:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1059,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentTax",
                  "nameLocation": "5202:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "5196:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5196:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentDecimal",
                  "nameLocation": "5220:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "5214:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5214:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5152:83:7"
            },
            "src": "5131:105:7"
          },
          {
            "anonymous": false,
            "id": 1076,
            "name": "TaxLiquifyUpdate",
            "nameLocation": "5247:16:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousTax",
                  "nameLocation": "5270:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "5264:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousDecimals",
                  "nameLocation": "5289:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "5283:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5283:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentTax",
                  "nameLocation": "5313:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "5307:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currentDecimal",
                  "nameLocation": "5331:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1076,
                  "src": "5325:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5325:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5263:83:7"
            },
            "src": "5241:106:7"
          },
          {
            "anonymous": false,
            "id": 1082,
            "name": "MinTokensBeforeSwapUpdated",
            "nameLocation": "5358:26:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previous",
                  "nameLocation": "5393:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "5385:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5385:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "current",
                  "nameLocation": "5411:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1082,
                  "src": "5403:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5384:35:7"
            },
            "src": "5352:68:7"
          },
          {
            "anonymous": false,
            "id": 1090,
            "name": "SwapAndLiquify",
            "nameLocation": "5431:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensSwapped",
                  "nameLocation": "5463:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "5455:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5455:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1086,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ethReceived",
                  "nameLocation": "5494:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "5486:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5486:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1088,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensAddedToLiquidity",
                  "nameLocation": "5523:22:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "5515:30:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5515:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5445:106:7"
            },
            "src": "5425:127:7"
          },
          {
            "anonymous": false,
            "id": 1094,
            "name": "ExcludeAccountFromReward",
            "nameLocation": "5563:24:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1092,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5596:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "5588:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5588:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5587:17:7"
            },
            "src": "5557:48:7"
          },
          {
            "anonymous": false,
            "id": 1098,
            "name": "IncludeAccountInReward",
            "nameLocation": "5616:22:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5647:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "5639:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5639:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5638:17:7"
            },
            "src": "5610:46:7"
          },
          {
            "anonymous": false,
            "id": 1102,
            "name": "ExcludeAccountFromFee",
            "nameLocation": "5667:21:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5697:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1102,
                  "src": "5689:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5689:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5688:17:7"
            },
            "src": "5661:45:7"
          },
          {
            "anonymous": false,
            "id": 1106,
            "name": "IncludeAccountInFee",
            "nameLocation": "5717:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5745:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "5737:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5737:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5736:17:7"
            },
            "src": "5711:43:7"
          },
          {
            "anonymous": false,
            "id": 1108,
            "name": "EnabledAutoBurn",
            "nameLocation": "5765:15:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5780:2:7"
            },
            "src": "5759:24:7"
          },
          {
            "anonymous": false,
            "id": 1110,
            "name": "EnabledReward",
            "nameLocation": "5794:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5807:2:7"
            },
            "src": "5788:22:7"
          },
          {
            "anonymous": false,
            "id": 1112,
            "name": "EnabledAutoSwapAndLiquify",
            "nameLocation": "5821:25:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5846:2:7"
            },
            "src": "5815:34:7"
          },
          {
            "anonymous": false,
            "id": 1114,
            "name": "DisabledAutoBurn",
            "nameLocation": "5860:16:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5876:2:7"
            },
            "src": "5854:25:7"
          },
          {
            "anonymous": false,
            "id": 1116,
            "name": "DisabledReward",
            "nameLocation": "5890:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5904:2:7"
            },
            "src": "5884:23:7"
          },
          {
            "anonymous": false,
            "id": 1118,
            "name": "DisabledAutoSwapAndLiquify",
            "nameLocation": "5918:26:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5944:2:7"
            },
            "src": "5912:35:7"
          },
          {
            "anonymous": false,
            "id": 1122,
            "name": "Airdrop",
            "nameLocation": "5958:7:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5974:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "5966:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5966:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5965:16:7"
            },
            "src": "5952:30:7"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "6088:584:7",
              "statements": [
                {
                  "expression": {
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1133,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 991,
                      "src": "6193:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1134,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "6201:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6193:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "6193:13:7"
                },
                {
                  "expression": {
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1137,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 993,
                      "src": "6216:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1138,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "6226:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6216:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "6216:17:7"
                },
                {
                  "expression": {
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1141,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "6243:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1142,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "6255:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6243:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "6243:21:7"
                },
                {
                  "expression": {
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1145,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "6274:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1146,
                        "name": "tokenSupply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "6289:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6305:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 1148,
                              "name": "decimals_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "6311:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "6305:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1150,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6304:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6289:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6274:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "6274:47:7"
                },
                {
                  "expression": {
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1154,
                      "name": "_currentSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "6331:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1155,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "6348:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6331:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "6331:29:7"
                },
                {
                  "expression": {
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1158,
                      "name": "_reflectionTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "6370:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "~",
                            "prefix": true,
                            "src": "6390:11:7",
                            "subExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6399:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6391:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1159,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6391:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6391:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "~",
                                  "prefix": true,
                                  "src": "6405:11:7",
                                  "subExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1166,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6414:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1165,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6406:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1164,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6406:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6406:10:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "id": 1169,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 975,
                                  "src": "6419:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6405:26:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1171,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6404:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6390:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1173,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6389:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6370:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "6370:63:7"
                },
                {
                  "expression": {
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1176,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "6460:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1179,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1177,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "6480:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6480:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6460:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1180,
                      "name": "_reflectionTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "6496:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6460:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "6460:52:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6634:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6626:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1184,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6626:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6626:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1188,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "6638:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6638:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1190,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "6652:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1183,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "6617:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6617:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "EmitStatement",
                  "src": "6612:53:7"
                }
              ]
            },
            "id": 1194,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "6019:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "6005:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "6040:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "6026:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nameLocation": "6055:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "6049:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6049:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "tokenSupply_",
                  "nameLocation": "6074:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "6066:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6066:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6004:83:7"
            },
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6088:0:7"
            },
            "scope": 3356,
            "src": "5992:680:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1197,
              "nodeType": "Block",
              "src": "6746:2:7",
              "statements": []
            },
            "id": 1198,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6726:2:7"
            },
            "returnParameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6746:0:7"
            },
            "scope": 3356,
            "src": "6719:29:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1206,
              "nodeType": "Block",
              "src": "6873:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 1204,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 991,
                    "src": "6890:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1203,
                  "id": 1205,
                  "nodeType": "Return",
                  "src": "6883:12:7"
                }
              ]
            },
            "documentation": {
              "id": 1199,
              "nodeType": "StructuredDocumentation",
              "src": "6754:54:7",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 1207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "6822:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6826:2:7"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "6858:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6858:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6857:15:7"
            },
            "scope": 3356,
            "src": "6813:89:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1215,
              "nodeType": "Block",
              "src": "7077:31:7",
              "statements": [
                {
                  "expression": {
                    "id": 1213,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 993,
                    "src": "7094:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1212,
                  "id": 1214,
                  "nodeType": "Return",
                  "src": "7087:14:7"
                }
              ]
            },
            "documentation": {
              "id": 1208,
              "nodeType": "StructuredDocumentation",
              "src": "6908:102:7",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 1216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "7024:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7030:2:7"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "7062:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7062:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7061:15:7"
            },
            "scope": 3356,
            "src": "7015:93:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1224,
              "nodeType": "Block",
              "src": "7604:33:7",
              "statements": [
                {
                  "expression": {
                    "id": 1222,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 973,
                    "src": "7621:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1221,
                  "id": 1223,
                  "nodeType": "Return",
                  "src": "7614:16:7"
                }
              ]
            },
            "documentation": {
              "id": 1217,
              "nodeType": "StructuredDocumentation",
              "src": "7114:429:7",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 1225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "7557:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7565:2:7"
            },
            "returnParameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "7597:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7597:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7596:7:7"
            },
            "scope": 3356,
            "src": "7548:89:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1233,
              "nodeType": "Block",
              "src": "7783:38:7",
              "statements": [
                {
                  "expression": {
                    "id": 1231,
                    "name": "_uniswapV2Pair",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 956,
                    "src": "7800:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1230,
                  "id": 1232,
                  "nodeType": "Return",
                  "src": "7793:21:7"
                }
              ]
            },
            "documentation": {
              "id": 1226,
              "nodeType": "StructuredDocumentation",
              "src": "7643:72:7",
              "text": " @dev Returns the address of this token and WETH pair."
            },
            "functionSelector": "49bd5a5e",
            "id": 1234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV2Pair",
            "nameLocation": "7729:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7742:2:7"
            },
            "returnParameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "7774:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7774:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7773:9:7"
            },
            "scope": 3356,
            "src": "7720:101:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1242,
              "nodeType": "Block",
              "src": "7940:32:7",
              "statements": [
                {
                  "expression": {
                    "id": 1240,
                    "name": "_taxBurn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "7957:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1239,
                  "id": 1241,
                  "nodeType": "Return",
                  "src": "7950:15:7"
                }
              ]
            },
            "documentation": {
              "id": 1235,
              "nodeType": "StructuredDocumentation",
              "src": "7827:53:7",
              "text": " @dev Returns the current burn tax."
            },
            "functionSelector": "01b71531",
            "id": 1243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taxBurn",
            "nameLocation": "7894:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7901:2:7"
            },
            "returnParameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "7933:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7933:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7932:7:7"
            },
            "scope": 3356,
            "src": "7885:87:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1251,
              "nodeType": "Block",
              "src": "8095:34:7",
              "statements": [
                {
                  "expression": {
                    "id": 1249,
                    "name": "_taxReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 969,
                    "src": "8112:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1248,
                  "id": 1250,
                  "nodeType": "Return",
                  "src": "8105:17:7"
                }
              ]
            },
            "documentation": {
              "id": 1244,
              "nodeType": "StructuredDocumentation",
              "src": "7978:55:7",
              "text": " @dev Returns the current reward tax."
            },
            "functionSelector": "d42ac377",
            "id": 1252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taxReward",
            "nameLocation": "8047:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8056:2:7"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "8088:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8088:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8087:7:7"
            },
            "scope": 3356,
            "src": "8038:91:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1260,
              "nodeType": "Block",
              "src": "8254:35:7",
              "statements": [
                {
                  "expression": {
                    "id": 1258,
                    "name": "_taxLiquify",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 971,
                    "src": "8271:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1257,
                  "id": 1259,
                  "nodeType": "Return",
                  "src": "8264:18:7"
                }
              ]
            },
            "documentation": {
              "id": 1253,
              "nodeType": "StructuredDocumentation",
              "src": "8135:56:7",
              "text": " @dev Returns the current liquify tax."
            },
            "functionSelector": "13facdb7",
            "id": 1261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taxLiquify",
            "nameLocation": "8205:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8215:2:7"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1261,
                  "src": "8247:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8247:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8246:7:7"
            },
            "scope": 3356,
            "src": "8196:93:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1269,
              "nodeType": "Block",
              "src": "8425:40:7",
              "statements": [
                {
                  "expression": {
                    "id": 1267,
                    "name": "_taxBurnDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 961,
                    "src": "8442:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1266,
                  "id": 1268,
                  "nodeType": "Return",
                  "src": "8435:23:7"
                }
              ]
            },
            "documentation": {
              "id": 1262,
              "nodeType": "StructuredDocumentation",
              "src": "8295:62:7",
              "text": " @dev Returns the current burn tax decimals."
            },
            "functionSelector": "fbfa089c",
            "id": 1270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taxBurnDecimals",
            "nameLocation": "8371:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8386:2:7"
            },
            "returnParameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "8418:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8418:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8417:7:7"
            },
            "scope": 3356,
            "src": "8362:103:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "8605:42:7",
              "statements": [
                {
                  "expression": {
                    "id": 1276,
                    "name": "_taxRewardDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 963,
                    "src": "8622:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1275,
                  "id": 1277,
                  "nodeType": "Return",
                  "src": "8615:25:7"
                }
              ]
            },
            "documentation": {
              "id": 1271,
              "nodeType": "StructuredDocumentation",
              "src": "8471:64:7",
              "text": " @dev Returns the current reward tax decimals."
            },
            "functionSelector": "ad8e91dd",
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taxRewardDecimals",
            "nameLocation": "8549:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8566:2:7"
            },
            "returnParameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "8598:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8598:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8597:7:7"
            },
            "scope": 3356,
            "src": "8540:107:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1287,
              "nodeType": "Block",
              "src": "8789:43:7",
              "statements": [
                {
                  "expression": {
                    "id": 1285,
                    "name": "_taxLiquifyDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 965,
                    "src": "8806:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1284,
                  "id": 1286,
                  "nodeType": "Return",
                  "src": "8799:26:7"
                }
              ]
            },
            "documentation": {
              "id": 1280,
              "nodeType": "StructuredDocumentation",
              "src": "8653:65:7",
              "text": " @dev Returns the current liquify tax decimals."
            },
            "functionSelector": "ea1c38b2",
            "id": 1288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "taxLiquifyDecimals",
            "nameLocation": "8732:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8750:2:7"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1288,
                  "src": "8782:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8782:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8781:7:7"
            },
            "scope": 3356,
            "src": "8723:109:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1296,
              "nodeType": "Block",
              "src": "8975:40:7",
              "statements": [
                {
                  "expression": {
                    "id": 1294,
                    "name": "_autoBurnEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 999,
                    "src": "8992:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1293,
                  "id": 1295,
                  "nodeType": "Return",
                  "src": "8985:23:7"
                }
              ]
            },
            "documentation": {
              "id": 1289,
              "nodeType": "StructuredDocumentation",
              "src": "8839:69:7",
              "text": " @dev Returns true if auto burn feature is enabled."
            },
            "functionSelector": "9dd255da",
            "id": 1297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "autoBurnEnabled",
            "nameLocation": "8922:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8937:2:7"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "8969:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1291,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8969:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8968:6:7"
            },
            "scope": 3356,
            "src": "8913:102:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1305,
              "nodeType": "Block",
              "src": "9152:38:7",
              "statements": [
                {
                  "expression": {
                    "id": 1303,
                    "name": "_rewardEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1001,
                    "src": "9169:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1302,
                  "id": 1304,
                  "nodeType": "Return",
                  "src": "9162:21:7"
                }
              ]
            },
            "documentation": {
              "id": 1298,
              "nodeType": "StructuredDocumentation",
              "src": "9021:66:7",
              "text": " @dev Returns true if reward feature is enabled."
            },
            "functionSelector": "17ee6995",
            "id": 1306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardEnabled",
            "nameLocation": "9101:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9114:2:7"
            },
            "returnParameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "9146:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9146:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9145:6:7"
            },
            "scope": 3356,
            "src": "9092:98:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1314,
              "nodeType": "Block",
              "src": "9354:50:7",
              "statements": [
                {
                  "expression": {
                    "id": 1312,
                    "name": "_autoSwapAndLiquifyEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 997,
                    "src": "9371:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1311,
                  "id": 1313,
                  "nodeType": "Return",
                  "src": "9364:33:7"
                }
              ]
            },
            "documentation": {
              "id": 1307,
              "nodeType": "StructuredDocumentation",
              "src": "9196:81:7",
              "text": " @dev Returns true if auto swap and liquify feature is enabled."
            },
            "functionSelector": "1c303495",
            "id": 1315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "autoSwapAndLiquifyEnabled",
            "nameLocation": "9291:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9316:2:7"
            },
            "returnParameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1315,
                  "src": "9348:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9348:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9347:6:7"
            },
            "scope": 3356,
            "src": "9282:122:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "9556:44:7",
              "statements": [
                {
                  "expression": {
                    "id": 1321,
                    "name": "_minTokensBeforeSwap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 989,
                    "src": "9573:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1320,
                  "id": 1322,
                  "nodeType": "Return",
                  "src": "9566:27:7"
                }
              ]
            },
            "documentation": {
              "id": 1316,
              "nodeType": "StructuredDocumentation",
              "src": "9410:70:7",
              "text": " @dev Returns the threshold before swap and liquify."
            },
            "functionSelector": "e5d41c6b",
            "id": 1324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minTokensBeforeSwap",
            "nameLocation": "9494:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9513:2:7"
            },
            "returnParameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "9547:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9547:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9546:9:7"
            },
            "scope": 3356,
            "src": "9485:115:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              118
            ],
            "body": {
              "id": 1333,
              "nodeType": "Block",
              "src": "9732:36:7",
              "statements": [
                {
                  "expression": {
                    "id": 1331,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 975,
                    "src": "9749:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1330,
                  "id": 1332,
                  "nodeType": "Return",
                  "src": "9742:19:7"
                }
              ]
            },
            "documentation": {
              "id": 1325,
              "nodeType": "StructuredDocumentation",
              "src": "9606:49:7",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 1334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "9669:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9705:8:7"
            },
            "parameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9680:2:7"
            },
            "returnParameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "9723:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9723:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9722:9:7"
            },
            "scope": 3356,
            "src": "9660:108:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1342,
              "nodeType": "Block",
              "src": "9956:38:7",
              "statements": [
                {
                  "expression": {
                    "id": 1340,
                    "name": "_currentSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 977,
                    "src": "9973:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1339,
                  "id": 1341,
                  "nodeType": "Return",
                  "src": "9966:21:7"
                }
              ]
            },
            "documentation": {
              "id": 1335,
              "nodeType": "StructuredDocumentation",
              "src": "9774:112:7",
              "text": " @dev Returns current supply of the token. \n (currentSupply := totalSupply - totalBurnt)"
            },
            "functionSelector": "771282f6",
            "id": 1343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentSupply",
            "nameLocation": "9900:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9913:2:7"
            },
            "returnParameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "9947:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9947:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9946:9:7"
            },
            "scope": 3356,
            "src": "9891:103:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1351,
              "nodeType": "Block",
              "src": "10133:35:7",
              "statements": [
                {
                  "expression": {
                    "id": 1349,
                    "name": "_totalBurnt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 983,
                    "src": "10150:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1348,
                  "id": 1350,
                  "nodeType": "Return",
                  "src": "10143:18:7"
                }
              ]
            },
            "documentation": {
              "id": 1344,
              "nodeType": "StructuredDocumentation",
              "src": "10000:66:7",
              "text": " @dev Returns the total number of tokens burnt. "
            },
            "functionSelector": "966ff650",
            "id": 1352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalBurnt",
            "nameLocation": "10080:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10090:2:7"
            },
            "returnParameters": {
              "id": 1348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "10124:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10124:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10123:9:7"
            },
            "scope": 3356,
            "src": "10071:97:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "10335:53:7",
              "statements": [
                {
                  "expression": {
                    "id": 1358,
                    "name": "_totalTokensLockedInLiquidity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 985,
                    "src": "10352:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1357,
                  "id": 1359,
                  "nodeType": "Return",
                  "src": "10345:36:7"
                }
              ]
            },
            "documentation": {
              "id": 1353,
              "nodeType": "StructuredDocumentation",
              "src": "10174:76:7",
              "text": " @dev Returns the total number of tokens locked in the LP."
            },
            "functionSelector": "6e999d36",
            "id": 1361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalTokensLockedInLiquidity",
            "nameLocation": "10264:28:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10292:2:7"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1356,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "10326:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10326:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10325:9:7"
            },
            "scope": 3356,
            "src": "10255:133:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1369,
              "nodeType": "Block",
              "src": "10549:50:7",
              "statements": [
                {
                  "expression": {
                    "id": 1367,
                    "name": "_totalETHLockedInLiquidity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 987,
                    "src": "10566:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1366,
                  "id": 1368,
                  "nodeType": "Return",
                  "src": "10559:33:7"
                }
              ]
            },
            "documentation": {
              "id": 1362,
              "nodeType": "StructuredDocumentation",
              "src": "10394:73:7",
              "text": " @dev Returns the total number of ETH locked in the LP."
            },
            "functionSelector": "f91f0540",
            "id": 1370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalETHLockedInLiquidity",
            "nameLocation": "10481:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10506:2:7"
            },
            "returnParameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1365,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "10540:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10540:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10539:9:7"
            },
            "scope": 3356,
            "src": "10472:127:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              126
            ],
            "body": {
              "id": 1393,
              "nodeType": "Block",
              "src": "10740:149:7",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 1379,
                      "name": "_isExcludedFromReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "10754:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1381,
                    "indexExpression": {
                      "id": 1380,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1373,
                      "src": "10776:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10754:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1386,
                  "nodeType": "IfStatement",
                  "src": "10750:66:7",
                  "trueBody": {
                    "expression": {
                      "baseExpression": {
                        "id": 1382,
                        "name": "_tokenBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "10793:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1384,
                      "indexExpression": {
                        "id": 1383,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1373,
                        "src": "10808:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10793:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1378,
                    "id": 1385,
                    "nodeType": "Return",
                    "src": "10786:30:7"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1388,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "10853:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1390,
                        "indexExpression": {
                          "id": 1389,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1373,
                          "src": "10873:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10853:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1387,
                      "name": "tokenFromReflection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2421,
                      "src": "10833:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10833:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1378,
                  "id": 1392,
                  "nodeType": "Return",
                  "src": "10826:56:7"
                }
              ]
            },
            "documentation": {
              "id": 1371,
              "nodeType": "StructuredDocumentation",
              "src": "10605:47:7",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "10666:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1375,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10713:8:7"
            },
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1373,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10684:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "10676:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10676:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10675:17:7"
            },
            "returnParameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "10731:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10731:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10730:9:7"
            },
            "scope": 3356,
            "src": "10657:232:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1406,
              "nodeType": "Block",
              "src": "11052:54:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1402,
                      "name": "_isExcludedFromReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "11069:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1404,
                    "indexExpression": {
                      "id": 1403,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1397,
                      "src": "11091:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11069:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1401,
                  "id": 1405,
                  "nodeType": "Return",
                  "src": "11062:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1395,
              "nodeType": "StructuredDocumentation",
              "src": "10895:76:7",
              "text": " @dev Returns whether an account is excluded from reward. "
            },
            "functionSelector": "88f82020",
            "id": 1407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExcludedFromReward",
            "nameLocation": "10985:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1397,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11014:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "11006:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11006:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11005:17:7"
            },
            "returnParameters": {
              "id": 1401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "11046:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11046:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11045:6:7"
            },
            "scope": 3356,
            "src": "10976:130:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1419,
              "nodeType": "Block",
              "src": "11263:51:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1415,
                      "name": "_isExcludedFromFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 938,
                      "src": "11280:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1417,
                    "indexExpression": {
                      "id": 1416,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1410,
                      "src": "11299:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11280:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1414,
                  "id": 1418,
                  "nodeType": "Return",
                  "src": "11273:34:7"
                }
              ]
            },
            "documentation": {
              "id": 1408,
              "nodeType": "StructuredDocumentation",
              "src": "11112:73:7",
              "text": " @dev Returns whether an account is excluded from fee. "
            },
            "functionSelector": "5342acb4",
            "id": 1420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExcludedFromFee",
            "nameLocation": "11199:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11225:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1420,
                  "src": "11217:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11217:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11216:17:7"
            },
            "returnParameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1420,
                  "src": "11257:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11257:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11256:6:7"
            },
            "scope": 3356,
            "src": "11190:124:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              136
            ],
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "11609:80:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1432,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "11629:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11629:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1434,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "11643:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1435,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "11654:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1431,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "11619:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11619:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "11619:42:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11678:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1430,
                  "id": 1439,
                  "nodeType": "Return",
                  "src": "11671:11:7"
                }
              ]
            },
            "documentation": {
              "id": 1421,
              "nodeType": "StructuredDocumentation",
              "src": "11320:192:7",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "11526:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1427,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11585:8:7"
            },
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1423,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11543:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "11535:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11535:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11562:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "11554:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11554:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11534:35:7"
            },
            "returnParameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "11603:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11603:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11602:6:7"
            },
            "scope": 3356,
            "src": "11517:172:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              146
            ],
            "body": {
              "id": 1458,
              "nodeType": "Block",
              "src": "11845:51:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1452,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "11862:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1454,
                      "indexExpression": {
                        "id": 1453,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1444,
                        "src": "11874:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11862:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1456,
                    "indexExpression": {
                      "id": 1455,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1446,
                      "src": "11881:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11862:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1451,
                  "id": 1457,
                  "nodeType": "Return",
                  "src": "11855:34:7"
                }
              ]
            },
            "documentation": {
              "id": 1442,
              "nodeType": "StructuredDocumentation",
              "src": "11695:47:7",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 1459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "11756:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1448,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11818:8:7"
            },
            "parameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1444,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11774:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1459,
                  "src": "11766:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11766:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1446,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11789:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1459,
                  "src": "11781:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11781:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11765:32:7"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1459,
                  "src": "11836:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11836:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11835:9:7"
            },
            "scope": 3356,
            "src": "11747:149:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              156
            ],
            "body": {
              "id": 1479,
              "nodeType": "Block",
              "src": "12123:77:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1471,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "12142:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12142:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1473,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "12156:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1474,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "12165:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1470,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "12133:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12133:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1476,
                  "nodeType": "ExpressionStatement",
                  "src": "12133:39:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12189:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1469,
                  "id": 1478,
                  "nodeType": "Return",
                  "src": "12182:11:7"
                }
              ]
            },
            "documentation": {
              "id": 1460,
              "nodeType": "StructuredDocumentation",
              "src": "11902:127:7",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 1480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "12043:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12099:8:7"
            },
            "parameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1462,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "12059:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "12051:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12051:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1464,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12076:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "12068:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12068:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12050:33:7"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "12117:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12117:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12116:6:7"
            },
            "scope": 3356,
            "src": "12034:166:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              168
            ],
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "12779:264:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1494,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "12799:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1495,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "12807:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1496,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "12818:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1493,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1848,
                      "src": "12789:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12789:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "12789:36:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1500,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 951,
                              "src": "12843:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1502,
                            "indexExpression": {
                              "id": 1501,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1483,
                              "src": "12855:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12843:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1505,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1503,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "12863:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12863:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12843:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1506,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "12880:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12843:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12888:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 1499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12835:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12835:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1510,
                  "nodeType": "ExpressionStatement",
                  "src": "12835:96:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1512,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1483,
                        "src": "12950:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1513,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "12958:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12958:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1515,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 951,
                              "src": "12972:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1517,
                            "indexExpression": {
                              "id": 1516,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1483,
                              "src": "12984:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12972:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1520,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1518,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "12992:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12992:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12972:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1521,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "13008:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12972:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1511,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "12941:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12941:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "12941:74:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13032:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1492,
                  "id": 1526,
                  "nodeType": "Return",
                  "src": "13025:11:7"
                }
              ]
            },
            "documentation": {
              "id": 1481,
              "nodeType": "StructuredDocumentation",
              "src": "12206:456:7",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 1528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "12676:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1489,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12755:8:7"
            },
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12697:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "12689:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12689:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "12713:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "12705:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12705:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12732:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "12724:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12724:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12688:51:7"
            },
            "returnParameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "12773:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12773:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12772:6:7"
            },
            "scope": 3356,
            "src": "12667:376:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1554,
              "nodeType": "Block",
              "src": "13532:118:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1539,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "13551:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13551:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1541,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "13565:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1542,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 951,
                              "src": "13574:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1545,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1543,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "13586:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13586:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13574:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1547,
                          "indexExpression": {
                            "id": 1546,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1531,
                            "src": "13600:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13574:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1548,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1533,
                          "src": "13611:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13574:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1538,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "13542:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13542:80:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "13542:80:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13639:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1537,
                  "id": 1553,
                  "nodeType": "Return",
                  "src": "13632:11:7"
                }
              ]
            },
            "documentation": {
              "id": 1529,
              "nodeType": "StructuredDocumentation",
              "src": "13049:384:7",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 1555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "13447:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "13473:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "13465:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13465:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1533,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "13490:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "13482:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13482:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13464:37:7"
            },
            "returnParameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1536,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1555,
                  "src": "13526:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13526:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13525:6:7"
            },
            "scope": 3356,
            "src": "13438:212:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1592,
              "nodeType": "Block",
              "src": "14236:271:7",
              "statements": [
                {
                  "assignments": [
                    1566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1566,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "14254:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1592,
                      "src": "14246:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14246:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1573,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1567,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "14273:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1570,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1568,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "14285:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14285:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14273:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1572,
                    "indexExpression": {
                      "id": 1571,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1558,
                      "src": "14299:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14273:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14246:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1575,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "14325:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1576,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1560,
                          "src": "14345:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14325:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14362:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 1574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14317:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14317:85:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1580,
                  "nodeType": "ExpressionStatement",
                  "src": "14317:85:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1582,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "14421:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14421:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1584,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1558,
                        "src": "14435:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1585,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1566,
                          "src": "14444:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1586,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1560,
                          "src": "14463:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14444:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1581,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "14412:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14412:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "14412:67:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14496:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1564,
                  "id": 1591,
                  "nodeType": "Return",
                  "src": "14489:11:7"
                }
              ]
            },
            "documentation": {
              "id": 1556,
              "nodeType": "StructuredDocumentation",
              "src": "13656:476:7",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 1593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "14146:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1558,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14172:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "14164:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14164:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "14189:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "14181:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14181:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14163:42:7"
            },
            "returnParameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "14230:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14230:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14229:6:7"
            },
            "scope": 3356,
            "src": "14137:370:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1675,
              "nodeType": "Block",
              "src": "14949:732:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1602,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1596,
                          "src": "14967:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1603,
                          "name": "burnAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 959,
                          "src": "14978:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14967:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865206275726e2061646472657373",
                        "id": 1605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14991:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e689f793e6546576af5b30396447224d49065e9ed32ad7badd1b7543b91110d",
                          "typeString": "literal_string \"ERC20: burn from the burn address\""
                        },
                        "value": "ERC20: burn from the burn address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e689f793e6546576af5b30396447224d49065e9ed32ad7badd1b7543b91110d",
                          "typeString": "literal_string \"ERC20: burn from the burn address\""
                        }
                      ],
                      "id": 1601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14959:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14959:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1607,
                  "nodeType": "ExpressionStatement",
                  "src": "14959:68:7"
                },
                {
                  "assignments": [
                    1609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1609,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "15046:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1675,
                      "src": "15038:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15038:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1613,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1611,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "15073:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1610,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "15063:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15063:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15038:43:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1615,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1609,
                          "src": "15099:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1616,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1598,
                          "src": "15117:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15099:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15125:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 1614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15091:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15091:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "15091:71:7"
                },
                {
                  "assignments": [
                    1622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1622,
                      "mutability": "mutable",
                      "name": "rAmount",
                      "nameLocation": "15181:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1675,
                      "src": "15173:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1621,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15173:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1626,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1624,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1598,
                        "src": "15203:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1623,
                      "name": "_getRAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2831,
                      "src": "15191:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15191:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15173:37:7"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 1627,
                      "name": "_isExcludedFromReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "15277:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1629,
                    "indexExpression": {
                      "id": 1628,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1596,
                      "src": "15299:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15277:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1637,
                  "nodeType": "IfStatement",
                  "src": "15273:94:7",
                  "trueBody": {
                    "id": 1636,
                    "nodeType": "Block",
                    "src": "15309:58:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1630,
                              "name": "_tokenBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "15323:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1632,
                            "indexExpression": {
                              "id": 1631,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1596,
                              "src": "15338:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15323:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1633,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1598,
                            "src": "15350:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15323:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1635,
                        "nodeType": "ExpressionStatement",
                        "src": "15323:33:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1638,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "15377:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1640,
                      "indexExpression": {
                        "id": 1639,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "15397:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15377:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1641,
                      "name": "rAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "15409:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15377:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "15377:39:7"
                },
                {
                  "expression": {
                    "id": 1648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1644,
                        "name": "_tokenBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "15427:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1646,
                      "indexExpression": {
                        "id": 1645,
                        "name": "burnAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "15442:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15427:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1647,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "15458:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15427:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1649,
                  "nodeType": "ExpressionStatement",
                  "src": "15427:37:7"
                },
                {
                  "expression": {
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1650,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "15474:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1652,
                      "indexExpression": {
                        "id": 1651,
                        "name": "burnAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "15494:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15474:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1653,
                      "name": "rAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "15510:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15474:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1655,
                  "nodeType": "ExpressionStatement",
                  "src": "15474:43:7"
                },
                {
                  "expression": {
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1656,
                      "name": "_currentSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "15528:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1657,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "15546:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15528:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1659,
                  "nodeType": "ExpressionStatement",
                  "src": "15528:24:7"
                },
                {
                  "expression": {
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1660,
                      "name": "_totalBurnt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "15563:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1661,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "15578:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15563:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1663,
                  "nodeType": "ExpressionStatement",
                  "src": "15563:21:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1665,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "15605:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1666,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1598,
                        "src": "15614:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1664,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "15600:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15600:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1668,
                  "nodeType": "EmitStatement",
                  "src": "15595:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1670,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "15645:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1671,
                        "name": "burnAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "15654:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1672,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1598,
                        "src": "15667:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1669,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "15636:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15636:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1674,
                  "nodeType": "EmitStatement",
                  "src": "15631:43:7"
                }
              ]
            },
            "documentation": {
              "id": 1594,
              "nodeType": "StructuredDocumentation",
              "src": "14513:366:7",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Burn} event indicating the amount burnt.\n Emits a {Transfer} event with `to` set to the burn address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 1676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "14893:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14907:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1676,
                  "src": "14899:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14899:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1598,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14924:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1676,
                  "src": "14916:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14916:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14898:33:7"
            },
            "returnParameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14949:0:7"
            },
            "scope": 3356,
            "src": "14884:797:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1719,
              "nodeType": "Block",
              "src": "15774:257:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1686,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1678,
                          "src": "15792:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15809:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15801:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1687,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15801:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15801:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15792:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 1692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15813:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 1685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15784:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15784:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1694,
                  "nodeType": "ExpressionStatement",
                  "src": "15784:68:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1696,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1680,
                          "src": "15870:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15889:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15881:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1697,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15881:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15881:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15870:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15893:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 1695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15862:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15862:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1704,
                  "nodeType": "ExpressionStatement",
                  "src": "15862:68:7"
                },
                {
                  "expression": {
                    "id": 1711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1705,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 951,
                          "src": "15941:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1708,
                        "indexExpression": {
                          "id": 1706,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1678,
                          "src": "15953:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15941:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1709,
                      "indexExpression": {
                        "id": 1707,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1680,
                        "src": "15960:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15941:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1710,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1682,
                      "src": "15971:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15941:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1712,
                  "nodeType": "ExpressionStatement",
                  "src": "15941:36:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1714,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1678,
                        "src": "16001:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1715,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1680,
                        "src": "16008:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1716,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1682,
                        "src": "16017:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1713,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "15992:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15992:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1718,
                  "nodeType": "EmitStatement",
                  "src": "15987:37:7"
                }
              ]
            },
            "id": 1720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "15700:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "15717:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1720,
                  "src": "15709:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15709:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1680,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "15732:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1720,
                  "src": "15724:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15724:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1682,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15749:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1720,
                  "src": "15741:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15741:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15708:48:7"
            },
            "returnParameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15774:0:7"
            },
            "scope": 3356,
            "src": "15691:340:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1847,
              "nodeType": "Block",
              "src": "16124:1104:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1730,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1722,
                          "src": "16142:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16160:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16152:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1731,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16152:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16152:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16142:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16164:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 1729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16134:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16134:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1738,
                  "nodeType": "ExpressionStatement",
                  "src": "16134:70:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1740,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1724,
                          "src": "16222:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16243:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16235:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16235:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16235:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16222:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16247:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 1739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16214:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16214:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "16214:71:7"
                },
                {
                  "assignments": [
                    1751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1751,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "16320:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1847,
                      "src": "16296:30:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                        "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                      },
                      "typeName": {
                        "id": 1750,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1749,
                          "name": "ValuesFromAmount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1040,
                          "src": "16296:16:7"
                        },
                        "referencedDeclaration": 1040,
                        "src": "16296:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1758,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1753,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1726,
                        "src": "16340:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1754,
                          "name": "_isExcludedFromFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "16348:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1756,
                        "indexExpression": {
                          "id": 1755,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1722,
                          "src": "16367:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16348:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1752,
                      "name": "_getValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2656,
                      "src": "16329:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bool_$returns$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$",
                        "typeString": "function (uint256,bool) view returns (struct ERC20Deflationary.ValuesFromAmount memory)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16329:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16296:79:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1759,
                        "name": "_isExcludedFromReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "16397:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1761,
                      "indexExpression": {
                        "id": 1760,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "16419:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16397:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 1765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "16430:33:7",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1762,
                          "name": "_isExcludedFromReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 942,
                          "src": "16431:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1764,
                        "indexExpression": {
                          "id": 1763,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1724,
                          "src": "16453:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16431:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16397:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16548:30:7",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1774,
                            "name": "_isExcludedFromReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "16549:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1776,
                          "indexExpression": {
                            "id": 1775,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1722,
                            "src": "16571:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16549:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 1778,
                          "name": "_isExcludedFromReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 942,
                          "src": "16582:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1780,
                        "indexExpression": {
                          "id": 1779,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1724,
                          "src": "16604:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16582:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "16548:66:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "16697:30:7",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1789,
                              "name": "_isExcludedFromReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "16698:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1791,
                            "indexExpression": {
                              "id": 1790,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "16720:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16698:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "16731:33:7",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1793,
                              "name": "_isExcludedFromReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "16732:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1795,
                            "indexExpression": {
                              "id": 1794,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "16754:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16732:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16697:67:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1805,
                              "name": "_isExcludedFromReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "16845:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1807,
                            "indexExpression": {
                              "id": 1806,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "16867:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16845:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1808,
                              "name": "_isExcludedFromReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 942,
                              "src": "16878:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1810,
                            "indexExpression": {
                              "id": 1809,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "16900:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16878:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "16845:65:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1825,
                          "nodeType": "Block",
                          "src": "16991:69:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1820,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1722,
                                    "src": "17023:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1821,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1724,
                                    "src": "17031:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1822,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1751,
                                    "src": "17042:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  ],
                                  "id": 1819,
                                  "name": "_transferStandard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1943,
                                  "src": "17005:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,struct ERC20Deflationary.ValuesFromAmount memory)"
                                  }
                                },
                                "id": 1823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17005:44:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1824,
                              "nodeType": "ExpressionStatement",
                              "src": "17005:44:7"
                            }
                          ]
                        },
                        "id": 1826,
                        "nodeType": "IfStatement",
                        "src": "16841:219:7",
                        "trueBody": {
                          "id": 1818,
                          "nodeType": "Block",
                          "src": "16912:73:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1813,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1722,
                                    "src": "16948:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1814,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1724,
                                    "src": "16956:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1815,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1751,
                                    "src": "16967:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  ],
                                  "id": 1812,
                                  "name": "_transferBothExcluded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2089,
                                  "src": "16926:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,struct ERC20Deflationary.ValuesFromAmount memory)"
                                  }
                                },
                                "id": 1816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16926:48:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1817,
                              "nodeType": "ExpressionStatement",
                              "src": "16926:48:7"
                            }
                          ]
                        }
                      },
                      "id": 1827,
                      "nodeType": "IfStatement",
                      "src": "16693:367:7",
                      "trueBody": {
                        "id": 1804,
                        "nodeType": "Block",
                        "src": "16766:69:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1799,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1722,
                                  "src": "16798:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1800,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1724,
                                  "src": "16806:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1801,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1751,
                                  "src": "16817:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                    "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                    "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                  }
                                ],
                                "id": 1798,
                                "name": "_transferStandard",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1943,
                                "src": "16780:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$returns$__$",
                                  "typeString": "function (address,address,struct ERC20Deflationary.ValuesFromAmount memory)"
                                }
                              },
                              "id": 1802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16780:44:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1803,
                            "nodeType": "ExpressionStatement",
                            "src": "16780:44:7"
                          }
                        ]
                      }
                    },
                    "id": 1828,
                    "nodeType": "IfStatement",
                    "src": "16544:516:7",
                    "trueBody": {
                      "id": 1788,
                      "nodeType": "Block",
                      "src": "16616:71:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1783,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1722,
                                "src": "16650:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1784,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1724,
                                "src": "16658:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1785,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1751,
                                "src": "16669:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              ],
                              "id": 1782,
                              "name": "_transferToExcluded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1988,
                              "src": "16630:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,struct ERC20Deflationary.ValuesFromAmount memory)"
                              }
                            },
                            "id": 1786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16630:46:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1787,
                          "nodeType": "ExpressionStatement",
                          "src": "16630:46:7"
                        }
                      ]
                    }
                  },
                  "id": 1829,
                  "nodeType": "IfStatement",
                  "src": "16393:667:7",
                  "trueBody": {
                    "id": 1773,
                    "nodeType": "Block",
                    "src": "16465:73:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1768,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "16501:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1769,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "16509:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1770,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1751,
                              "src": "16520:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            ],
                            "id": 1767,
                            "name": "_transferFromExcluded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2033,
                            "src": "16479:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ERC20Deflationary.ValuesFromAmount memory)"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16479:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1772,
                        "nodeType": "ExpressionStatement",
                        "src": "16479:48:7"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1831,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "17083:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1832,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1724,
                        "src": "17091:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1833,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1751,
                          "src": "17102:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tTransferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1029,
                        "src": "17102:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1830,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "17074:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17074:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1836,
                  "nodeType": "EmitStatement",
                  "src": "17069:56:7"
                },
                {
                  "condition": {
                    "id": 1840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "17140:27:7",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1837,
                        "name": "_isExcludedFromFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "17141:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1839,
                      "indexExpression": {
                        "id": 1838,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "17160:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17141:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1846,
                  "nodeType": "IfStatement",
                  "src": "17136:85:7",
                  "trueBody": {
                    "id": 1845,
                    "nodeType": "Block",
                    "src": "17169:52:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1842,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1751,
                              "src": "17203:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            ],
                            "id": 1841,
                            "name": "_afterTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1909,
                            "src": "17183:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$returns$__$",
                              "typeString": "function (struct ERC20Deflationary.ValuesFromAmount memory)"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17183:27:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1844,
                        "nodeType": "ExpressionStatement",
                        "src": "17183:27:7"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "16046:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1722,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "16064:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "16056:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16056:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1724,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "16080:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "16072:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16072:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1726,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16099:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1848,
                  "src": "16091:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16091:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16055:51:7"
            },
            "returnParameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16124:0:7"
            },
            "scope": 3356,
            "src": "16037:1191:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1908,
              "nodeType": "Block",
              "src": "17393:490:7",
              "statements": [
                {
                  "condition": {
                    "id": 1855,
                    "name": "_autoBurnEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 999,
                    "src": "17423:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1897,
                  "nodeType": "IfStatement",
                  "src": "17419:284:7",
                  "trueBody": {
                    "id": 1896,
                    "nodeType": "Block",
                    "src": "17441:262:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1856,
                              "name": "_tokenBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "17455:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1861,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1859,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "17478:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                ],
                                "id": 1858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17470:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1857,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17470:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17470:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17455:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1862,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1852,
                              "src": "17488:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 1863,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tBurnFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1023,
                            "src": "17488:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17455:48:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1865,
                        "nodeType": "ExpressionStatement",
                        "src": "17455:48:7"
                      },
                      {
                        "expression": {
                          "id": 1874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1866,
                              "name": "_reflectionBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 930,
                              "src": "17517:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1871,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 1869,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "17545:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                ],
                                "id": 1868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17537:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1867,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17537:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17537:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17517:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1872,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1852,
                              "src": "17555:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 1873,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rBurnFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1033,
                            "src": "17555:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17517:53:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1875,
                        "nodeType": "ExpressionStatement",
                        "src": "17517:53:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1879,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "17601:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                ],
                                "id": 1878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17593:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1877,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17593:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17593:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1881,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "17608:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17608:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1883,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1852,
                                "src": "17622:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 1884,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tBurnFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1023,
                              "src": "17622:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1876,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "17584:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17584:54:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1886,
                        "nodeType": "ExpressionStatement",
                        "src": "17584:54:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1890,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "17669:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                    "typeString": "contract ERC20Deflationary"
                                  }
                                ],
                                "id": 1889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17661:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1888,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17661:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17661:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1892,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1852,
                                "src": "17676:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tBurnFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1023,
                              "src": "17676:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1887,
                            "name": "burnFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2140,
                            "src": "17652:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17652:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1895,
                        "nodeType": "ExpressionStatement",
                        "src": "17652:40:7"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1898,
                    "name": "_rewardEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1001,
                    "src": "17756:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1907,
                  "nodeType": "IfStatement",
                  "src": "17752:97:7",
                  "trueBody": {
                    "id": 1906,
                    "nodeType": "Block",
                    "src": "17772:77:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1900,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1852,
                                "src": "17801:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 1901,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rRewardFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1035,
                              "src": "17801:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1902,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1852,
                                "src": "17820:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 1903,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tRewardFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1025,
                              "src": "17820:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1899,
                            "name": "_distributeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2622,
                            "src": "17786:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17786:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1905,
                        "nodeType": "ExpressionStatement",
                        "src": "17786:52:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1849,
              "nodeType": "StructuredDocumentation",
              "src": "17234:76:7",
              "text": " @dev Performs all the functionalities that are enabled."
            },
            "id": 1909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "17324:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "17368:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "17344:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 1851,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1850,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "17344:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "17344:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17343:32:7"
            },
            "returnParameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17393:0:7"
            },
            "scope": 3356,
            "src": "17315:568:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1942,
              "nodeType": "Block",
              "src": "18102:216:7",
              "statements": [
                {
                  "expression": {
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1920,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "18126:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1922,
                      "indexExpression": {
                        "id": 1921,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "18146:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18126:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1923,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "18156:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1925,
                        "indexExpression": {
                          "id": 1924,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1912,
                          "src": "18176:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18156:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 1926,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1917,
                          "src": "18186:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1031,
                        "src": "18186:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18156:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18126:74:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "18126:74:7"
                },
                {
                  "expression": {
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1931,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "18210:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1933,
                      "indexExpression": {
                        "id": 1932,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "18230:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18210:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1934,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "18243:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1936,
                        "indexExpression": {
                          "id": 1935,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1914,
                          "src": "18263:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18243:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1937,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1917,
                          "src": "18276:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 1938,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rTransferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1039,
                        "src": "18276:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18243:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18210:88:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1941,
                  "nodeType": "ExpressionStatement",
                  "src": "18210:88:7"
                }
              ]
            },
            "documentation": {
              "id": 1910,
              "nodeType": "StructuredDocumentation",
              "src": "17889:106:7",
              "text": " @dev Performs transfer between two accounts that are both included in receiving reward."
            },
            "id": 1943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferStandard",
            "nameLocation": "18009:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "18035:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "18027:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18027:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "18051:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "18043:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18043:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1917,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "18086:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "18062:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 1916,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1915,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "18062:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "18062:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18026:67:7"
            },
            "returnParameters": {
              "id": 1919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18102:0:7"
            },
            "scope": 3356,
            "src": "18000:318:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1987,
              "nodeType": "Block",
              "src": "18577:291:7",
              "statements": [
                {
                  "expression": {
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1954,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "18596:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1956,
                      "indexExpression": {
                        "id": 1955,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "18616:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18596:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1957,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "18626:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1959,
                        "indexExpression": {
                          "id": 1958,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1946,
                          "src": "18646:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18626:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 1960,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "18656:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 1961,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1031,
                        "src": "18656:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18626:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18596:74:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1964,
                  "nodeType": "ExpressionStatement",
                  "src": "18596:74:7"
                },
                {
                  "expression": {
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1965,
                        "name": "_tokenBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "18680:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1967,
                      "indexExpression": {
                        "id": 1966,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1948,
                        "src": "18695:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18680:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1968,
                          "name": "_tokenBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 934,
                          "src": "18708:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1970,
                        "indexExpression": {
                          "id": 1969,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1948,
                          "src": "18723:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18708:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1971,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "18736:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tTransferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1029,
                        "src": "18736:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18708:50:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18680:78:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "18680:78:7"
                },
                {
                  "expression": {
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1976,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "18768:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1978,
                      "indexExpression": {
                        "id": 1977,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1948,
                        "src": "18788:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18768:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 1979,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "18801:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1981,
                        "indexExpression": {
                          "id": 1980,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1948,
                          "src": "18821:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18801:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1982,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "18834:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rTransferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1039,
                        "src": "18834:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18801:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18768:88:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1986,
                  "nodeType": "ExpressionStatement",
                  "src": "18768:88:7"
                }
              ]
            },
            "documentation": {
              "id": 1944,
              "nodeType": "StructuredDocumentation",
              "src": "18324:144:7",
              "text": " @dev Performs transfer from an included account to an excluded account.\n (included and excluded from receiving reward.)"
            },
            "id": 1988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferToExcluded",
            "nameLocation": "18482:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "18510:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "18502:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18502:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1948,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "18526:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "18518:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18518:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "18561:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1988,
                  "src": "18537:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 1950,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1949,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "18537:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "18537:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18501:67:7"
            },
            "returnParameters": {
              "id": 1953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18577:0:7"
            },
            "scope": 3356,
            "src": "18473:395:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2032,
              "nodeType": "Block",
              "src": "19129:275:7",
              "statements": [
                {
                  "expression": {
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1999,
                        "name": "_tokenBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "19148:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2001,
                      "indexExpression": {
                        "id": 2000,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "19163:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19148:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2002,
                          "name": "_tokenBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 934,
                          "src": "19173:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2004,
                        "indexExpression": {
                          "id": 2003,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1991,
                          "src": "19188:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19173:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2005,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "19198:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2006,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1021,
                        "src": "19198:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19173:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19148:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2009,
                  "nodeType": "ExpressionStatement",
                  "src": "19148:63:7"
                },
                {
                  "expression": {
                    "id": 2019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2010,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "19221:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2012,
                      "indexExpression": {
                        "id": 2011,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "19241:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19221:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2013,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "19251:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2015,
                        "indexExpression": {
                          "id": 2014,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1991,
                          "src": "19271:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19251:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2016,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "19281:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1031,
                        "src": "19281:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19251:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19221:74:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2020,
                  "nodeType": "ExpressionStatement",
                  "src": "19221:74:7"
                },
                {
                  "expression": {
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2021,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "19305:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2023,
                      "indexExpression": {
                        "id": 2022,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1993,
                        "src": "19325:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19305:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2024,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "19338:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2026,
                        "indexExpression": {
                          "id": 2025,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1993,
                          "src": "19358:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19338:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 2027,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "19371:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rTransferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1039,
                        "src": "19371:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19338:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19305:88:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "19305:88:7"
                }
              ]
            },
            "documentation": {
              "id": 1989,
              "nodeType": "StructuredDocumentation",
              "src": "18874:144:7",
              "text": " @dev Performs transfer from an excluded account to an included account.\n (included and excluded from receiving reward.)"
            },
            "id": 2033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferFromExcluded",
            "nameLocation": "19032:21:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "19062:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "19054:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19054:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "19078:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "19070:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19070:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "19113:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2033,
                  "src": "19089:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 1995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1994,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "19089:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "19089:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19053:67:7"
            },
            "returnParameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19129:0:7"
            },
            "scope": 3356,
            "src": "19023:381:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2088,
              "nodeType": "Block",
              "src": "19627:360:7",
              "statements": [
                {
                  "expression": {
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2044,
                        "name": "_tokenBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "19638:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2046,
                      "indexExpression": {
                        "id": 2045,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "19653:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19638:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2047,
                          "name": "_tokenBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 934,
                          "src": "19663:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2049,
                        "indexExpression": {
                          "id": 2048,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2036,
                          "src": "19678:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19663:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2050,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "19688:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2051,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1021,
                        "src": "19688:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19663:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19638:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "19638:63:7"
                },
                {
                  "expression": {
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2055,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "19711:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2057,
                      "indexExpression": {
                        "id": 2056,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2036,
                        "src": "19731:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19711:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2058,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "19741:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2060,
                        "indexExpression": {
                          "id": 2059,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2036,
                          "src": "19761:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19741:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2061,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "19771:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2062,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1031,
                        "src": "19771:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19741:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19711:74:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2065,
                  "nodeType": "ExpressionStatement",
                  "src": "19711:74:7"
                },
                {
                  "expression": {
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2066,
                        "name": "_tokenBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 934,
                        "src": "19795:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2068,
                      "indexExpression": {
                        "id": 2067,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "19810:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19795:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2069,
                          "name": "_tokenBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 934,
                          "src": "19823:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2071,
                        "indexExpression": {
                          "id": 2070,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2038,
                          "src": "19838:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19823:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 2072,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "19851:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tTransferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1029,
                        "src": "19851:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19823:50:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19795:78:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "19795:78:7"
                },
                {
                  "expression": {
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2077,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "19883:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2079,
                      "indexExpression": {
                        "id": 2078,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2038,
                        "src": "19903:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19883:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2080,
                          "name": "_reflectionBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "19916:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2082,
                        "indexExpression": {
                          "id": 2081,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2038,
                          "src": "19936:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19916:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 2083,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "19949:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2084,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rTransferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1039,
                        "src": "19949:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19916:55:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19883:88:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "19883:88:7"
                }
              ]
            },
            "documentation": {
              "id": 2034,
              "nodeType": "StructuredDocumentation",
              "src": "19410:106:7",
              "text": " @dev Performs transfer between two accounts that are both excluded in receiving reward."
            },
            "id": 2089,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferBothExcluded",
            "nameLocation": "19530:21:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "19560:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2089,
                  "src": "19552:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19552:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "19576:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2089,
                  "src": "19568:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19568:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2041,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "19611:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2089,
                  "src": "19587:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 2040,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2039,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "19587:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "19587:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19551:67:7"
            },
            "returnParameters": {
              "id": 2043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19627:0:7"
            },
            "scope": 3356,
            "src": "19521:466:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2101,
              "nodeType": "Block",
              "src": "20119:44:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2096,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "20135:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20135:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2098,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2092,
                        "src": "20149:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2095,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "20129:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20129:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2100,
                  "nodeType": "ExpressionStatement",
                  "src": "20129:27:7"
                }
              ]
            },
            "documentation": {
              "id": 2090,
              "nodeType": "StructuredDocumentation",
              "src": "19997:72:7",
              "text": " @dev Destroys `amount` tokens from the caller."
            },
            "functionSelector": "42966c68",
            "id": 2102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "20083:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2092,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20096:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2102,
                  "src": "20088:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20088:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20087:16:7"
            },
            "returnParameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20119:0:7"
            },
            "scope": 3356,
            "src": "20074:89:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2139,
              "nodeType": "Block",
              "src": "20535:261:7",
              "statements": [
                {
                  "assignments": [
                    2111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2111,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "20553:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2139,
                      "src": "20545:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20545:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2117,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2113,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2105,
                        "src": "20582:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2114,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "20591:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20591:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2112,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1459,
                      "src": "20572:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20572:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20545:59:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2119,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2111,
                          "src": "20622:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2120,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2107,
                          "src": "20642:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20622:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20650:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                          "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                        },
                        "value": "ERC20: burn amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                          "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                        }
                      ],
                      "id": 2118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "20614:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20614:75:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "20614:75:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2126,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2105,
                        "src": "20708:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2127,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "20717:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20717:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2129,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2111,
                          "src": "20731:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2130,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2107,
                          "src": "20750:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20731:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2125,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "20699:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20699:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2133,
                  "nodeType": "ExpressionStatement",
                  "src": "20699:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2135,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2105,
                        "src": "20773:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2136,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2107,
                        "src": "20782:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2134,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "20767:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20767:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2138,
                  "nodeType": "ExpressionStatement",
                  "src": "20767:22:7"
                }
              ]
            },
            "documentation": {
              "id": 2103,
              "nodeType": "StructuredDocumentation",
              "src": "20169:295:7",
              "text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
            },
            "functionSelector": "79cc6790",
            "id": 2140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "20478:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2105,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "20495:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "20487:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20487:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2107,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "20512:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "20504:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20504:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20486:33:7"
            },
            "returnParameters": {
              "id": 2109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20535:0:7"
            },
            "scope": 3356,
            "src": "20469:327:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2187,
              "nodeType": "Block",
              "src": "21085:383:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "21103:31:7",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2147,
                            "name": "_isExcludedFromReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "21104:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2149,
                          "indexExpression": {
                            "id": 2148,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "21126:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21104:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420697320616c7265616479206578636c756465642e",
                        "id": 2151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21136:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bf0921c3420ac0b27a948180e60c76483c847be54f2410a0cc3e62d8822c372",
                          "typeString": "literal_string \"Account is already excluded.\""
                        },
                        "value": "Account is already excluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bf0921c3420ac0b27a948180e60c76483c847be54f2410a0cc3e62d8822c372",
                          "typeString": "literal_string \"Account is already excluded.\""
                        }
                      ],
                      "id": 2146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "21095:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21095:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2153,
                  "nodeType": "ExpressionStatement",
                  "src": "21095:72:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2154,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "21181:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2156,
                      "indexExpression": {
                        "id": 2155,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "21201:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "21181:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21212:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21181:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2170,
                  "nodeType": "IfStatement",
                  "src": "21178:137:7",
                  "trueBody": {
                    "id": 2169,
                    "nodeType": "Block",
                    "src": "21215:100:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2159,
                              "name": "_tokenBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "21229:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2161,
                            "indexExpression": {
                              "id": 2160,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2143,
                              "src": "21244:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21229:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 2163,
                                  "name": "_reflectionBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 930,
                                  "src": "21275:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2165,
                                "indexExpression": {
                                  "id": 2164,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2143,
                                  "src": "21295:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21275:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2162,
                              "name": "tokenFromReflection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2421,
                              "src": "21255:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 2166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21255:49:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21229:75:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2168,
                        "nodeType": "ExpressionStatement",
                        "src": "21229:75:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2171,
                        "name": "_isExcludedFromReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "21324:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2173,
                      "indexExpression": {
                        "id": 2172,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "21346:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21324:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21357:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "21324:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2176,
                  "nodeType": "ExpressionStatement",
                  "src": "21324:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2180,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "21396:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2177,
                        "name": "_excludedFromReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "21371:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "21371:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21371:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2182,
                  "nodeType": "ExpressionStatement",
                  "src": "21371:33:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2184,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "21453:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2183,
                      "name": "ExcludeAccountFromReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1094,
                      "src": "21428:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21428:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2186,
                  "nodeType": "EmitStatement",
                  "src": "21423:38:7"
                }
              ]
            },
            "documentation": {
              "id": 2141,
              "nodeType": "StructuredDocumentation",
              "src": "20802:217:7",
              "text": " @dev Excludes an account from receiving reward.\n Emits a {ExcludeAccountFromReward} event.\n Requirements:\n - `account` is included in receiving reward."
            },
            "id": 2188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_excludeAccountFromReward",
            "nameLocation": "21033:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21067:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2188,
                  "src": "21059:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21059:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21058:17:7"
            },
            "returnParameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21085:0:7"
            },
            "scope": 3356,
            "src": "21024:444:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2254,
              "nodeType": "Block",
              "src": "21753:541:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 2195,
                          "name": "_isExcludedFromReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 942,
                          "src": "21771:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2197,
                        "indexExpression": {
                          "id": 2196,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2191,
                          "src": "21793:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21771:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420697320616c726561647920696e636c756465642e",
                        "id": 2198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21803:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36348d33b01da12a7b0d93a9e50855b6dbdd6712e33eb4c883fd43bc48236f04",
                          "typeString": "literal_string \"Account is already included.\""
                        },
                        "value": "Account is already included."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36348d33b01da12a7b0d93a9e50855b6dbdd6712e33eb4c883fd43bc48236f04",
                          "typeString": "literal_string \"Account is already included.\""
                        }
                      ],
                      "id": 2194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "21763:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21763:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2200,
                  "nodeType": "ExpressionStatement",
                  "src": "21763:71:7"
                },
                {
                  "body": {
                    "id": 2248,
                    "nodeType": "Block",
                    "src": "21902:339:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2212,
                              "name": "_excludedFromReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "21920:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2214,
                            "indexExpression": {
                              "id": 2213,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2202,
                              "src": "21940:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21920:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2215,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2191,
                            "src": "21946:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21920:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2247,
                        "nodeType": "IfStatement",
                        "src": "21916:315:7",
                        "trueBody": {
                          "id": 2246,
                          "nodeType": "Block",
                          "src": "21955:276:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 2226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2217,
                                    "name": "_excludedFromReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 945,
                                    "src": "21973:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2219,
                                  "indexExpression": {
                                    "id": 2218,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2202,
                                    "src": "21993:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21973:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2220,
                                    "name": "_excludedFromReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 945,
                                    "src": "21998:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2225,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2221,
                                        "name": "_excludedFromReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 945,
                                        "src": "22018:19:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2222,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "22018:26:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2223,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22047:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "22018:30:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "21998:51:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "21973:76:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2227,
                              "nodeType": "ExpressionStatement",
                              "src": "21973:76:7"
                            },
                            {
                              "expression": {
                                "id": 2232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2228,
                                    "name": "_tokenBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 934,
                                    "src": "22067:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2230,
                                  "indexExpression": {
                                    "id": 2229,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2191,
                                    "src": "22082:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22067:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 2231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22093:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22067:27:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2233,
                              "nodeType": "ExpressionStatement",
                              "src": "22067:27:7"
                            },
                            {
                              "expression": {
                                "id": 2238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2234,
                                    "name": "_isExcludedFromReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 942,
                                    "src": "22112:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 2236,
                                  "indexExpression": {
                                    "id": 2235,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2191,
                                    "src": "22134:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22112:30:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 2237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22145:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "22112:38:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2239,
                              "nodeType": "ExpressionStatement",
                              "src": "22112:38:7"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2240,
                                    "name": "_excludedFromReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 945,
                                    "src": "22168:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "22168:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer)"
                                  }
                                },
                                "id": 2243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22168:25:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2244,
                              "nodeType": "ExpressionStatement",
                              "src": "22168:25:7"
                            },
                            {
                              "id": 2245,
                              "nodeType": "Break",
                              "src": "22211:5:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2205,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "21865:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2206,
                        "name": "_excludedFromReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "21869:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "21869:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21865:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2249,
                  "initializationExpression": {
                    "assignments": [
                      2202
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2202,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "21858:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2249,
                        "src": "21850:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2201,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21850:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2204,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21862:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "21850:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "21897:3:7",
                      "subExpression": {
                        "id": 2209,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2202,
                        "src": "21897:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2211,
                    "nodeType": "ExpressionStatement",
                    "src": "21897:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "21845:396:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2251,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "22279:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2250,
                      "name": "IncludeAccountInReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "22256:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22256:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2253,
                  "nodeType": "EmitStatement",
                  "src": "22251:36:7"
                }
              ]
            },
            "documentation": {
              "id": 2189,
              "nodeType": "StructuredDocumentation",
              "src": "21474:215:7",
              "text": " @dev Includes an account from receiving reward.\n Emits a {IncludeAccountInReward} event.\n Requirements:\n - `account` is excluded in receiving reward."
            },
            "id": 2255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_includeAccountInReward",
            "nameLocation": "21703:23:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21735:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "21727:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21727:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21726:17:7"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21753:0:7"
            },
            "scope": 3356,
            "src": "21694:600:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2279,
              "nodeType": "Block",
              "src": "22551:177:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "22569:28:7",
                        "subExpression": {
                          "baseExpression": {
                            "id": 2262,
                            "name": "_isExcludedFromFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 938,
                            "src": "22570:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2264,
                          "indexExpression": {
                            "id": 2263,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "22589:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22570:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420697320616c7265616479206578636c756465642e",
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22599:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bf0921c3420ac0b27a948180e60c76483c847be54f2410a0cc3e62d8822c372",
                          "typeString": "literal_string \"Account is already excluded.\""
                        },
                        "value": "Account is already excluded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bf0921c3420ac0b27a948180e60c76483c847be54f2410a0cc3e62d8822c372",
                          "typeString": "literal_string \"Account is already excluded.\""
                        }
                      ],
                      "id": 2261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "22561:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22561:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2268,
                  "nodeType": "ExpressionStatement",
                  "src": "22561:69:7"
                },
                {
                  "expression": {
                    "id": 2273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2269,
                        "name": "_isExcludedFromFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "22641:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2271,
                      "indexExpression": {
                        "id": 2270,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2258,
                        "src": "22660:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22641:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22671:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "22641:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2274,
                  "nodeType": "ExpressionStatement",
                  "src": "22641:34:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2276,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2258,
                        "src": "22713:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2275,
                      "name": "ExcludeAccountFromFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "22691:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22691:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2278,
                  "nodeType": "EmitStatement",
                  "src": "22686:35:7"
                }
              ]
            },
            "documentation": {
              "id": 2256,
              "nodeType": "StructuredDocumentation",
              "src": "22301:188:7",
              "text": " @dev Excludes an account from fee.\n Emits a {ExcludeAccountFromFee} event.\n Requirements:\n - `account` is included in fee."
            },
            "id": 2280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "excludeAccountFromFee",
            "nameLocation": "22503:21:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2258,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "22533:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2280,
                  "src": "22525:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22525:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22524:17:7"
            },
            "returnParameters": {
              "id": 2260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22551:0:7"
            },
            "scope": 3356,
            "src": "22494:234:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2303,
              "nodeType": "Block",
              "src": "22982:183:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 2287,
                          "name": "_isExcludedFromFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "23000:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2289,
                        "indexExpression": {
                          "id": 2288,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2283,
                          "src": "23019:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23000:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420697320616c726561647920696e636c756465642e",
                        "id": 2290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23029:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36348d33b01da12a7b0d93a9e50855b6dbdd6712e33eb4c883fd43bc48236f04",
                          "typeString": "literal_string \"Account is already included.\""
                        },
                        "value": "Account is already included."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36348d33b01da12a7b0d93a9e50855b6dbdd6712e33eb4c883fd43bc48236f04",
                          "typeString": "literal_string \"Account is already included.\""
                        }
                      ],
                      "id": 2286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "22992:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22992:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2292,
                  "nodeType": "ExpressionStatement",
                  "src": "22992:68:7"
                },
                {
                  "expression": {
                    "id": 2297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2293,
                        "name": "_isExcludedFromFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "23071:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2295,
                      "indexExpression": {
                        "id": 2294,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "23090:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23071:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23101:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "23071:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2298,
                  "nodeType": "ExpressionStatement",
                  "src": "23071:35:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2300,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2283,
                        "src": "23150:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2299,
                      "name": "IncludeAccountInFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "23130:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23130:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2302,
                  "nodeType": "EmitStatement",
                  "src": "23125:33:7"
                }
              ]
            },
            "documentation": {
              "id": 2281,
              "nodeType": "StructuredDocumentation",
              "src": "22734:188:7",
              "text": " @dev Includes an account from fee.\n Emits a {IncludeAccountFromFee} event.\n Requirements:\n - `account` is excluded in fee."
            },
            "id": 2304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "includeAccountInFee",
            "nameLocation": "22936:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2283,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "22964:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2304,
                  "src": "22956:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22956:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22955:17:7"
            },
            "returnParameters": {
              "id": 2285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22982:0:7"
            },
            "scope": 3356,
            "src": "22927:238:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2366,
              "nodeType": "Block",
              "src": "23385:601:7",
              "statements": [
                {
                  "assignments": [
                    2311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2311,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "23403:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "23395:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2310,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23395:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2314,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2312,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "23412:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23412:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23395:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2317,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "23551:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2316,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1394,
                            "src": "23541:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23541:17:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2319,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2307,
                          "src": "23562:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "23541:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063616c6c6572206d75737420686176652062616c616e6365203e3d20616d6f756e742e",
                        "id": 2321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23570:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d4511d5d15f5a76490625be24c05f984ee3f7a822fbe5bc2b1f3ed6116dc6be",
                          "typeString": "literal_string \"The caller must have balance >= amount.\""
                        },
                        "value": "The caller must have balance >= amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d4511d5d15f5a76490625be24c05f984ee3f7a822fbe5bc2b1f3ed6116dc6be",
                          "typeString": "literal_string \"The caller must have balance >= amount.\""
                        }
                      ],
                      "id": 2315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "23533:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23533:79:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "23533:79:7"
                },
                {
                  "assignments": [
                    2326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2326,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "23646:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2366,
                      "src": "23622:30:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                        "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                      },
                      "typeName": {
                        "id": 2325,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2324,
                          "name": "ValuesFromAmount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1040,
                          "src": "23622:16:7"
                        },
                        "referencedDeclaration": 1040,
                        "src": "23622:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2331,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2328,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "23666:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23674:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2327,
                      "name": "_getValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2656,
                      "src": "23655:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bool_$returns$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$",
                        "typeString": "function (uint256,bool) view returns (struct ERC20Deflationary.ValuesFromAmount memory)"
                      }
                    },
                    "id": 2330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23655:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23622:58:7"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 2332,
                      "name": "_isExcludedFromReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "23694:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2334,
                    "indexExpression": {
                      "id": 2333,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2311,
                      "src": "23716:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23694:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2343,
                  "nodeType": "IfStatement",
                  "src": "23690:99:7",
                  "trueBody": {
                    "id": 2342,
                    "nodeType": "Block",
                    "src": "23725:64:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2335,
                              "name": "_tokenBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "23739:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2337,
                            "indexExpression": {
                              "id": 2336,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "23754:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23739:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2338,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "23765:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2339,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1021,
                            "src": "23765:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23739:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2341,
                        "nodeType": "ExpressionStatement",
                        "src": "23739:39:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2344,
                        "name": "_reflectionBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "23798:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2346,
                      "indexExpression": {
                        "id": 2345,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "23818:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23798:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2347,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "23829:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                        }
                      },
                      "id": 2348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1031,
                      "src": "23829:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23798:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2350,
                  "nodeType": "ExpressionStatement",
                  "src": "23798:45:7"
                },
                {
                  "expression": {
                    "id": 2356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2351,
                      "name": "_reflectionTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "23862:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2352,
                        "name": "_reflectionTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "23881:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2353,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2326,
                          "src": "23900:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1031,
                        "src": "23900:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "23881:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23862:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2357,
                  "nodeType": "ExpressionStatement",
                  "src": "23862:52:7"
                },
                {
                  "expression": {
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2358,
                      "name": "_totalRewarded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "23924:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2359,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2307,
                      "src": "23942:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23924:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2361,
                  "nodeType": "ExpressionStatement",
                  "src": "23924:24:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2363,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2307,
                        "src": "23972:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2362,
                      "name": "Airdrop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "23964:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23964:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2365,
                  "nodeType": "EmitStatement",
                  "src": "23959:20:7"
                }
              ]
            },
            "documentation": {
              "id": 2305,
              "nodeType": "StructuredDocumentation",
              "src": "23171:169:7",
              "text": " @dev Airdrop tokens to all holders that are included from reward. \n  Requirements:\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "97dc4a13",
            "id": 2367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "airdrop",
            "nameLocation": "23354:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2307,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "23370:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "23362:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23362:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23361:16:7"
            },
            "returnParameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23385:0:7"
            },
            "scope": 3356,
            "src": "23345:641:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2395,
              "nodeType": "Block",
              "src": "24233:202:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2378,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2370,
                          "src": "24251:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2379,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 975,
                          "src": "24261:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24251:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
                        "id": 2381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24275:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
                          "typeString": "literal_string \"Amount must be less than supply\""
                        },
                        "value": "Amount must be less than supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
                          "typeString": "literal_string \"Amount must be less than supply\""
                        }
                      ],
                      "id": 2377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "24243:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24243:66:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2383,
                  "nodeType": "ExpressionStatement",
                  "src": "24243:66:7"
                },
                {
                  "assignments": [
                    2386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2386,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "24343:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2395,
                      "src": "24319:30:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                        "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                      },
                      "typeName": {
                        "id": 2385,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2384,
                          "name": "ValuesFromAmount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1040,
                          "src": "24319:16:7"
                        },
                        "referencedDeclaration": 1040,
                        "src": "24319:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2388,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2370,
                        "src": "24363:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2389,
                        "name": "deductTransferFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "24371:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2387,
                      "name": "_getValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2656,
                      "src": "24352:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bool_$returns$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$",
                        "typeString": "function (uint256,bool) view returns (struct ERC20Deflationary.ValuesFromAmount memory)"
                      }
                    },
                    "id": 2390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24352:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24319:70:7"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 2392,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2386,
                      "src": "24406:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                        "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                      }
                    },
                    "id": 2393,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rTransferAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1039,
                    "src": "24406:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2376,
                  "id": 2394,
                  "nodeType": "Return",
                  "src": "24399:29:7"
                }
              ]
            },
            "documentation": {
              "id": 2368,
              "nodeType": "StructuredDocumentation",
              "src": "23992:136:7",
              "text": " @dev Returns the reflected amount of a token.\n  Requirements:\n - `amount` must be less than total supply."
            },
            "id": 2396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reflectionFromToken",
            "nameLocation": "24142:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "24170:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2396,
                  "src": "24162:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24162:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "deductTransferFee",
                  "nameLocation": "24183:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2396,
                  "src": "24178:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24178:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24161:40:7"
            },
            "returnParameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2396,
                  "src": "24224:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24224:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24223:9:7"
            },
            "scope": 3356,
            "src": "24133:302:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2420,
              "nodeType": "Block",
              "src": "24667:180:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2405,
                          "name": "rAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2399,
                          "src": "24685:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2406,
                          "name": "_reflectionTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 979,
                          "src": "24696:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24685:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24714:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
                          "typeString": "literal_string \"Amount must be less than total reflections\""
                        },
                        "value": "Amount must be less than total reflections"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
                          "typeString": "literal_string \"Amount must be less than total reflections\""
                        }
                      ],
                      "id": 2404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "24677:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24677:82:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "24677:82:7"
                },
                {
                  "assignments": [
                    2412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2412,
                      "mutability": "mutable",
                      "name": "currentRate",
                      "nameLocation": "24777:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2420,
                      "src": "24769:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24769:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2415,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2413,
                      "name": "_getRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2849,
                      "src": "24792:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24792:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24769:33:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2416,
                      "name": "rAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2399,
                      "src": "24819:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2417,
                      "name": "currentRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "24829:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24819:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2403,
                  "id": 2419,
                  "nodeType": "Return",
                  "src": "24812:28:7"
                }
              ]
            },
            "documentation": {
              "id": 2397,
              "nodeType": "StructuredDocumentation",
              "src": "24441:144:7",
              "text": " @dev Used to figure out the balance after reflection.\n Requirements:\n - `rAmount` must be less than reflectTotal."
            },
            "id": 2421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFromReflection",
            "nameLocation": "24599:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2399,
                  "mutability": "mutable",
                  "name": "rAmount",
                  "nameLocation": "24627:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "24619:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24619:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24618:17:7"
            },
            "returnParameters": {
              "id": 2403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "24658:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24658:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24657:9:7"
            },
            "scope": 3356,
            "src": "24590:257:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2495,
              "nodeType": "Block",
              "src": "25251:911:7",
              "statements": [
                {
                  "assignments": [
                    2430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2430,
                      "mutability": "mutable",
                      "name": "tokensToSwap",
                      "nameLocation": "25324:12:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2495,
                      "src": "25316:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2429,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25316:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2434,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2431,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "25339:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 2432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25357:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "25339:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25316:42:7"
                },
                {
                  "assignments": [
                    2436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2436,
                      "mutability": "mutable",
                      "name": "tokensAddToLiquidity",
                      "nameLocation": "25376:20:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2495,
                      "src": "25368:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25368:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2440,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2437,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "25399:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2438,
                      "name": "tokensToSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2430,
                      "src": "25417:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25399:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25368:61:7"
                },
                {
                  "assignments": [
                    2442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2442,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "25491:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2495,
                      "src": "25483:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2441,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25483:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2448,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2445,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "25516:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                            "typeString": "contract ERC20Deflationary"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                            "typeString": "contract ERC20Deflationary"
                          }
                        ],
                        "id": 2444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25508:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25508:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25508:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "25508:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25483:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2450,
                        "name": "tokensToSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "25600:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2449,
                      "name": "swapTokensForEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "25583:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25583:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2452,
                  "nodeType": "ExpressionStatement",
                  "src": "25583:30:7"
                },
                {
                  "assignments": [
                    2454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2454,
                      "mutability": "mutable",
                      "name": "ethAddToLiquify",
                      "nameLocation": "25705:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2495,
                      "src": "25697:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2453,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25697:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2462,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2457,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "25731:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          ],
                          "id": 2456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25723:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2455,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25723:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25723:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "25723:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2460,
                      "name": "initialBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2442,
                      "src": "25747:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25723:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25697:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2464,
                        "name": "ethAddToLiquify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2454,
                        "src": "25870:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2465,
                        "name": "tokensAddToLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "25887:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2463,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2603,
                      "src": "25857:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25857:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2467,
                  "nodeType": "ExpressionStatement",
                  "src": "25857:51:7"
                },
                {
                  "expression": {
                    "id": 2476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2468,
                      "name": "_totalETHLockedInLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 987,
                      "src": "25919:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2471,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "25957:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                "typeString": "contract ERC20Deflationary"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                "typeString": "contract ERC20Deflationary"
                              }
                            ],
                            "id": 2470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25949:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2469,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25949:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25949:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "25949:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2474,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2442,
                        "src": "25973:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "25949:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25919:68:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2477,
                  "nodeType": "ExpressionStatement",
                  "src": "25919:68:7"
                },
                {
                  "expression": {
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2478,
                      "name": "_totalTokensLockedInLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "25997:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2479,
                        "name": "contractBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2424,
                        "src": "26030:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2483,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "26066:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                  "typeString": "contract ERC20Deflationary"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                                  "typeString": "contract ERC20Deflationary"
                                }
                              ],
                              "id": 2482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26058:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2481,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26058:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26058:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2480,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "26048:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 2485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26048:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "26030:42:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25997:75:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2488,
                  "nodeType": "ExpressionStatement",
                  "src": "25997:75:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2490,
                        "name": "tokensToSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "26103:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2491,
                        "name": "ethAddToLiquify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2454,
                        "src": "26117:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2492,
                        "name": "tokensAddToLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "26134:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2489,
                      "name": "SwapAndLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1090,
                      "src": "26088:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 2493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26088:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2494,
                  "nodeType": "EmitStatement",
                  "src": "26083:72:7"
                }
              ]
            },
            "documentation": {
              "id": 2422,
              "nodeType": "StructuredDocumentation",
              "src": "24853:324:7",
              "text": " @dev Swap half of contract's token balance for ETH,\n and pair it up with the other half to add to the\n liquidity pool.\n Emits {SwapAndLiquify} event indicating the amount of tokens swapped to eth,\n the amount of ETH added to the LP, and the amount of tokens added to the LP."
            },
            "id": 2496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2427,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2426,
                  "name": "lockTheSwap",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1019,
                  "src": "25239:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "25239:11:7"
              }
            ],
            "name": "swapAndLiquify",
            "nameLocation": "25191:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "mutability": "mutable",
                  "name": "contractBalance",
                  "nameLocation": "25214:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "25206:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25206:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25205:25:7"
            },
            "returnParameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25251:0:7"
            },
            "scope": 3356,
            "src": "25182:980:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2560,
              "nodeType": "Block",
              "src": "26362:580:7",
              "statements": [
                {
                  "assignments": [
                    2506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2506,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "26448:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2560,
                      "src": "26431:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26431:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2505,
                        "nodeType": "ArrayTypeName",
                        "src": "26431:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2512,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26469:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "26455:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26459:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2508,
                        "nodeType": "ArrayTypeName",
                        "src": "26459:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26455:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26431:40:7"
                },
                {
                  "expression": {
                    "id": 2520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2513,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "26481:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2515,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26486:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26481:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2518,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "26499:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                            "typeString": "contract ERC20Deflationary"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                            "typeString": "contract ERC20Deflationary"
                          }
                        ],
                        "id": 2517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26491:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2516,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26491:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26491:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26481:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2521,
                  "nodeType": "ExpressionStatement",
                  "src": "26481:23:7"
                },
                {
                  "expression": {
                    "id": 2528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2522,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "26514:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2524,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26519:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26514:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2525,
                          "name": "_uniswapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "26524:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 2526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 527,
                        "src": "26524:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 2527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26524:23:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26514:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2529,
                  "nodeType": "ExpressionStatement",
                  "src": "26514:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2533,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "26575:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          ],
                          "id": 2532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26567:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2531,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26567:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26567:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2537,
                            "name": "_uniswapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "26590:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 2536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26582:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2535,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26582:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26582:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2539,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "26609:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2530,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "26558:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26558:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2541,
                  "nodeType": "ExpressionStatement",
                  "src": "26558:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2545,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "26739:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26760:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2547,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "26776:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2550,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "26803:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          ],
                          "id": 2549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26795:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26795:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26795:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2552,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "26894:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "26894:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_60000_by_1",
                            "typeString": "int_const 60000"
                          },
                          "id": 2556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3630",
                            "id": 2554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26912:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26917:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "26912:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60000_by_1",
                            "typeString": "int_const 60000"
                          }
                        },
                        "src": "26894:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2542,
                        "name": "_uniswapV2Router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "26658:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 2544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "26658:67:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 2558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26658:277:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2559,
                  "nodeType": "ExpressionStatement",
                  "src": "26658:277:7"
                }
              ]
            },
            "documentation": {
              "id": 2497,
              "nodeType": "StructuredDocumentation",
              "src": "26169:138:7",
              "text": " @dev Swap `amount` tokens for ETH.\n Emits {Transfer} event. From this contract to the token and WETH Pair."
            },
            "id": 2561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokensForEth",
            "nameLocation": "26321:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "26346:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2561,
                  "src": "26338:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26338:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26337:16:7"
            },
            "returnParameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26362:0:7"
            },
            "scope": 3356,
            "src": "26312:630:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2602,
              "nodeType": "Block",
              "src": "27445:569:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2572,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "27472:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          ],
                          "id": 2571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27464:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2570,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27464:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27464:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2576,
                            "name": "_uniswapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "27487:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 2575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27479:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2574,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27479:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27479:25:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2578,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "27506:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2569,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "27455:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27455:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "27455:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2588,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "27780:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Deflationary_$3356",
                              "typeString": "contract ERC20Deflationary"
                            }
                          ],
                          "id": 2587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "27772:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2586,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "27772:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27772:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2590,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "27800:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27826:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27868:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2593,
                        "name": "burnAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "27910:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2594,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "27970:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "27970:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_60000_by_1",
                            "typeString": "int_const 60000"
                          },
                          "id": 2598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3630",
                            "id": 2596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27988:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "60"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27993:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "27988:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60000_by_1",
                            "typeString": "int_const 60000"
                          }
                        },
                        "src": "27970:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2581,
                          "name": "_uniswapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "27708:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$911",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidityETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 573,
                        "src": "27708:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 2585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2584,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2564,
                          "src": "27748:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "27708:50:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27708:299:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "27708:299:7"
                }
              ]
            },
            "documentation": {
              "id": 2562,
              "nodeType": "StructuredDocumentation",
              "src": "26952:418:7",
              "text": " @dev Add `ethAmount` of ETH and `tokenAmount` of tokens to the LP.\n Depends on the current rate for the pair between this token and WETH,\n `ethAmount` and `tokenAmount` might not match perfectly. \n Dust(leftover) ETH or token will be refunded to this contract\n (usually very small quantity).\n Emits {Transfer} event. From this contract to the token and WETH Pai."
            },
            "id": 2603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "27384:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2564,
                  "mutability": "mutable",
                  "name": "ethAmount",
                  "nameLocation": "27405:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2603,
                  "src": "27397:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27397:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2566,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "27424:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2603,
                  "src": "27416:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27416:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27396:40:7"
            },
            "returnParameters": {
              "id": 2568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27445:0:7"
            },
            "scope": 3356,
            "src": "27375:639:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2621,
              "nodeType": "Block",
              "src": "28271:200:7",
              "statements": [
                {
                  "expression": {
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2611,
                      "name": "_reflectionTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "28378:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2612,
                        "name": "_reflectionTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "28397:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2613,
                        "name": "rRewardFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2606,
                        "src": "28416:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "28397:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28378:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2616,
                  "nodeType": "ExpressionStatement",
                  "src": "28378:48:7"
                },
                {
                  "expression": {
                    "id": 2619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2617,
                      "name": "_totalRewarded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "28436:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2618,
                      "name": "tRewardFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2608,
                      "src": "28454:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28436:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2620,
                  "nodeType": "ExpressionStatement",
                  "src": "28436:28:7"
                }
              ]
            },
            "documentation": {
              "id": 2604,
              "nodeType": "StructuredDocumentation",
              "src": "28020:174:7",
              "text": " @dev Distribute the `tRewardFee` tokens to all holders that are included in receiving reward.\n amount received is based on how many token one owns.  "
            },
            "id": 2622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_distributeFee",
            "nameLocation": "28208:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2606,
                  "mutability": "mutable",
                  "name": "rRewardFee",
                  "nameLocation": "28231:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2622,
                  "src": "28223:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28223:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2608,
                  "mutability": "mutable",
                  "name": "tRewardFee",
                  "nameLocation": "28251:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2622,
                  "src": "28243:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28243:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28222:40:7"
            },
            "returnParameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28271:0:7"
            },
            "scope": 3356,
            "src": "28199:272:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2655,
              "nodeType": "Block",
              "src": "28827:198:7",
              "statements": [
                {
                  "assignments": [
                    2635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2635,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "28861:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2655,
                      "src": "28837:30:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                        "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                      },
                      "typeName": {
                        "id": 2634,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2633,
                          "name": "ValuesFromAmount",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1040,
                          "src": "28837:16:7"
                        },
                        "referencedDeclaration": 1040,
                        "src": "28837:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2636,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28837:30:7"
                },
                {
                  "expression": {
                    "id": 2641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2637,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2635,
                        "src": "28877:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                        }
                      },
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1021,
                      "src": "28877:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2640,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "28893:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28877:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2642,
                  "nodeType": "ExpressionStatement",
                  "src": "28877:22:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2644,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2635,
                        "src": "28921:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                        }
                      },
                      {
                        "id": 2645,
                        "name": "deductTransferFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "28929:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2643,
                      "name": "_getTValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2726,
                      "src": "28909:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct ERC20Deflationary.ValuesFromAmount memory,bool) view"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28909:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "28909:38:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2649,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2635,
                        "src": "28969:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                        }
                      },
                      {
                        "id": 2650,
                        "name": "deductTransferFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "28977:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2648,
                      "name": "_getRValues",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2813,
                      "src": "28957:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ValuesFromAmount_$1040_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (struct ERC20Deflationary.ValuesFromAmount memory,bool) view"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28957:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "28957:38:7"
                },
                {
                  "expression": {
                    "id": 2653,
                    "name": "values",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2635,
                    "src": "29012:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                    }
                  },
                  "functionReturnParameters": 2632,
                  "id": 2654,
                  "nodeType": "Return",
                  "src": "29005:13:7"
                }
              ]
            },
            "documentation": {
              "id": 2623,
              "nodeType": "StructuredDocumentation",
              "src": "28481:234:7",
              "text": " @dev Returns fees and transfer amount in both tokens and reflections.\n tXXXX stands for tokenXXXX\n rXXXX stands for reflectionXXXX\n More details can be found at comments for ValuesForAmount Struct."
            },
            "id": 2656,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getValues",
            "nameLocation": "28729:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2625,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "28748:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2656,
                  "src": "28740:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28740:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2627,
                  "mutability": "mutable",
                  "name": "deductTransferFee",
                  "nameLocation": "28761:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2656,
                  "src": "28756:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28756:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28739:40:7"
            },
            "returnParameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2631,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2656,
                  "src": "28802:23:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 2630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2629,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "28802:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "28802:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28801:25:7"
            },
            "scope": 3356,
            "src": "28720:305:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2725,
              "nodeType": "Block",
              "src": "29309:601:7",
              "statements": [
                {
                  "condition": {
                    "id": 2665,
                    "name": "deductTransferFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2662,
                    "src": "29332:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2723,
                    "nodeType": "Block",
                    "src": "29420:475:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2674,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2660,
                              "src": "29463:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2676,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tBurnFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1023,
                            "src": "29463:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2678,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2660,
                                  "src": "29495:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                    "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                  }
                                },
                                "id": 2679,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1021,
                                "src": "29495:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2680,
                                "name": "_taxBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "29510:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "id": 2681,
                                "name": "_taxBurnDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 961,
                                "src": "29520:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2677,
                              "name": "_calculateTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2960,
                              "src": "29481:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
                              }
                            },
                            "id": 2682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29481:56:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29463:74:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2684,
                        "nodeType": "ExpressionStatement",
                        "src": "29463:74:7"
                      },
                      {
                        "expression": {
                          "id": 2694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2685,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2660,
                              "src": "29551:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2687,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tRewardFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1025,
                            "src": "29551:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2689,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2660,
                                  "src": "29585:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                    "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                  }
                                },
                                "id": 2690,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1021,
                                "src": "29585:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2691,
                                "name": "_taxReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 969,
                                "src": "29600:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "id": 2692,
                                "name": "_taxRewardDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 963,
                                "src": "29612:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2688,
                              "name": "_calculateTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2960,
                              "src": "29571:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
                              }
                            },
                            "id": 2693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29571:60:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29551:80:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2695,
                        "nodeType": "ExpressionStatement",
                        "src": "29551:80:7"
                      },
                      {
                        "expression": {
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2696,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2660,
                              "src": "29645:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2698,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tLiquifyFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1027,
                            "src": "29645:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2700,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2660,
                                  "src": "29680:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                    "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                  }
                                },
                                "id": 2701,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1021,
                                "src": "29680:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2702,
                                "name": "_taxLiquify",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "29695:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "id": 2703,
                                "name": "_taxLiquifyDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 965,
                                "src": "29708:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2699,
                              "name": "_calculateTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2960,
                              "src": "29666:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
                              }
                            },
                            "id": 2704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29666:62:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29645:83:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2706,
                        "nodeType": "ExpressionStatement",
                        "src": "29645:83:7"
                      },
                      {
                        "expression": {
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2707,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2660,
                              "src": "29787:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2709,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tTransferAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1029,
                            "src": "29787:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2710,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2660,
                                    "src": "29812:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  },
                                  "id": 2711,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1021,
                                  "src": "29812:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2712,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2660,
                                    "src": "29828:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  },
                                  "id": 2713,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tBurnFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1023,
                                  "src": "29828:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "29812:31:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 2715,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2660,
                                  "src": "29846:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                    "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                  }
                                },
                                "id": 2716,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tRewardFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1025,
                                "src": "29846:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "29812:51:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 2718,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2660,
                                "src": "29866:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 2719,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tLiquifyFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1027,
                              "src": "29866:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "29812:72:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29787:97:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2722,
                        "nodeType": "ExpressionStatement",
                        "src": "29787:97:7"
                      }
                    ]
                  },
                  "id": 2724,
                  "nodeType": "IfStatement",
                  "src": "29328:567:7",
                  "trueBody": {
                    "id": 2673,
                    "nodeType": "Block",
                    "src": "29351:63:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2666,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2660,
                              "src": "29365:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tTransferAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1029,
                            "src": "29365:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2669,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2660,
                              "src": "29390:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2670,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1021,
                            "src": "29390:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29365:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2672,
                        "nodeType": "ExpressionStatement",
                        "src": "29365:38:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2657,
              "nodeType": "StructuredDocumentation",
              "src": "29031:183:7",
              "text": " @dev Adds fees and transfer amount in tokens to `values`.\n tXXXX stands for tokenXXXX\n More details can be found at comments for ValuesForAmount Struct."
            },
            "id": 2726,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTValues",
            "nameLocation": "29228:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2660,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "29264:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2726,
                  "src": "29240:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 2659,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2658,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "29240:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "29240:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2662,
                  "mutability": "mutable",
                  "name": "deductTransferFee",
                  "nameLocation": "29277:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2726,
                  "src": "29272:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2661,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "29272:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29239:56:7"
            },
            "returnParameters": {
              "id": 2664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29309:0:7"
            },
            "scope": 3356,
            "src": "29219:691:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2812,
              "nodeType": "Block",
              "src": "30203:590:7",
              "statements": [
                {
                  "assignments": [
                    2736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2736,
                      "mutability": "mutable",
                      "name": "currentRate",
                      "nameLocation": "30221:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2812,
                      "src": "30213:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30213:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2739,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2737,
                      "name": "_getRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2849,
                      "src": "30235:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30235:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30213:32:7"
                },
                {
                  "expression": {
                    "id": 2747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2740,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2730,
                        "src": "30256:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                          "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                        }
                      },
                      "id": 2742,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1031,
                      "src": "30256:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2743,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2730,
                          "src": "30273:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                            "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                          }
                        },
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1021,
                        "src": "30273:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2745,
                        "name": "currentRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2736,
                        "src": "30289:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "30273:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30256:44:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2748,
                  "nodeType": "ExpressionStatement",
                  "src": "30256:44:7"
                },
                {
                  "condition": {
                    "id": 2749,
                    "name": "deductTransferFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2732,
                    "src": "30315:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2810,
                    "nodeType": "Block",
                    "src": "30404:374:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2758,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2730,
                              "src": "30418:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2760,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1031,
                            "src": "30418:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2761,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2730,
                                "src": "30435:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1021,
                              "src": "30435:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2763,
                              "name": "currentRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2736,
                              "src": "30451:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30435:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30418:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2766,
                        "nodeType": "ExpressionStatement",
                        "src": "30418:44:7"
                      },
                      {
                        "expression": {
                          "id": 2774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2767,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2730,
                              "src": "30476:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2769,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rBurnFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1033,
                            "src": "30476:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2770,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2730,
                                "src": "30494:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 2771,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tBurnFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1023,
                              "src": "30494:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2772,
                              "name": "currentRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2736,
                              "src": "30512:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30494:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30476:47:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2775,
                        "nodeType": "ExpressionStatement",
                        "src": "30476:47:7"
                      },
                      {
                        "expression": {
                          "id": 2783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2776,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2730,
                              "src": "30537:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2778,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rRewardFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1035,
                            "src": "30537:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2779,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2730,
                                "src": "30557:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 2780,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tRewardFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1025,
                              "src": "30557:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2781,
                              "name": "currentRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2736,
                              "src": "30577:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30557:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30537:51:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2784,
                        "nodeType": "ExpressionStatement",
                        "src": "30537:51:7"
                      },
                      {
                        "expression": {
                          "id": 2792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2785,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2730,
                              "src": "30602:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2787,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rLiquifyFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1037,
                            "src": "30602:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2788,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2730,
                                "src": "30623:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 2789,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tLiquifyFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1027,
                              "src": "30623:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2790,
                              "name": "currentRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2736,
                              "src": "30644:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30623:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30602:53:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2793,
                        "nodeType": "ExpressionStatement",
                        "src": "30602:53:7"
                      },
                      {
                        "expression": {
                          "id": 2808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2794,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2730,
                              "src": "30669:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2796,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rTransferAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1039,
                            "src": "30669:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2797,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2730,
                                    "src": "30694:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  },
                                  "id": 2798,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1031,
                                  "src": "30694:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2799,
                                    "name": "values",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2730,
                                    "src": "30711:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                      "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                    }
                                  },
                                  "id": 2800,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rBurnFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1033,
                                  "src": "30711:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "30694:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 2802,
                                  "name": "values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2730,
                                  "src": "30729:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                    "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                  }
                                },
                                "id": 2803,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rRewardFee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1035,
                                "src": "30729:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "30694:52:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 2805,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2730,
                                "src": "30749:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                  "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                                }
                              },
                              "id": 2806,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rLiquifyFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1037,
                              "src": "30749:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30694:73:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30669:98:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2809,
                        "nodeType": "ExpressionStatement",
                        "src": "30669:98:7"
                      }
                    ]
                  },
                  "id": 2811,
                  "nodeType": "IfStatement",
                  "src": "30311:467:7",
                  "trueBody": {
                    "id": 2757,
                    "nodeType": "Block",
                    "src": "30334:64:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 2750,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2730,
                              "src": "30348:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2752,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rTransferAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1039,
                            "src": "30348:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2753,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2730,
                              "src": "30373:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                                "typeString": "struct ERC20Deflationary.ValuesFromAmount memory"
                              }
                            },
                            "id": 2754,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1031,
                            "src": "30373:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30348:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2756,
                        "nodeType": "ExpressionStatement",
                        "src": "30348:39:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2727,
              "nodeType": "StructuredDocumentation",
              "src": "29916:192:7",
              "text": " @dev Adds fees and transfer amount in reflection to `values`.\n rXXXX stands for reflectionXXXX\n More details can be found at comments for ValuesForAmount Struct."
            },
            "id": 2813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRValues",
            "nameLocation": "30122:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2730,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "30158:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2813,
                  "src": "30134:30:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_memory_ptr",
                    "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                  },
                  "typeName": {
                    "id": 2729,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2728,
                      "name": "ValuesFromAmount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1040,
                      "src": "30134:16:7"
                    },
                    "referencedDeclaration": 1040,
                    "src": "30134:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ValuesFromAmount_$1040_storage_ptr",
                      "typeString": "struct ERC20Deflationary.ValuesFromAmount"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2732,
                  "mutability": "mutable",
                  "name": "deductTransferFee",
                  "nameLocation": "30171:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2813,
                  "src": "30166:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2731,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "30166:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30133:56:7"
            },
            "returnParameters": {
              "id": 2734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30203:0:7"
            },
            "scope": 3356,
            "src": "30113:680:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2830,
              "nodeType": "Block",
              "src": "30927:86:7",
              "statements": [
                {
                  "assignments": [
                    2822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2822,
                      "mutability": "mutable",
                      "name": "currentRate",
                      "nameLocation": "30945:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2830,
                      "src": "30937:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2821,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30937:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2825,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2823,
                      "name": "_getRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2849,
                      "src": "30959:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30959:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30937:32:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2826,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2816,
                      "src": "30986:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2827,
                      "name": "currentRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2822,
                      "src": "30995:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30986:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2820,
                  "id": 2829,
                  "nodeType": "Return",
                  "src": "30979:27:7"
                }
              ]
            },
            "documentation": {
              "id": 2814,
              "nodeType": "StructuredDocumentation",
              "src": "30799:55:7",
              "text": " @dev Returns `amount` in reflection."
            },
            "id": 2831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRAmount",
            "nameLocation": "30868:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2816,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "30888:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "30880:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30880:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30879:16:7"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "30918:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30918:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30917:9:7"
            },
            "scope": 3356,
            "src": "30859:154:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2848,
              "nodeType": "Block",
              "src": "31134:107:7",
              "statements": [
                {
                  "assignments": [
                    2838,
                    2840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2838,
                      "mutability": "mutable",
                      "name": "rSupply",
                      "nameLocation": "31153:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2848,
                      "src": "31145:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2837,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31145:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2840,
                      "mutability": "mutable",
                      "name": "tSupply",
                      "nameLocation": "31170:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2848,
                      "src": "31162:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2839,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31162:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2843,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2841,
                      "name": "_getCurrentSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2933,
                      "src": "31181:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256)"
                      }
                    },
                    "id": 2842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31181:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31144:56:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2844,
                      "name": "rSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2838,
                      "src": "31217:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2845,
                      "name": "tSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2840,
                      "src": "31227:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31217:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2836,
                  "id": 2847,
                  "nodeType": "Return",
                  "src": "31210:24:7"
                }
              ]
            },
            "documentation": {
              "id": 2832,
              "nodeType": "StructuredDocumentation",
              "src": "31019:60:7",
              "text": " @dev Returns the current reflection rate."
            },
            "id": 2849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRate",
            "nameLocation": "31093:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31101:2:7"
            },
            "returnParameters": {
              "id": 2836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "31125:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31125:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31124:9:7"
            },
            "scope": 3356,
            "src": "31084:157:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2932,
              "nodeType": "Block",
              "src": "31399:618:7",
              "statements": [
                {
                  "assignments": [
                    2858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2858,
                      "mutability": "mutable",
                      "name": "rSupply",
                      "nameLocation": "31417:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2932,
                      "src": "31409:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31409:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2860,
                  "initialValue": {
                    "id": 2859,
                    "name": "_reflectionTotal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 979,
                    "src": "31427:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31409:34:7"
                },
                {
                  "assignments": [
                    2862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2862,
                      "mutability": "mutable",
                      "name": "tSupply",
                      "nameLocation": "31461:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2932,
                      "src": "31453:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2861,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31453:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2864,
                  "initialValue": {
                    "id": 2863,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 975,
                    "src": "31471:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31453:30:7"
                },
                {
                  "body": {
                    "id": 2916,
                    "nodeType": "Block",
                    "src": "31556:324:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2876,
                                "name": "_reflectionBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 930,
                                "src": "31574:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2880,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2877,
                                  "name": "_excludedFromReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 945,
                                  "src": "31594:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2879,
                                "indexExpression": {
                                  "id": 2878,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2866,
                                  "src": "31614:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "31594:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31574:43:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 2881,
                              "name": "rSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2858,
                              "src": "31620:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "31574:53:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2883,
                                "name": "_tokenBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 934,
                                "src": "31631:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2887,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2884,
                                  "name": "_excludedFromReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 945,
                                  "src": "31646:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2886,
                                "indexExpression": {
                                  "id": 2885,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2866,
                                  "src": "31666:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "31646:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31631:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 2888,
                              "name": "tSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2862,
                              "src": "31672:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "31631:48:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "31574:105:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2895,
                        "nodeType": "IfStatement",
                        "src": "31570:150:7",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "id": 2891,
                                "name": "_reflectionTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 979,
                                "src": "31689:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2892,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 975,
                                "src": "31707:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2893,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "31688:32:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "functionReturnParameters": 2856,
                          "id": 2894,
                          "nodeType": "Return",
                          "src": "31681:39:7"
                        }
                      },
                      {
                        "expression": {
                          "id": 2904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2896,
                            "name": "rSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2858,
                            "src": "31734:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2897,
                              "name": "rSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2858,
                              "src": "31744:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 2898,
                                "name": "_reflectionBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 930,
                                "src": "31754:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2902,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2899,
                                  "name": "_excludedFromReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 945,
                                  "src": "31774:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2901,
                                "indexExpression": {
                                  "id": 2900,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2866,
                                  "src": "31794:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "31774:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31754:43:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "31744:53:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31734:63:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2905,
                        "nodeType": "ExpressionStatement",
                        "src": "31734:63:7"
                      },
                      {
                        "expression": {
                          "id": 2914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2906,
                            "name": "tSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2862,
                            "src": "31811:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2907,
                              "name": "tSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2862,
                              "src": "31821:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 2908,
                                "name": "_tokenBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 934,
                                "src": "31831:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 2912,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2909,
                                  "name": "_excludedFromReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 945,
                                  "src": "31846:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 2911,
                                "indexExpression": {
                                  "id": 2910,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2866,
                                  "src": "31866:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "31846:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31831:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "31821:48:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31811:58:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2915,
                        "nodeType": "ExpressionStatement",
                        "src": "31811:58:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2869,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2866,
                      "src": "31519:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2870,
                        "name": "_excludedFromReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "31523:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "31523:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31519:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2917,
                  "initializationExpression": {
                    "assignments": [
                      2866
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2866,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "31512:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2917,
                        "src": "31504:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2865,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "31504:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2868,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31516:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "31504:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "31551:3:7",
                      "subExpression": {
                        "id": 2873,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2866,
                        "src": "31551:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2875,
                    "nodeType": "ExpressionStatement",
                    "src": "31551:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "31499:381:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2918,
                      "name": "rSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2858,
                      "src": "31893:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2919,
                        "name": "_reflectionTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "31903:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 2920,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "31922:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "31903:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31893:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2927,
                  "nodeType": "IfStatement",
                  "src": "31889:86:7",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "id": 2923,
                          "name": "_reflectionTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 979,
                          "src": "31944:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2924,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 975,
                          "src": "31962:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2925,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "31943:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "functionReturnParameters": 2856,
                    "id": 2926,
                    "nodeType": "Return",
                    "src": "31936:39:7"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 2928,
                        "name": "rSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2858,
                        "src": "31993:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2929,
                        "name": "tSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2862,
                        "src": "32002:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2930,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "31992:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2856,
                  "id": 2931,
                  "nodeType": "Return",
                  "src": "31985:25:7"
                }
              ]
            },
            "documentation": {
              "id": 2850,
              "nodeType": "StructuredDocumentation",
              "src": "31247:79:7",
              "text": " @dev Returns the current reflection supply and token supply."
            },
            "id": 2933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCurrentSupply",
            "nameLocation": "31340:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31357:2:7"
            },
            "returnParameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2933,
                  "src": "31381:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31381:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2933,
                  "src": "31390:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31390:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31380:18:7"
            },
            "scope": 3356,
            "src": "31331:686:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2959,
              "nodeType": "Block",
              "src": "32196:71:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2945,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2936,
                          "src": "32213:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 2946,
                          "name": "tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2938,
                          "src": "32222:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "32213:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 2948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32229:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 2949,
                              "name": "taxDecimals_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2940,
                              "src": "32235:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "32229:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2951,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "32228:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "32213:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32252:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 2954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32258:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "32252:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        }
                      ],
                      "id": 2956,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "32251:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      }
                    },
                    "src": "32213:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2944,
                  "id": 2958,
                  "nodeType": "Return",
                  "src": "32206:54:7"
                }
              ]
            },
            "documentation": {
              "id": 2934,
              "nodeType": "StructuredDocumentation",
              "src": "32023:67:7",
              "text": " @dev Returns fee based on `amount` and `taxRate`"
            },
            "id": 2960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateTax",
            "nameLocation": "32104:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2936,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "32126:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "32118:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32118:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2938,
                  "mutability": "mutable",
                  "name": "tax",
                  "nameLocation": "32140:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "32134:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2937,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "32134:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2940,
                  "mutability": "mutable",
                  "name": "taxDecimals_",
                  "nameLocation": "32151:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "32145:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2939,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "32145:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32117:47:7"
            },
            "returnParameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "32187:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32187:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32186:9:7"
            },
            "scope": 3356,
            "src": "32095:172:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3005,
              "nodeType": "Block",
              "src": "32812:384:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "32830:17:7",
                        "subExpression": {
                          "id": 2971,
                          "name": "_autoBurnEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "32831:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4175746f206275726e206665617475726520697320616c726561647920656e61626c65642e",
                        "id": 2973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32849:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15acc0a182f8760166ea3f905d96c4170be164d9044a1426b8b358151533ede9",
                          "typeString": "literal_string \"Auto burn feature is already enabled.\""
                        },
                        "value": "Auto burn feature is already enabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15acc0a182f8760166ea3f905d96c4170be164d9044a1426b8b358151533ede9",
                          "typeString": "literal_string \"Auto burn feature is already enabled.\""
                        }
                      ],
                      "id": 2970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32822:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32822:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2975,
                  "nodeType": "ExpressionStatement",
                  "src": "32822:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2977,
                          "name": "taxBurn_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2963,
                          "src": "32907:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "32918:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "32907:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546178206d7573742062652067726561746572207468616e20302e",
                        "id": 2980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32921:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334",
                          "typeString": "literal_string \"Tax must be greater than 0.\""
                        },
                        "value": "Tax must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334",
                          "typeString": "literal_string \"Tax must be greater than 0.\""
                        }
                      ],
                      "id": 2976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32899:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32899:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "32899:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2984,
                            "name": "taxBurnDecimals_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2965,
                            "src": "32969:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 2985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32988:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "32969:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2987,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "32994:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                              "typeString": "function () view returns (uint8)"
                            }
                          },
                          "id": 2988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32994:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "32969:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617820646563696d616c73206d757374206265206c657373207468616e20746f6b656e20646563696d616c73202d2032",
                        "id": 2990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33006:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8",
                          "typeString": "literal_string \"Tax decimals must be less than token decimals - 2\""
                        },
                        "value": "Tax decimals must be less than token decimals - 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8",
                          "typeString": "literal_string \"Tax decimals must be less than token decimals - 2\""
                        }
                      ],
                      "id": 2983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32961:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32961:97:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2992,
                  "nodeType": "ExpressionStatement",
                  "src": "32961:97:7"
                },
                {
                  "expression": {
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2993,
                      "name": "_autoBurnEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "33077:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33096:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "33077:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2996,
                  "nodeType": "ExpressionStatement",
                  "src": "33077:23:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2998,
                        "name": "taxBurn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2963,
                        "src": "33121:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2999,
                        "name": "taxBurnDecimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2965,
                        "src": "33131:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 2997,
                      "name": "setTaxBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3255,
                      "src": "33110:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8)"
                      }
                    },
                    "id": 3000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33110:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3001,
                  "nodeType": "ExpressionStatement",
                  "src": "33110:38:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3002,
                      "name": "EnabledAutoBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "33172:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33172:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3004,
                  "nodeType": "EmitStatement",
                  "src": "33167:22:7"
                }
              ]
            },
            "documentation": {
              "id": 2961,
              "nodeType": "StructuredDocumentation",
              "src": "32312:414:7",
              "text": " @dev Enables the auto burn feature.\n Burn transaction amount * `taxBurn_` amount of tokens each transaction when enabled.\n Emits a {EnabledAutoBurn} event.\n Requirements:\n - auto burn feature mush be disabled.\n - tax must be greater than 0.\n - tax decimals + 2 must be less than token decimals. \n (because tax rate is in percentage)"
            },
            "functionSelector": "4895c3e6",
            "id": 3006,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2968,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2967,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "32802:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "32802:9:7"
              }
            ],
            "name": "enableAutoBurn",
            "nameLocation": "32740:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2963,
                  "mutability": "mutable",
                  "name": "taxBurn_",
                  "nameLocation": "32761:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3006,
                  "src": "32755:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2962,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "32755:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2965,
                  "mutability": "mutable",
                  "name": "taxBurnDecimals_",
                  "nameLocation": "32777:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3006,
                  "src": "32771:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2964,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "32771:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32754:40:7"
            },
            "returnParameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32812:0:7"
            },
            "scope": 3356,
            "src": "32731:465:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3051,
              "nodeType": "Block",
              "src": "33703:369:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "33721:15:7",
                        "subExpression": {
                          "id": 3017,
                          "name": "_rewardEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1001,
                          "src": "33722:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264206665617475726520697320616c726561647920656e61626c65642e",
                        "id": 3019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33738:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd8a4ed25a5d22ae5e8d18ceecda8323bdb45e6a59eea1bb81f53a5014c63deb",
                          "typeString": "literal_string \"Reward feature is already enabled.\""
                        },
                        "value": "Reward feature is already enabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd8a4ed25a5d22ae5e8d18ceecda8323bdb45e6a59eea1bb81f53a5014c63deb",
                          "typeString": "literal_string \"Reward feature is already enabled.\""
                        }
                      ],
                      "id": 3016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "33713:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33713:62:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "33713:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3023,
                          "name": "taxReward_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3009,
                          "src": "33793:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "33806:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "33793:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546178206d7573742062652067726561746572207468616e20302e",
                        "id": 3026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33809:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334",
                          "typeString": "literal_string \"Tax must be greater than 0.\""
                        },
                        "value": "Tax must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334",
                          "typeString": "literal_string \"Tax must be greater than 0.\""
                        }
                      ],
                      "id": 3022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "33785:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33785:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3028,
                  "nodeType": "ExpressionStatement",
                  "src": "33785:54:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3030,
                            "name": "taxRewardDecimals_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3011,
                            "src": "33857:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 3031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33878:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "33857:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3033,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "33884:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                              "typeString": "function () view returns (uint8)"
                            }
                          },
                          "id": 3034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33884:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "33857:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617820646563696d616c73206d757374206265206c657373207468616e20746f6b656e20646563696d616c73202d2032",
                        "id": 3036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33896:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8",
                          "typeString": "literal_string \"Tax decimals must be less than token decimals - 2\""
                        },
                        "value": "Tax decimals must be less than token decimals - 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8",
                          "typeString": "literal_string \"Tax decimals must be less than token decimals - 2\""
                        }
                      ],
                      "id": 3029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "33849:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33849:99:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3038,
                  "nodeType": "ExpressionStatement",
                  "src": "33849:99:7"
                },
                {
                  "expression": {
                    "id": 3041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3039,
                      "name": "_rewardEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "33959:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33976:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "33959:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3042,
                  "nodeType": "ExpressionStatement",
                  "src": "33959:21:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3044,
                        "name": "taxReward_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3009,
                        "src": "34003:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3045,
                        "name": "taxRewardDecimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3011,
                        "src": "34015:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3043,
                      "name": "setTaxReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3305,
                      "src": "33990:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8)"
                      }
                    },
                    "id": 3046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33990:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3047,
                  "nodeType": "ExpressionStatement",
                  "src": "33990:44:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3048,
                      "name": "EnabledReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1110,
                      "src": "34050:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34050:15:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3050,
                  "nodeType": "EmitStatement",
                  "src": "34045:20:7"
                }
              ]
            },
            "documentation": {
              "id": 3007,
              "nodeType": "StructuredDocumentation",
              "src": "33202:413:7",
              "text": " @dev Enables the reward feature.\n Distribute transaction amount * `taxReward_` amount of tokens each transaction when enabled.\n Emits a {EnabledReward} event.\n Requirements:\n - reward feature mush be disabled.\n - tax must be greater than 0.\n - tax decimals + 2 must be less than token decimals. \n (because tax rate is in percentage)"
            },
            "functionSelector": "998acc0e",
            "id": 3052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3014,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3013,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "33693:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "33693:9:7"
              }
            ],
            "name": "enableReward",
            "nameLocation": "33629:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3009,
                  "mutability": "mutable",
                  "name": "taxReward_",
                  "nameLocation": "33648:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3052,
                  "src": "33642:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3008,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "33642:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3011,
                  "mutability": "mutable",
                  "name": "taxRewardDecimals_",
                  "nameLocation": "33666:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3052,
                  "src": "33660:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3010,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "33660:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33641:44:7"
            },
            "returnParameters": {
              "id": 3015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33703:0:7"
            },
            "scope": 3356,
            "src": "33620:452:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3103,
              "nodeType": "Block",
              "src": "34746:506:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "34764:27:7",
                        "subExpression": {
                          "id": 3065,
                          "name": "_autoSwapAndLiquifyEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 997,
                          "src": "34765:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4175746f207377617020616e64206c697175696679206665617475726520697320616c726561647920656e61626c65642e",
                        "id": 3067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34793:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4eb09766ac0a18b39065874dc9a93c945960f3a3b0c631c61769f293fdb5a878",
                          "typeString": "literal_string \"Auto swap and liquify feature is already enabled.\""
                        },
                        "value": "Auto swap and liquify feature is already enabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4eb09766ac0a18b39065874dc9a93c945960f3a3b0c631c61769f293fdb5a878",
                          "typeString": "literal_string \"Auto swap and liquify feature is already enabled.\""
                        }
                      ],
                      "id": 3064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "34756:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34756:89:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3069,
                  "nodeType": "ExpressionStatement",
                  "src": "34756:89:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3071,
                          "name": "taxLiquify_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3055,
                          "src": "34863:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "34877:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "34863:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546178206d7573742062652067726561746572207468616e20302e",
                        "id": 3074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34880:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334",
                          "typeString": "literal_string \"Tax must be greater than 0.\""
                        },
                        "value": "Tax must be greater than 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93f854ba661f59e8c0d957a689428dc060f0a9cc2cb3a878b81e625892fc4334",
                          "typeString": "literal_string \"Tax must be greater than 0.\""
                        }
                      ],
                      "id": 3070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "34855:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34855:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3076,
                  "nodeType": "ExpressionStatement",
                  "src": "34855:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 3080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3078,
                            "name": "taxLiquifyDecimals_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3057,
                            "src": "34928:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 3079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34950:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "34928:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3081,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "34956:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                              "typeString": "function () view returns (uint8)"
                            }
                          },
                          "id": 3082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34956:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "34928:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617820646563696d616c73206d757374206265206c657373207468616e20746f6b656e20646563696d616c73202d2032",
                        "id": 3084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34968:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8",
                          "typeString": "literal_string \"Tax decimals must be less than token decimals - 2\""
                        },
                        "value": "Tax decimals must be less than token decimals - 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eba2048a1f5bf5fd6cf67774a18fea0877425051703a9b688bf80f56cb916b8",
                          "typeString": "literal_string \"Tax decimals must be less than token decimals - 2\""
                        }
                      ],
                      "id": 3077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "34920:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34920:100:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3086,
                  "nodeType": "ExpressionStatement",
                  "src": "34920:100:7"
                },
                {
                  "expression": {
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3087,
                      "name": "_minTokensBeforeSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "35031:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3088,
                      "name": "minTokensBeforeSwap_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3059,
                      "src": "35054:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35031:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3090,
                  "nodeType": "ExpressionStatement",
                  "src": "35031:43:7"
                },
                {
                  "expression": {
                    "id": 3093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3091,
                      "name": "_autoSwapAndLiquifyEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "35104:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "35133:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "35104:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3094,
                  "nodeType": "ExpressionStatement",
                  "src": "35104:33:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3096,
                        "name": "taxLiquify_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3055,
                        "src": "35161:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3097,
                        "name": "taxLiquifyDecimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3057,
                        "src": "35174:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3095,
                      "name": "setTaxLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3355,
                      "src": "35147:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8)"
                      }
                    },
                    "id": 3098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35147:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3099,
                  "nodeType": "ExpressionStatement",
                  "src": "35147:47:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3100,
                      "name": "EnabledAutoSwapAndLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1112,
                      "src": "35218:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35218:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3102,
                  "nodeType": "EmitStatement",
                  "src": "35213:32:7"
                }
              ]
            },
            "documentation": {
              "id": 3053,
              "nodeType": "StructuredDocumentation",
              "src": "34078:537:7",
              "text": " @dev Enables the auto swap and liquify feature.\n Swaps half of transaction amount * `taxLiquify_` amount of tokens \n to ETH and pair with the other half of tokens to the LP each transaction when enabled.\n Emits a {EnabledAutoSwapAndLiquify} event.\n Requirements:\n - auto swap and liquify feature mush be disabled.\n - tax must be greater than 0.\n - tax decimals + 2 must be less than token decimals. \n (because tax rate is in percentage)"
            },
            "functionSelector": "48abdec5",
            "id": 3104,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3062,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3061,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "34736:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "34736:9:7"
              }
            ],
            "name": "enableAutoSwapAndLiquify",
            "nameLocation": "34629:24:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3055,
                  "mutability": "mutable",
                  "name": "taxLiquify_",
                  "nameLocation": "34660:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3104,
                  "src": "34654:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3054,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "34654:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "taxLiquifyDecimals_",
                  "nameLocation": "34679:19:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3104,
                  "src": "34673:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "34673:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3059,
                  "mutability": "mutable",
                  "name": "minTokensBeforeSwap_",
                  "nameLocation": "34707:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3104,
                  "src": "34699:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34699:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34653:75:7"
            },
            "returnParameters": {
              "id": 3063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34746:0:7"
            },
            "scope": 3356,
            "src": "34620:632:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3127,
              "nodeType": "Block",
              "src": "35489:187:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3111,
                        "name": "_autoBurnEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "35507:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4175746f206275726e206665617475726520697320616c72656164792064697361626c65642e",
                        "id": 3112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35525:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c17d0921cf8aaa6cca9bbf85ecc107c033ec3a37900fd4f49592cdf7d08ba9c8",
                          "typeString": "literal_string \"Auto burn feature is already disabled.\""
                        },
                        "value": "Auto burn feature is already disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c17d0921cf8aaa6cca9bbf85ecc107c033ec3a37900fd4f49592cdf7d08ba9c8",
                          "typeString": "literal_string \"Auto burn feature is already disabled.\""
                        }
                      ],
                      "id": 3110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "35499:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35499:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3114,
                  "nodeType": "ExpressionStatement",
                  "src": "35499:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35588:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35591:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3115,
                      "name": "setTaxBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3255,
                      "src": "35577:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8)"
                      }
                    },
                    "id": 3118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35577:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3119,
                  "nodeType": "ExpressionStatement",
                  "src": "35577:16:7"
                },
                {
                  "expression": {
                    "id": 3122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3120,
                      "name": "_autoBurnEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "35603:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "35622:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "35603:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3123,
                  "nodeType": "ExpressionStatement",
                  "src": "35603:24:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3124,
                      "name": "DisabledAutoBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1114,
                      "src": "35651:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35651:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3126,
                  "nodeType": "EmitStatement",
                  "src": "35646:23:7"
                }
              ]
            },
            "documentation": {
              "id": 3105,
              "nodeType": "StructuredDocumentation",
              "src": "35258:182:7",
              "text": " @dev Disables the auto burn feature.\n Emits a {DisabledAutoBurn} event.\n Requirements:\n - auto burn feature mush be enabled."
            },
            "functionSelector": "7656e146",
            "id": 3128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3107,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "35479:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "35479:9:7"
              }
            ],
            "name": "disableAutoBurn",
            "nameLocation": "35454:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35469:2:7"
            },
            "returnParameters": {
              "id": 3109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35489:0:7"
            },
            "scope": 3356,
            "src": "35445:231:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3151,
              "nodeType": "Block",
              "src": "35911:180:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3135,
                        "name": "_rewardEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "35929:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264206665617475726520697320616c72656164792064697361626c65642e",
                        "id": 3136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35945:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_728ccf54956bf9ca81e6c1cfc99a84c22d525cf456bb0efab35f9745aae83260",
                          "typeString": "literal_string \"Reward feature is already disabled.\""
                        },
                        "value": "Reward feature is already disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_728ccf54956bf9ca81e6c1cfc99a84c22d525cf456bb0efab35f9745aae83260",
                          "typeString": "literal_string \"Reward feature is already disabled.\""
                        }
                      ],
                      "id": 3134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "35921:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35921:62:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3138,
                  "nodeType": "ExpressionStatement",
                  "src": "35921:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36007:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36010:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3139,
                      "name": "setTaxReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3305,
                      "src": "35994:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8)"
                      }
                    },
                    "id": 3142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35994:18:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3143,
                  "nodeType": "ExpressionStatement",
                  "src": "35994:18:7"
                },
                {
                  "expression": {
                    "id": 3146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3144,
                      "name": "_rewardEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "36022:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "36039:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "36022:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3147,
                  "nodeType": "ExpressionStatement",
                  "src": "36022:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3148,
                      "name": "DisabledReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "36068:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36068:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "EmitStatement",
                  "src": "36063:21:7"
                }
              ]
            },
            "documentation": {
              "id": 3129,
              "nodeType": "StructuredDocumentation",
              "src": "35682:182:7",
              "text": " @dev Disables the reward feature.\n Emits a {DisabledReward} event.\n Requirements:\n - reward feature mush be enabled."
            },
            "functionSelector": "470d5cbd",
            "id": 3152,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3131,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "35901:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "35901:9:7"
              }
            ],
            "name": "disableReward",
            "nameLocation": "35878:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35891:2:7"
            },
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35911:0:7"
            },
            "scope": 3356,
            "src": "35869:222:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3175,
              "nodeType": "Block",
              "src": "36380:233:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3159,
                        "name": "_autoSwapAndLiquifyEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "36398:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4175746f207377617020616e64206c697175696679206665617475726520697320616c72656164792064697361626c65642e",
                        "id": 3160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36426:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a85156a079636d99c336de56af16122b20bc794946f6bb12eec5db01646154d",
                          "typeString": "literal_string \"Auto swap and liquify feature is already disabled.\""
                        },
                        "value": "Auto swap and liquify feature is already disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a85156a079636d99c336de56af16122b20bc794946f6bb12eec5db01646154d",
                          "typeString": "literal_string \"Auto swap and liquify feature is already disabled.\""
                        }
                      ],
                      "id": 3158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "36390:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36390:89:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3162,
                  "nodeType": "ExpressionStatement",
                  "src": "36390:89:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 3164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36504:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36507:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3163,
                      "name": "setTaxLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3355,
                      "src": "36490:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8)"
                      }
                    },
                    "id": 3166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36490:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3167,
                  "nodeType": "ExpressionStatement",
                  "src": "36490:19:7"
                },
                {
                  "expression": {
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3168,
                      "name": "_autoSwapAndLiquifyEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "36519:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "36548:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "36519:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "36519:34:7"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3172,
                      "name": "DisabledAutoSwapAndLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "36578:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36578:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3174,
                  "nodeType": "EmitStatement",
                  "src": "36573:33:7"
                }
              ]
            },
            "documentation": {
              "id": 3153,
              "nodeType": "StructuredDocumentation",
              "src": "36097:224:7",
              "text": " @dev Disables the auto swap and liquify feature.\n Emits a {DisabledAutoSwapAndLiquify} event.\n Requirements:\n - auto swap and liquify feature mush be enabled."
            },
            "functionSelector": "6483ea8b",
            "id": 3176,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3155,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "36370:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "36370:9:7"
              }
            ],
            "name": "disableAutoSwapAndLiquify",
            "nameLocation": "36335:25:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36360:2:7"
            },
            "returnParameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36380:0:7"
            },
            "scope": 3356,
            "src": "36326:287:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3204,
              "nodeType": "Block",
              "src": "36918:299:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3185,
                          "name": "minTokensBeforeSwap_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3179,
                          "src": "36936:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 3186,
                          "name": "_currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "36959:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "36936:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e546f6b656e734265666f726553776170206d75737420626520686967686572207468616e2063757272656e7420737570706c792e",
                        "id": 3188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36975:57:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4521b557de359d27a7e6ab253393f81d6a07b725eb9ce6ae4353afbbb23d9b2b",
                          "typeString": "literal_string \"minTokensBeforeSwap must be higher than current supply.\""
                        },
                        "value": "minTokensBeforeSwap must be higher than current supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4521b557de359d27a7e6ab253393f81d6a07b725eb9ce6ae4353afbbb23d9b2b",
                          "typeString": "literal_string \"minTokensBeforeSwap must be higher than current supply.\""
                        }
                      ],
                      "id": 3184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "36928:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36928:105:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3190,
                  "nodeType": "ExpressionStatement",
                  "src": "36928:105:7"
                },
                {
                  "assignments": [
                    3192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3192,
                      "mutability": "mutable",
                      "name": "previous",
                      "nameLocation": "37052:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3204,
                      "src": "37044:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3191,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "37044:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3194,
                  "initialValue": {
                    "id": 3193,
                    "name": "_minTokensBeforeSwap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 989,
                    "src": "37063:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37044:39:7"
                },
                {
                  "expression": {
                    "id": 3197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3195,
                      "name": "_minTokensBeforeSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "37093:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3196,
                      "name": "minTokensBeforeSwap_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3179,
                      "src": "37116:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37093:43:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3198,
                  "nodeType": "ExpressionStatement",
                  "src": "37093:43:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3200,
                        "name": "previous",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3192,
                        "src": "37179:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3201,
                        "name": "_minTokensBeforeSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "37189:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3199,
                      "name": "MinTokensBeforeSwapUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1082,
                      "src": "37152:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37152:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3203,
                  "nodeType": "EmitStatement",
                  "src": "37147:63:7"
                }
              ]
            },
            "documentation": {
              "id": 3177,
              "nodeType": "StructuredDocumentation",
              "src": "36620:214:7",
              "text": " @dev Updates `_minTokensBeforeSwap`\n Emits a {MinTokensBeforeSwap} event.\n Requirements:\n - `minTokensBeforeSwap_` must be less than _currentSupply."
            },
            "functionSelector": "48a46473",
            "id": 3205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "36908:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "36908:9:7"
              }
            ],
            "name": "setMinTokensBeforeSwap",
            "nameLocation": "36848:22:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3179,
                  "mutability": "mutable",
                  "name": "minTokensBeforeSwap_",
                  "nameLocation": "36879:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3205,
                  "src": "36871:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36871:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36870:30:7"
            },
            "returnParameters": {
              "id": 3183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36918:0:7"
            },
            "scope": 3356,
            "src": "36839:378:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3254,
              "nodeType": "Block",
              "src": "37525:446:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3216,
                        "name": "_autoBurnEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "37543:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4175746f206275726e2066656174757265206d75737420626520656e61626c65642e205472792074686520456e61626c654175746f4275726e2066756e6374696f6e2e",
                        "id": 3217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37561:69:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5dab928377afe20026a79205964536c0398951d62be200d6adbc03927d7d7530",
                          "typeString": "literal_string \"Auto burn feature must be enabled. Try the EnableAutoBurn function.\""
                        },
                        "value": "Auto burn feature must be enabled. Try the EnableAutoBurn function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5dab928377afe20026a79205964536c0398951d62be200d6adbc03927d7d7530",
                          "typeString": "literal_string \"Auto burn feature must be enabled. Try the EnableAutoBurn function.\""
                        }
                      ],
                      "id": 3215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "37535:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37535:96:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3219,
                  "nodeType": "ExpressionStatement",
                  "src": "37535:96:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 3225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 3223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3221,
                              "name": "taxBurn_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3208,
                              "src": "37649:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3222,
                              "name": "_taxReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "37660:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "37649:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3224,
                            "name": "_taxLiquify",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "37673:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "37649:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 3226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37687:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "37649:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461782066656520746f6f20686967682e",
                        "id": 3228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37692:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a",
                          "typeString": "literal_string \"Tax fee too high.\""
                        },
                        "value": "Tax fee too high."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a",
                          "typeString": "literal_string \"Tax fee too high.\""
                        }
                      ],
                      "id": 3220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "37641:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37641:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3230,
                  "nodeType": "ExpressionStatement",
                  "src": "37641:71:7"
                },
                {
                  "assignments": [
                    3232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3232,
                      "mutability": "mutable",
                      "name": "previousTax",
                      "nameLocation": "37729:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3254,
                      "src": "37723:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 3231,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "37723:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3234,
                  "initialValue": {
                    "id": 3233,
                    "name": "_taxBurn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 967,
                    "src": "37743:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37723:28:7"
                },
                {
                  "assignments": [
                    3236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3236,
                      "mutability": "mutable",
                      "name": "previousDecimals",
                      "nameLocation": "37767:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3254,
                      "src": "37761:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 3235,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "37761:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3238,
                  "initialValue": {
                    "id": 3237,
                    "name": "_taxBurnDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 961,
                    "src": "37786:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37761:41:7"
                },
                {
                  "expression": {
                    "id": 3241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3239,
                      "name": "_taxBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "37812:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3240,
                      "name": "taxBurn_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3208,
                      "src": "37823:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "37812:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3242,
                  "nodeType": "ExpressionStatement",
                  "src": "37812:19:7"
                },
                {
                  "expression": {
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3243,
                      "name": "_taxBurnDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "37841:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3244,
                      "name": "taxBurnDecimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3210,
                      "src": "37860:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "37841:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3246,
                  "nodeType": "ExpressionStatement",
                  "src": "37841:35:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3248,
                        "name": "previousTax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "37906:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3249,
                        "name": "previousDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3236,
                        "src": "37919:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3250,
                        "name": "taxBurn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3208,
                        "src": "37937:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3251,
                        "name": "taxBurnDecimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3210,
                        "src": "37947:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3247,
                      "name": "TaxBurnUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "37892:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8,uint8,uint8)"
                      }
                    },
                    "id": 3252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37892:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3253,
                  "nodeType": "EmitStatement",
                  "src": "37887:77:7"
                }
              ]
            },
            "documentation": {
              "id": 3206,
              "nodeType": "StructuredDocumentation",
              "src": "37223:220:7",
              "text": " @dev Updates taxBurn\n Emits a {TaxBurnUpdate} event.\n Requirements:\n - auto burn feature must be enabled.\n - total tax rate must be less than 100%."
            },
            "functionSelector": "681bdc99",
            "id": 3255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3212,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "37515:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "37515:9:7"
              }
            ],
            "name": "setTaxBurn",
            "nameLocation": "37457:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3208,
                  "mutability": "mutable",
                  "name": "taxBurn_",
                  "nameLocation": "37474:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3255,
                  "src": "37468:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3207,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "37468:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3210,
                  "mutability": "mutable",
                  "name": "taxBurnDecimals_",
                  "nameLocation": "37490:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3255,
                  "src": "37484:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3209,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "37484:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37467:40:7"
            },
            "returnParameters": {
              "id": 3214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37525:0:7"
            },
            "scope": 3356,
            "src": "37448:523:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3304,
              "nodeType": "Block",
              "src": "38286:455:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3266,
                        "name": "_rewardEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "38304:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265776172642066656174757265206d75737420626520656e61626c65642e205472792074686520456e61626c655265776172642066756e6374696f6e2e",
                        "id": 3267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38320:64:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c08611362f532e1f3ccc52623a3ec3cd434f4f64631173250c17e815580b470",
                          "typeString": "literal_string \"Reward feature must be enabled. Try the EnableReward function.\""
                        },
                        "value": "Reward feature must be enabled. Try the EnableReward function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c08611362f532e1f3ccc52623a3ec3cd434f4f64631173250c17e815580b470",
                          "typeString": "literal_string \"Reward feature must be enabled. Try the EnableReward function.\""
                        }
                      ],
                      "id": 3265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "38296:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38296:89:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3269,
                  "nodeType": "ExpressionStatement",
                  "src": "38296:89:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 3275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 3273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3271,
                              "name": "_taxBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "38403:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3272,
                              "name": "taxReward_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "38414:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "38403:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3274,
                            "name": "_taxLiquify",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "38427:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "38403:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 3276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "38441:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "38403:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461782066656520746f6f20686967682e",
                        "id": 3278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38446:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a",
                          "typeString": "literal_string \"Tax fee too high.\""
                        },
                        "value": "Tax fee too high."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a",
                          "typeString": "literal_string \"Tax fee too high.\""
                        }
                      ],
                      "id": 3270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "38395:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38395:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3280,
                  "nodeType": "ExpressionStatement",
                  "src": "38395:71:7"
                },
                {
                  "assignments": [
                    3282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3282,
                      "mutability": "mutable",
                      "name": "previousTax",
                      "nameLocation": "38483:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3304,
                      "src": "38477:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 3281,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "38477:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3284,
                  "initialValue": {
                    "id": 3283,
                    "name": "_taxReward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 969,
                    "src": "38497:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38477:30:7"
                },
                {
                  "assignments": [
                    3286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3286,
                      "mutability": "mutable",
                      "name": "previousDecimals",
                      "nameLocation": "38523:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3304,
                      "src": "38517:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 3285,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "38517:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3288,
                  "initialValue": {
                    "id": 3287,
                    "name": "_taxRewardDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 963,
                    "src": "38542:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38517:43:7"
                },
                {
                  "expression": {
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3289,
                      "name": "_taxReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "38570:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3290,
                      "name": "taxReward_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3258,
                      "src": "38583:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "38570:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3292,
                  "nodeType": "ExpressionStatement",
                  "src": "38570:23:7"
                },
                {
                  "expression": {
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3293,
                      "name": "_taxBurnDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 961,
                      "src": "38603:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3294,
                      "name": "taxRewardDecimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3260,
                      "src": "38622:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "38603:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3296,
                  "nodeType": "ExpressionStatement",
                  "src": "38603:37:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3298,
                        "name": "previousTax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3282,
                        "src": "38672:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3299,
                        "name": "previousDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3286,
                        "src": "38685:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3300,
                        "name": "taxReward_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3258,
                        "src": "38703:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3301,
                        "name": "taxRewardDecimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3260,
                        "src": "38715:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3297,
                      "name": "TaxRewardUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1066,
                      "src": "38656:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8,uint8,uint8)"
                      }
                    },
                    "id": 3302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38656:78:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3303,
                  "nodeType": "EmitStatement",
                  "src": "38651:83:7"
                }
              ]
            },
            "documentation": {
              "id": 3256,
              "nodeType": "StructuredDocumentation",
              "src": "37977:221:7",
              "text": " @dev Updates taxReward\n Emits a {TaxRewardUpdate} event.\n Requirements:\n - reward feature must be enabled.\n - total tax rate must be less than 100%."
            },
            "functionSelector": "fa6e3f54",
            "id": 3305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3262,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "38276:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "38276:9:7"
              }
            ],
            "name": "setTaxReward",
            "nameLocation": "38212:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3258,
                  "mutability": "mutable",
                  "name": "taxReward_",
                  "nameLocation": "38231:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3305,
                  "src": "38225:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3257,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "38225:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "taxRewardDecimals_",
                  "nameLocation": "38249:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3305,
                  "src": "38243:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "38243:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38224:44:7"
            },
            "returnParameters": {
              "id": 3264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38286:0:7"
            },
            "scope": 3356,
            "src": "38203:538:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3354,
              "nodeType": "Block",
              "src": "39076:505:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3316,
                        "name": "_autoSwapAndLiquifyEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "39094:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4175746f207377617020616e64206c6971756966792066656174757265206d75737420626520656e61626c65642e205472792074686520456e61626c654175746f53776170416e644c6971756966792066756e6374696f6e2e",
                        "id": 3317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39122:91:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_157907442069974a768f9f93170cb80081c654c85cc3209203c461eb5ad85641",
                          "typeString": "literal_string \"Auto swap and liquify feature must be enabled. Try the EnableAutoSwapAndLiquify function.\""
                        },
                        "value": "Auto swap and liquify feature must be enabled. Try the EnableAutoSwapAndLiquify function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_157907442069974a768f9f93170cb80081c654c85cc3209203c461eb5ad85641",
                          "typeString": "literal_string \"Auto swap and liquify feature must be enabled. Try the EnableAutoSwapAndLiquify function.\""
                        }
                      ],
                      "id": 3315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "39086:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39086:128:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3319,
                  "nodeType": "ExpressionStatement",
                  "src": "39086:128:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 3325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 3323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3321,
                              "name": "_taxBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "39232:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3322,
                              "name": "_taxReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "39243:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "39232:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 3324,
                            "name": "taxLiquify_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3308,
                            "src": "39256:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "39232:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 3326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39270:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "39232:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5461782066656520746f6f20686967682e",
                        "id": 3328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39275:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a",
                          "typeString": "literal_string \"Tax fee too high.\""
                        },
                        "value": "Tax fee too high."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_231126a09b58c5a31a6a6958ebda9669ff9e9c8a382ccf1165404e513700982a",
                          "typeString": "literal_string \"Tax fee too high.\""
                        }
                      ],
                      "id": 3320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "39224:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39224:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3330,
                  "nodeType": "ExpressionStatement",
                  "src": "39224:71:7"
                },
                {
                  "assignments": [
                    3332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3332,
                      "mutability": "mutable",
                      "name": "previousTax",
                      "nameLocation": "39312:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "39306:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 3331,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "39306:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3334,
                  "initialValue": {
                    "id": 3333,
                    "name": "_taxLiquify",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 971,
                    "src": "39326:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39306:31:7"
                },
                {
                  "assignments": [
                    3336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3336,
                      "mutability": "mutable",
                      "name": "previousDecimals",
                      "nameLocation": "39353:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 3354,
                      "src": "39347:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 3335,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "39347:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3338,
                  "initialValue": {
                    "id": 3337,
                    "name": "_taxLiquifyDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 965,
                    "src": "39372:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39347:44:7"
                },
                {
                  "expression": {
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3339,
                      "name": "_taxLiquify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "39401:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3340,
                      "name": "taxLiquify_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3308,
                      "src": "39415:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "39401:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3342,
                  "nodeType": "ExpressionStatement",
                  "src": "39401:25:7"
                },
                {
                  "expression": {
                    "id": 3345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3343,
                      "name": "_taxLiquifyDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "39436:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3344,
                      "name": "taxLiquifyDecimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3310,
                      "src": "39458:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "39436:41:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3346,
                  "nodeType": "ExpressionStatement",
                  "src": "39436:41:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3348,
                        "name": "previousTax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "39510:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3349,
                        "name": "previousDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3336,
                        "src": "39523:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3350,
                        "name": "taxLiquify_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3308,
                        "src": "39541:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3351,
                        "name": "taxLiquifyDecimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "39554:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3347,
                      "name": "TaxLiquifyUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "39493:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint8,uint8,uint8,uint8)"
                      }
                    },
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39493:81:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3353,
                  "nodeType": "EmitStatement",
                  "src": "39488:86:7"
                }
              ]
            },
            "documentation": {
              "id": 3306,
              "nodeType": "StructuredDocumentation",
              "src": "38747:238:7",
              "text": " @dev Updates taxLiquify\n Emits a {TaxLiquifyUpdate} event.\n Requirements:\n - auto swap and liquify feature must be enabled.\n - total tax rate must be less than 100%."
            },
            "functionSelector": "d3f1e9e6",
            "id": 3355,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3313,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3312,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "39066:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "39066:9:7"
              }
            ],
            "name": "setTaxLiquify",
            "nameLocation": "38999:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3308,
                  "mutability": "mutable",
                  "name": "taxLiquify_",
                  "nameLocation": "39019:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "39013:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "39013:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3310,
                  "mutability": "mutable",
                  "name": "taxLiquifyDecimals_",
                  "nameLocation": "39038:19:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "39032:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3309,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "39032:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39012:46:7"
            },
            "returnParameters": {
              "id": 3314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39076:0:7"
            },
            "scope": 3356,
            "src": "38990:591:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3357,
        "src": "669:38915:7",
        "usedErrors": []
      }
    ],
    "src": "33:39552:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-27T09:56:47.405Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "airdrop(uint256)": {
        "details": "Airdrop tokens to all holders that are included from reward.   Requirements: - the caller must have a balance of at least `amount`."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "autoBurnEnabled()": {
        "details": "Returns true if auto burn feature is enabled."
      },
      "autoSwapAndLiquifyEnabled()": {
        "details": "Returns true if auto swap and liquify feature is enabled."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "currentSupply()": {
        "details": "Returns current supply of the token.  (currentSupply := totalSupply - totalBurnt)"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "disableAutoBurn()": {
        "details": "Disables the auto burn feature. Emits a {DisabledAutoBurn} event. Requirements: - auto burn feature mush be enabled."
      },
      "disableAutoSwapAndLiquify()": {
        "details": "Disables the auto swap and liquify feature. Emits a {DisabledAutoSwapAndLiquify} event. Requirements: - auto swap and liquify feature mush be enabled."
      },
      "disableReward()": {
        "details": "Disables the reward feature. Emits a {DisabledReward} event. Requirements: - reward feature mush be enabled."
      },
      "enableAutoBurn(uint8,uint8)": {
        "details": "Enables the auto burn feature. Burn transaction amount * `taxBurn_` amount of tokens each transaction when enabled. Emits a {EnabledAutoBurn} event. Requirements: - auto burn feature mush be disabled. - tax must be greater than 0. - tax decimals + 2 must be less than token decimals.  (because tax rate is in percentage)"
      },
      "enableAutoSwapAndLiquify(uint8,uint8,uint256)": {
        "details": "Enables the auto swap and liquify feature. Swaps half of transaction amount * `taxLiquify_` amount of tokens  to ETH and pair with the other half of tokens to the LP each transaction when enabled. Emits a {EnabledAutoSwapAndLiquify} event. Requirements: - auto swap and liquify feature mush be disabled. - tax must be greater than 0. - tax decimals + 2 must be less than token decimals.  (because tax rate is in percentage)"
      },
      "enableReward(uint8,uint8)": {
        "details": "Enables the reward feature. Distribute transaction amount * `taxReward_` amount of tokens each transaction when enabled. Emits a {EnabledReward} event. Requirements: - reward feature mush be disabled. - tax must be greater than 0. - tax decimals + 2 must be less than token decimals.  (because tax rate is in percentage)"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isExcludedFromFee(address)": {
        "details": "Returns whether an account is excluded from fee. "
      },
      "isExcludedFromReward(address)": {
        "details": "Returns whether an account is excluded from reward. "
      },
      "minTokensBeforeSwap()": {
        "details": "Returns the threshold before swap and liquify."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rewardEnabled()": {
        "details": "Returns true if reward feature is enabled."
      },
      "setMinTokensBeforeSwap(uint256)": {
        "details": "Updates `_minTokensBeforeSwap` Emits a {MinTokensBeforeSwap} event. Requirements: - `minTokensBeforeSwap_` must be less than _currentSupply."
      },
      "setTaxBurn(uint8,uint8)": {
        "details": "Updates taxBurn Emits a {TaxBurnUpdate} event. Requirements: - auto burn feature must be enabled. - total tax rate must be less than 100%."
      },
      "setTaxLiquify(uint8,uint8)": {
        "details": "Updates taxLiquify Emits a {TaxLiquifyUpdate} event. Requirements: - auto swap and liquify feature must be enabled. - total tax rate must be less than 100%."
      },
      "setTaxReward(uint8,uint8)": {
        "details": "Updates taxReward Emits a {TaxRewardUpdate} event. Requirements: - reward feature must be enabled. - total tax rate must be less than 100%."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "taxBurn()": {
        "details": "Returns the current burn tax."
      },
      "taxBurnDecimals()": {
        "details": "Returns the current burn tax decimals."
      },
      "taxLiquify()": {
        "details": "Returns the current liquify tax."
      },
      "taxLiquifyDecimals()": {
        "details": "Returns the current liquify tax decimals."
      },
      "taxReward()": {
        "details": "Returns the current reward tax."
      },
      "taxRewardDecimals()": {
        "details": "Returns the current reward tax decimals."
      },
      "totalBurnt()": {
        "details": "Returns the total number of tokens burnt. "
      },
      "totalETHLockedInLiquidity()": {
        "details": "Returns the total number of ETH locked in the LP."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "totalTokensLockedInLiquidity()": {
        "details": "Returns the total number of tokens locked in the LP."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "uniswapV2Pair()": {
        "details": "Returns the address of this token and WETH pair."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}